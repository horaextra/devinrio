%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: hackframps.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Marcelo Guerra
%%CreationDate: 9/11/09
%%BoundingBox: 0 0 352 38
%%HiResBoundingBox: 0 0 351.8160 37.0142
%%CropBox: 0 0 351.8160 37.0142
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 16 8%%BeginData: 4170 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0DFF7D2752FD10FFA87DA8FD04FF7DA8FD10FFA8FFFD04A8FFFF%FFA85227F852A8FD09FF2727A8FD0DFF7DFD08FFA8A8FD06FFA852527DFD%07FF27F8F827277DFD04FF7D52FD04FFA8F8F8A8FD0DFF7D27F8F8F87DFF%FFA8F8F8FD04FFA827A8FD07FFA8FD05F82727FFFFFF27F8277DF827A8FD%08FF52F852FD0CFFA8F852FD07FFF827A8FD04FF7DFD05F8A8FD04FF52F8%527D27F87DFD04FFF8F8FD05FF7DF827FD0CFF7DF852A87D277DFFFFFFF8%27FD04FFF8F87DFD07FFA8F8F87D7DA8A8FD04FF7DF8A8FFA8F87DFD09FF%27F8A8FD0BFFA8F827FD06FF52F8F8FD05FF7DF852FFA8F852FFFFFFA8F8%7DFFFF7DF87DFFFFFFA82727FD06FF52F87DFD0AFF7DF852FFFFFFA8FD04%FF2727FFFFFFF8F8A8FD09FFF827FD08FF7DF8A8FF7DF87DFD09FFA8F8F8%FD0BFF7DF8F87DFD04FFA8F82727A8FD04FFA8F87DFFFF27F8FFFFFF52F8%FFFFFFA8F8A8FD04FFF852FD07FF27F8A8FD09FF2727FD09FF2727FFFF27%F8A8FD0AFF5227FD08FFA8F8FFFF27F8FD0BFF7DF827FD0AFF7D2752F8FD%04FF5227FFF8A8FD04FFA8F87DFFFF52F8FFFFFF52F8A8FFFFA8F87DFD04%FF2752FD07FFF8F8F8FD08FFA8F87DFD09FF2727FF27F87DFD0BFF2727FD%08FF7DF87D27F87DFD0BFF7DF8F852FD09FF5252FFF852FFFFA8F8A8FFF8%7DFD05FFF87DFFFFF852FFFFFF7DF87DFFFFFFF8FD0552F827A8FD05FF52%27A8F827FD07FF7DF8A8FD09FF27527DF87DFD0CFF5227FFFFFFA8FD04FF%A8F8F8F8A8FD0CFFF8A87DF87DFD08FF2752FF52F8A8FF2752FFFFF87DFD%05FFF87DA82727A8FFFFFFA8F827FFFFA8FD04F82727F8F8A8FD04FFA8F8%7DFFA8F827FD06FF7DF8FD0AFF52F8F852FD0DFF27F8F827F8F852FFFFFF%7DF827F827A8FD0AFF5227FFFF52F8A8FD07FFF87DFFFFF8277DF8A8FFFF%2727FD05FFF87D5227A8FD05FF27F87DFFFFF8A8FD04FFF87DFD05FF52F8%FFA8FF52F87DFD05FF52F8FD0AFF522727F87DFD0CFF52F852527D7DFD04%FF7DF8FFA827F8A8FD09FFF852FFA8FFF827A8FD05FFA827A8FFFFA8F8F8%52FFFFFF5227FD05FFF87DFD08FFA8F87DFF7DF8FD05FFF852FD05FFF8F8%FD0427F8F87DFD04FF7DF8A8FD09FF5227FF27F87DFD0BFF5227FD08FF7D%F8A8FFA827F852FD07FF7DF8FD0527F827FD05FF7DF8FD04FF27F8A8FFFF%FF7DF8FD05FFF87DFD09FF27F8FFA8F8FD05FF2752FD04FF27277DA87DA8%A8A827F87DFFFFFFA8F827FD05FFA8FFFFFF2752FFFF27F87DFD0AFF5227%FD08FF7DF8FD04FF7DF827A8FD05FFF852A8A87DA8A8A8F827FD04FF5227%FD04FF7D52FD04FFA8F87DFFFFFFA8F87DFD09FF7DF8FF7DF8A8FD04FF27%52FFFFFF7DF87DFD07FFF8F87DFFFFFF27F852FFFFFF2727A8FFFF2727FF%FFFFF8F852FD09FF5227FD08FF52F8A8FD04FF7DF8F87DFFFFFF2727FD07%FF7DF827FFFFFF2727FD05FFA8FD05FFF87DFD04FFF87DFD09FF7DF8FFA8%F8FD05FF277DFFFFFFF827FD09FFF8F87DFFFFFF27F82752F8F87DFFFFFF%2752FD04FFF8F827FD08FF7D27FD08FF52F8FD06FFA8F8F827A87DF87DFD%08FF7DF827FFFFF87DFD0BFFF827FD04FFF87DFD07FF277DF852FFA852FD%05FFA8A8FFFFFF52A8FD09FFA8F8A8FD04FF52272752A8FD04FF527DFD04%FFA827A8FD08FF5227FD08FF5227A8FD07FF27F827A852FD0AFF5227FFA8%277DFD0BFF527DFFFFFFA8F8A8FD06FFA827F827A8FD39FF5227FD13FF7D%FD24FFA8FD08FFA8A8A8FD3AFF7DA8FD45FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-09-11T16:43:11-03:00</xmp:CreateDate>
         <xmp:ModifyDate>2009-09-11T16:43:12-03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-09-11T16:43:12-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>28</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAHAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AmH5I+c/zQv8A82POXlXz&#xA;drEOp2miK5VYoI4lEzTKIzEVVXCenX4WJ7b9aqvSPzg826t5R/LfW/MekrC+o6fFG0C3Cs0dXmSM&#xA;kqpUmiuSN+uKrvyj1zzDr35c6HrfmCSKTVdSt/rUrQII04SuzRAKCd/T4198VYJ/zkR+WHm7XY7L&#xA;zj5O1O6i1/y8BNHpayt6UqxN6nOGMngJwe1PjG3UCqrKfyW/N3S/zI8rrepxt9bswsWs6cD/AHct&#xA;PtoDv6UlCV8Ps9Rir0HFXYq8b1X8zPOvnbzlfeTvyve3s7TR29PzB5vu4vXjgl5FTFawn4JH+Ej4&#xA;tmoegoxVXWv5Y/nVpnnDRdRt/wAxJdV0ZJg2uWt/CI+UQNWSGGPkh9QVXqpTqCemKsj/AD8vdcsf&#xA;yi8yXuiXr6fqFvbq63UR4yCP1UEoRhurNGWAYbjFVL8ltfv3/JfQdc806issy2ck95qVw9KQpI/B&#xA;5ZHO5WILyY98VYp5R/Mz8y/zH8+Lf+TYLex/LXSZjb3l3fxnlqO9HaH4fUVlXdFBAH7ZNeIVe34q&#xA;o3n1v6nP9TKC79N/qxlqY/U4nhzpvx5daYq+Vvyeuvz6/Me68wrJ+YEuiHSblYbqP6pBdH1JfU5L&#xA;GB6aqqGOgo2KvbPJf5aecdE1i31HXPP+p+YI7cP/AKBJHHBbyM8ZQGRQZGYLyLAcutPDFWIf85eX&#xA;mu6d+XFnqOkateaY6aglvcx2krQrPFPE9VkKFWPFkFN6dajpRVhH5m+SD+TXkbRfNvlfzDqtp5jF&#xA;1bw3MFxcmW3umljaSZZLdlVSAY+lOnXfcKvpry/qE+paDpuo3EXoT3trBcTQDojyxq7Jv/KTTFUf&#xA;ir59/wCcgfJHnPRNft/zc8oX91cXOjFJNT0iWRnhS2iTizwx1FIytfWQeJYd8Vesflp+Yuhef/Kt&#xA;tr+ktxD/ALu8tGIMlvcKAXienhWqnupBxVlWKuxV8yD87Ne8v/8AORurWWsajPN5Emuxo/73/eWz&#xA;uDGjIwIAVSstVYk/ZJJrxxV9N4q+W/8AnIT85fOo8wXFt5Ivbiy0LyjNDH5g1S1K0e9uGIWD4gys&#xA;IwpHE7cuXIbDFX1GjpIiyIQyOAysOhB3BGKvnr/nIvVvzDb8w/JflPRfMM2i6J5mkS2laxrFcLJ9&#xA;YWOWRpVKuyiOVSqBgNjXFUF51/xv+SOt+WNUs/NWp+ZPK2pXa2Oq6brEwuXUkA/uXIqlUDFeNOJX&#xA;fkDir6A80a/a+XfLeqa9dqz22l2s13LGv2mEKF+K+7UoMVeDflv+U+n/AJsaRbfmV591O81HUtUm&#xA;llsdPtZzBa2UME5jSKP0/jDAxdVYe/xVbFUkgv8A8z9L/wCchfzCm/L3y/ba1LIbVNQW6kWGOFZI&#xA;kdW5NLBuzBvHFUb+cOu/85CXf5Y6/F5o8taPp2hmKL65cW9yZJwvroQY1EsgPxhQajFXrH5BP5jb&#xA;8qPL36ctrW142VsNMS1Zm52P1eP0JZqk0lk3ZgNvpriqt+dH5hjyR5Iub22PPXdQIsNBthQs95OO&#xA;KNxPUR/bPyp3xV4vL+UGsfllomjeePI2pre+cNLgr5q0wziSPUY5G9WdEXlU8Ps8R9oKGWjj4lXv&#xA;X5a/mP5f/MDyxBrujvTl8F5ZMwMttOB8UUgH3qf2hviqY+ddTm0nybr2qQMVnsNOu7qJgKkPDA8i&#xA;mg67rirzX/nEzSrO0/JjTryGhuNVubu6vW/aMiTtbip/4xwLir2PFWEfnfEkn5Q+blccgNLuGA90&#xA;Qsp+gjFXzV5Y8wf4zTyT+XHm26l8oeSILC2kjhmWSJtcnFCKXBAjSJ3rw+KlelXK8VX2DpOkaZo+&#xA;m2+maXbR2en2iCO2toVCoijsAPvPjiqLxV2Kvkz8nvzJ1ryr5m8+2Wn+TNW8wC81yeVm06FmFuVk&#xA;lHpzEKyofAE4q958jef/ADd5i1eW01TyPf8AlzT0gM0eoXssRDPVQIvSADAkMT36b4qwr/nMOf0v&#xA;yfKca+vqVrHWtKUEj1/4SmKvNJH1TRPzCtr7/nIqyv8AU7YSr+g9UjcS6HDJ1+K2gRV/Zqf2tviR&#xA;hvir6x03UtP1Owg1DTrmK8sblRJb3MDrJG6nurKSDiqJxV5X/wA5A+crrTfLdv5R0WRR5o85Sfoz&#xA;TwzcRFBJRbm4dv2VRG417E1/ZOKvONS8jXn5H3lr508g3v6X0KK3ig84aE8ys80cQAku4hU0Navt&#xA;/dmtP3ZYBV9A+T/OHl/zf5ftte0G5F1YXQ2PR43H2opV/Zde4/hiqcTSxwxPNKwSKNS7udgFUVJP&#xA;yGKvnj8rPy+0z8yvyc8z3GsR+nN5y1u/1a0uyKvBKr8IJF36RyK4I7gsvQ4qlOi/nv5p8veRr78v&#xA;dSgkl/NbTLmPQdHioX+seufTguOZoD6S9z9r4D+0xCrLvN35R2fl3/nGrX/LcJFzqEVo2ranfNUv&#xA;Pe27LdTS8j8XSHiv+T174q9D/KHXRr35YeWNU5cpJtOgSdh0M0KCGX/kpG2KvOPz8/8AJufk1/21&#xA;bn/k7ZYqr3v5c/mL+Yn5gabqf5g2lnpHlTyzMZtN0ezuPrRvJyVYSSScY/g+AV5IppsF+Itir2HW&#xA;9Hsta0a/0e+XnZajby2tyo2JjmQo1D40bFXgH/OL+qal5X8y+avyj1p63Wjzve6ax2DxkqkvGp2V&#xA;1aKVFH8zHFWTfk1FcD84fzgmkRxG99pyxyMDQ8I7jYE9eKsv0UxVlX57adcal+UPmiztrd7q4ezL&#xA;RQRKXdmjdXHFV3JHGuKpv+XFrc6b+Wvle0vont7qy0awiuoGU80kitY1dCo35KQRTFXi/l/y7D+f&#xA;nnfUfNPmm0uE8h6Czad5e0iRpLdp5TRpppeDK6mnEtxI/ZWp4Gqr0P8A6Fu/JL/qVoP+R1z/ANVc&#xA;VYJ+YH5Wap+V90n5hflLEbWDT4/+di8t85ZILq1SpaQK7MTwUnkK7faWhBqq9N/L/wA8aJ+avkGX&#xA;UIrO4tLO+SWwvradStGaPjMIpPsyJ8ZAcfSAajFXiXkPzX5n/IDUL7yj53027vPJk1w0+ka/aRmS&#xA;JOXXbpRwAzx8uSNUgNyrirPZ/wA+NZ823MGk/lToFxqdxcMBPr+qQS2+mWsZO7saq8hpuFqD4Bum&#xA;Ksr/AD4klj/JvzYVPx/o+RWIHZiFbbfsTirH/L35Y+XPPn5DeVNE8w2pDppVs1pdAcbi2laEUkjJ&#xA;+iqnZu+KsQ8o/mZ+ZP5Z+YYfy98+6TfeZLRjw0DXdOieeeaAEKKqf70LUct+adDyHHFX0ZirsVeK&#xA;/wDOPP8AylX5r/8AgVXn/J6XFXtWKvAf+c0L5Ivyw0+04M0l1qsRBAPFVihmLEmlOrKAP6Yq9x1D&#xA;TtJ1vSpLLULaK+029jpLbzoHjdGFRyRhirwTXfyu/MX8qL6fzF+UlxJqPl529XUfJtyWnAHc24J5&#xA;P/sT6nu+Ksn8j/8AOT/kDzLaSx3UV5peu2lvPc3ektBLcNxtImlm9OWJCpoqGnPgSdqVxViv5efl&#xA;1Z/nHqWpfmZ+Yli81leSm08s6I0ksSQWds5HNzEyMxL1FK0LczShFFXoP/Qt35Jf9StB/wAjrn/q&#xA;rirznzp5V138itYfzz+X8LXHkm5ZE8y+WndmjhFQqzRMxZxWtA25Q9aoaBVm35h/mnYX3/OPmsec&#xA;9HiuYoNSsmtrNbiIxzI11J9U5EAkfAXLBgeJpsTirIvyO0uLTPyg8o20X2ZNMt7o0/mu1+st/wAN&#xA;KcVV9S/KnynqH5j6b+YE0ci67pkLQRqhQQy1VkSSVSpZnjWRgp5eH8oxVk+rafFqWl3mnTUMV5BJ&#xA;byAio4yoUNR8jirxf/nD/U7yb8rrjSbuNo5NF1K5toww24PxmIB6Gksj1pirvz1iaf8AOL8nIYiG&#xA;lTUryVkruERrRyafJGxV7liqQ+d/O2h+S/L03mDXGlTTYHijleGMysDM4jU8R2q2+KvE/LOu+Xvz&#xA;D/5yV0/zX5KMk2laPpEia7qDRPDHLJIssUMdJFVuX7xewqE8FxV9FYq7FXYq7FXYq40oa9O9elMV&#xA;U7f6v6KfV+HoU/d+nThT2ptiqpirsVafhwbnThQ8q9Kd61xVvFXYq7FXYq82/Jr/AAJ9Y86f4V+u&#xA;et/iC6/TX1/hy+ubc/R4/F6HKvHn8VeVe2KvScVWyenwPqU4ftcqUp71xVdirsVSHTP8C/4o1P8A&#xA;Rf6M/wAUemn6X+reh9e9OvwfWOH72lf5/b2xVPsVdiq2b0vSf1uPpcT6nOnHjTflXalMVcPT9MUp&#xA;6dNqU48afqxVtOHBeFOFBxp0p2pTFW8Vdiq2P0+P7unHenGlK136e+Kpfc/4c/Ttl9a+p/p70pv0&#xA;d6vpfXPR29f0OX73h9nnx26VxVMsVUL/AOo/Up/0h6X1Lg31n1+PpenT4ufP4eNOtcVSzyr/AIM/&#xA;R7f4T/R36P5nn+ivQ9H1O9fq/wAPLFX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FA7F1174072068118F629E2C935D13E9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FA7F1174072068118F629E2C935D13E9</xmpMM:InstanceID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D47F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:21+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T17:01:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BC18AC99CBA78E83</stEvt:instanceID>
                  <stEvt:when>2008-05-19T18:10:15-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:26:44-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:51:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681192B0DFFC927805D7</stEvt:instanceID>
                  <stEvt:when>2008-05-30T21:26:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681192B0DFFC927805D7</stEvt:instanceID>
                  <stEvt:when>2008-05-30T21:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:26:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118F629E2C935D13E9</stEvt:instanceID>
                  <stEvt:when>2009-09-11T16:42:25-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068118F629E2C935D13E9</stEvt:instanceID>
                  <stEvt:when>2009-09-11T16:42:54-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118F629E2C935D13E9</stEvt:instanceID>
                  <stEvt:when>2009-09-11T16:43:02-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118F629E2C935D13E9</stEvt:instanceID>
                  <stEvt:when>2009-09-11T16:43:12-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F97F1174072068118F629E2C935D13E9</stRef:instanceID>
            <stRef:documentID>xmp.did:F97F1174072068118F629E2C935D13E9</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -37.0142 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 37.0142 li
351.816 37.0142 li
351.816 0 li
cp
clp
[1 0 0 1 0 0 ]ct
3.13232 32.6812 mo
2.74902 32.6812 2.48828 32.5684 2.34961 32.3418 cv
2.20996 32.1157 2.14063 31.7935 2.14063 31.376 cv
2.14063 29.5669 2.19287 27.6875 2.29736 25.7378 cv
2.40186 23.7891 2.45361 21.7178 2.45361 19.5249 cv
2.45361 18.5513 2.45361 17.5415 2.45361 16.4971 cv
2.45361 15.4189 2.44482 14.3569 2.42773 13.3125 cv
2.40967 12.2686 2.38379 11.2944 2.34961 10.3892 cv
2.31445 9.48438 2.2793 8.70117 2.24512 8.03955 cv
2.24512 7.62207 2.13184 7.26563 1.90576 6.96973 cv
1.67871 6.67432 1.41797 6.41309 1.12256 6.18652 cv
.82666 5.96045 .56543 5.74268 .339355 5.53369 cv
.112793 5.3252 0 5.08203 0 4.80273 cv
0 4.69873 .0786133 4.5249 .234863 4.28076 cv
.391602 4.0376 .600586 3.78467 .861328 3.52393 cv
1.12256 3.2627 1.42676 3.02783 1.77539 2.81885 cv
2.12256 2.61035 2.48828 2.50586 2.87158 2.50586 cv
3.18457 2.50586 3.56738 2.57617 4.02002 2.71484 cv
4.47217 2.854 4.90771 3.01953 5.3252 3.21045 cv
5.74268 3.40234 6.09912 3.60205 6.39551 3.81104 cv
6.69092 4.02002 6.83936 4.21143 6.83936 4.38525 cv
6.83936 4.69873 6.7085 5.15137 6.44775 5.74268 cv
6.18652 6.33496 6.03809 7.04785 6.00391 7.8833 cv
6.00391 9.13623 5.99512 10.4414 5.97754 11.7988 cv
5.95996 13.1558 5.9165 14.479 5.84717 15.7661 cv
19.7344 15.7661 li
19.7686 15.0703 19.7944 14.2876 19.8125 13.417 cv
19.8296 12.5474 19.8384 11.6602 19.8384 10.7544 cv
19.8384 9.53662 19.7861 8.42334 19.6821 7.41309 cv
19.5776 6.4043 19.5254 5.65625 19.5254 5.16846 cv
19.5254 4.92529 19.6992 4.69873 20.0474 4.48975 cv
20.395 4.28076 20.8042 4.09814 21.2744 3.94141 cv
21.7441 3.78467 22.2222 3.66357 22.71 3.57617 cv
23.1968 3.48975 23.5977 3.4458 23.9106 3.4458 cv
24.6064 3.4458 24.9546 3.68945 24.9546 4.17627 cv
24.9546 4.31592 24.9106 4.46338 24.8242 4.62012 cv
24.7368 4.77686 24.6416 4.96875 24.5371 5.19434 cv
24.4326 5.42139 24.3105 5.7085 24.1719 6.05566 cv
24.0322 6.4043 23.9106 6.85693 23.8062 7.41309 cv
23.7017 8.03955 23.6147 8.71826 23.5454 9.44922 cv
23.4751 10.1802 23.4229 10.9199 23.3887 11.668 cv
23.3535 12.417 23.3276 13.1479 23.3101 13.8608 cv
23.2925 14.5747 23.2842 15.1919 23.2842 15.7139 cv
23.5625 15.6797 23.8496 15.6538 24.1455 15.6357 cv
24.4409 15.6187 24.728 15.6099 25.0068 15.6099 cv
25.2852 15.6099 25.5029 15.6538 25.6597 15.7402 cv
25.8164 15.8276 25.8945 16.0454 25.8945 16.3926 cv
25.8945 16.7061 25.79 17.1328 25.5811 17.6719 cv
25.3726 18.2119 25.0591 18.481 24.6416 18.481 cv
24.5371 18.481 24.4146 18.4639 24.2759 18.4287 cv
24.1367 18.3945 23.98 18.3765 23.8062 18.3765 cv
23.458 18.3765 23.2842 18.5854 23.2842 19.0029 cv
23.1797 29.2876 li
23.1797 29.4966 23.1357 29.7495 23.0493 30.0449 cv
22.9619 30.3408 22.8486 30.6367 22.71 30.9321 cv
22.5703 31.2285 22.4048 31.4805 22.2139 31.6895 cv
22.0225 31.8979 21.8047 32.0024 21.5615 32.0024 cv
21.0737 32.0024 20.7344 31.916 20.5435 31.7412 cv
20.3516 31.5679 20.2383 31.2021 20.2041 30.645 cv
19.6821 18.481 li
18.7422 18.481 17.585 18.5073 16.2104 18.5591 cv
14.835 18.6113 13.4517 18.6729 12.0601 18.7422 cv
10.6675 18.812 9.38818 18.9077 8.22266 19.0293 cv
7.05615 19.1514 6.22998 19.2822 5.74268 19.4209 cv
5.63867 19.6997 5.56836 20.021 5.53418 20.3867 cv
5.49902 20.752 5.48193 21.0742 5.48193 21.3525 cv
5.48193 30.2275 li
5.48193 31.8638 4.69873 32.6812 3.13232 32.6812 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
43.8008 19.1074 mo
43.3481 19.9087 43.0522 20.4307 42.9136 20.6738 cv
42.7739 20.9175 42.7046 21.1265 42.7046 21.3003 cv
42.7046 21.4395 42.748 21.5532 42.835 21.6396 cv
42.9214 21.7266 43.1392 21.7881 43.4878 21.8223 cv
43.835 21.8574 44.3574 21.8833 45.0537 21.9004 cv
45.7495 21.9185 46.7246 21.9268 47.9775 21.9268 cv
49.335 21.9268 50.4653 21.9185 51.3711 21.9004 cv
52.2754 21.8833 53.0063 21.8574 53.5635 21.8223 cv
54.1196 21.7881 54.5376 21.7441 54.8164 21.6919 cv
55.0947 21.6396 55.3037 21.5791 55.4429 21.5088 cv
47.2466 13.1558 li
43.8008 19.1074 li
cp
41.2427 24.8242 mo
40.5811 25.1553 40.0068 25.7559 39.52 26.625 cv
36.9097 31.167 li
36.7354 31.4805 36.6309 31.8115 36.5967 32.1592 cv
36.5615 32.5073 36.3003 32.6812 35.8135 32.6812 cv
34.8384 32.6812 34.0557 32.5767 33.4639 32.3677 cv
32.8721 32.1592 32.5767 31.8638 32.5767 31.4805 cv
32.5767 31.167 32.7505 30.8369 33.0986 30.4883 cv
33.4463 30.1411 33.8467 29.6709 34.2993 29.0791 cv
34.9258 28.2788 35.6216 27.3218 36.3877 26.2075 cv
37.1528 25.0942 37.9189 23.9282 38.6846 22.71 cv
39.4497 21.4917 40.1987 20.2651 40.9297 19.0293 cv
41.6606 17.7939 42.3042 16.6538 42.8613 15.6099 cv
43.4175 14.5654 43.8701 13.6519 44.2188 12.8687 cv
44.5659 12.0859 44.7407 11.5376 44.7407 11.2241 cv
44.7407 10.5283 44.1484 9.58887 42.9658 8.40527 cv
38.6846 4.07227 li
38.1968 3.5498 37.7793 3.18457 37.4316 2.97559 cv
37.0835 2.76709 36.9097 2.52393 36.9097 2.24463 cv
36.9097 2.10596 37.04 1.94043 37.3013 1.74902 cv
37.5625 1.55811 37.8667 1.36621 38.2148 1.1748 cv
38.5625 .983887 38.9194 .817871 39.2852 .678711 cv
39.6504 .540039 39.9546 .469727 40.1987 .469727 cv
40.6855 .469727 41.0684 .487793 41.3472 .521973 cv
41.6255 .557129 41.8604 .635254 42.0522 .756836 cv
42.2427 .879395 42.3994 1.06201 42.522 1.30518 cv
42.6436 1.54883 42.791 1.87939 42.9658 2.29688 cv
43.0352 2.50586 43.2529 2.854 43.6182 3.34131 cv
43.9839 3.8291 44.3574 4.31592 44.7407 4.80273 cv
47.5596 8.21436 49.9956 11.0854 52.0493 13.417 cv
54.1025 15.749 55.9731 17.7939 57.6616 19.5513 cv
59.3496 21.3091 60.9678 22.9014 62.5171 24.3281 cv
64.0649 25.7559 65.7617 27.2866 67.6069 28.9224 cv
67.9546 29.2354 68.2856 29.4443 68.5991 29.5488 cv
68.9121 29.6533 69.1816 29.7402 69.4082 29.8096 cv
69.6343 29.8799 69.8169 29.9756 69.9565 30.0972 cv
70.0952 30.2192 70.165 30.436 70.165 30.7495 cv
70.165 30.8892 70.0688 31.0889 69.8779 31.3501 cv
69.6865 31.6108 69.4512 31.8721 69.1733 32.1328 cv
68.894 32.394 68.6162 32.6118 68.3379 32.7856 cv
68.0591 32.9595 67.8159 33.0464 67.6069 33.0464 cv
66.041 33.0464 li
65.7617 33.0464 65.5708 32.9243 65.4668 32.6812 cv
65.3623 32.438 65.2227 32.2114 65.0488 32.0024 cv
63.9004 30.436 61.5684 27.8779 58.0532 24.3281 cv
44.2188 24.3281 li
42.8955 24.3281 41.9033 24.4937 41.2427 24.8242 cv
cp
f
76.7695 13.5215 mo
77.3438 11.6421 78.1006 10.0327 79.0405 8.69238 cv
79.98 7.35303 81.0503 6.25635 82.251 5.40332 cv
83.4517 4.55078 84.6948 3.87207 85.9839 3.36719 cv
87.271 2.86328 88.5327 2.51465 89.769 2.32324 cv
91.0034 2.13232 92.1089 2.03613 93.0835 2.03613 cv
94.5464 2.03613 95.6753 2.31494 96.478 2.87109 cv
97.2769 3.42822 97.6772 3.96777 97.6772 4.48975 cv
97.6772 4.69873 97.5737 4.95117 97.3647 5.24658 cv
97.1558 5.54297 96.9038 5.83008 96.6069 6.10791 cv
96.312 6.38721 95.9976 6.62207 95.6675 6.81299 cv
95.3374 7.00439 95.0679 7.1001 94.8589 7.1001 cv
94.6499 7.1001 94.4487 6.97852 94.2593 6.73438 cv
94.0659 6.4917 93.8413 6.22168 93.5796 5.92529 cv
93.3179 5.62988 92.9976 5.35986 92.6147 5.11621 cv
92.23 4.87305 91.7612 4.75049 91.2046 4.75049 cv
89.5347 4.75049 88.0796 5.03809 86.8452 5.6123 cv
85.6089 6.18652 84.5483 6.91748 83.6597 7.80469 cv
82.7729 8.69238 82.0503 9.69336 81.4941 10.8066 cv
80.937 11.9209 80.502 13.0171 80.189 14.0957 cv
79.8755 15.1748 79.6577 16.1758 79.5361 17.0977 cv
79.4141 18.02 79.3535 18.7422 79.3535 19.2642 cv
79.3535 20.2739 79.5708 21.4136 80.0063 22.6836 cv
80.4409 23.9546 81.0586 25.1465 81.8594 26.2598 cv
82.6597 27.374 83.6265 28.3047 84.7573 29.0527 cv
85.8882 29.8018 87.1323 30.1753 88.4897 30.1753 cv
89.7437 30.1753 90.8823 29.9585 91.9097 29.5225 cv
92.9351 29.0879 93.8413 28.6011 94.6245 28.061 cv
95.4077 27.5215 96.0776 27.0347 96.6343 26.5991 cv
97.1909 26.1646 97.6265 25.9463 97.939 25.9463 cv
98.2866 25.9463 98.5562 26.0508 98.7476 26.2598 cv
98.939 26.4688 99.0347 26.7295 99.0347 27.043 cv
99.0347 27.1821 98.9214 27.4175 98.6968 27.7476 cv
98.4702 28.0786 98.1558 28.4526 97.7573 28.8701 cv
97.355 29.2876 96.9038 29.7144 96.3999 30.1489 cv
95.894 30.585 95.3452 30.9585 94.7554 31.2715 cv
94.4058 31.4805 93.937 31.6812 93.3452 31.8721 cv
92.7534 32.0635 92.1089 32.229 91.4136 32.3677 cv
90.7163 32.5073 89.9858 32.6206 89.2202 32.707 cv
88.4546 32.7939 87.7241 32.8379 87.0288 32.8379 cv
86.0522 32.8379 84.9214 32.6289 83.6343 32.2114 cv
82.3467 31.7935 81.1284 31.0889 79.98 30.0972 cv
78.8315 29.105 77.8657 27.7998 77.0825 26.1816 cv
76.2993 24.563 75.9082 22.5532 75.9082 20.1519 cv
75.9082 17.6113 76.1953 15.4009 76.7695 13.5215 cv
cp
f
111.068 32.2114 mo
110.876 32.3857 110.667 32.5337 110.442 32.6553 cv
110.215 32.7764 109.98 32.8721 109.737 32.9424 cv
109.493 33.0117 109.319 33.0464 109.214 33.0464 cv
109.041 33.0464 108.779 32.9331 108.432 32.707 cv
108.083 32.4814 107.91 32.1772 107.91 31.7935 cv
107.91 31.3418 107.936 30.6802 107.988 29.8096 cv
108.041 28.9404 108.092 27.9482 108.145 26.834 cv
108.197 25.7207 108.24 24.5371 108.275 23.2842 cv
108.309 22.0313 108.328 20.7959 108.328 19.5771 cv
108.328 17.7681 108.301 15.958 108.249 14.1479 cv
108.197 12.3384 108.135 10.5454 108.066 8.77051 cv
108.031 7.90088 107.953 7.20459 107.832 6.68213 cv
107.708 6.16016 107.587 5.74268 107.466 5.4292 cv
107.343 5.11621 107.239 4.86426 107.153 4.67236 cv
107.065 4.48145 107.022 4.29883 107.022 4.12402 cv
107.022 3.95068 107.134 3.70654 107.362 3.39355 cv
107.587 3.08008 107.839 2.76709 108.119 2.45361 cv
108.397 2.14063 108.693 1.8623 109.006 1.61816 cv
109.319 1.37549 109.545 1.25293 109.685 1.25293 cv
109.893 1.25293 110.198 1.34912 110.598 1.54004 cv
110.998 1.73193 111.25 1.87939 111.355 1.98389 cv
111.424 2.05371 111.538 2.22754 111.695 2.50586 cv
111.851 2.78467 112.008 3.08887 112.165 3.41943 cv
112.321 3.75049 112.452 4.05469 112.556 4.33301 cv
112.661 4.61182 112.712 4.80273 112.712 4.90723 cv
112.712 5.15137 112.599 5.45557 112.374 5.8208 cv
112.147 6.18652 112.016 6.66504 111.982 7.25684 cv
111.912 8.61377 111.851 9.78857 111.799 10.7808 cv
111.747 11.7725 111.695 12.6338 111.642 13.3647 cv
111.59 14.0957 111.555 14.7222 111.538 15.2441 cv
111.52 15.7661 111.512 16.2539 111.512 16.7061 cv
111.512 17.0894 111.538 17.3677 111.59 17.5415 cv
111.642 17.7158 111.773 17.8022 111.982 17.8022 cv
112.156 17.8022 112.634 17.4287 113.417 16.6797 cv
114.201 15.9316 115.131 15.0093 116.21 13.9131 cv
117.289 12.8164 118.447 11.6157 119.682 10.3105 cv
120.917 9.00537 122.075 7.80469 123.154 6.7085 cv
124.232 5.6123 125.164 4.69043 125.947 3.94141 cv
126.73 3.19336 127.208 2.81885 127.382 2.81885 cv
127.591 2.81885 127.878 2.94141 128.244 3.18457 cv
128.61 3.42822 128.966 3.70654 129.314 4.02002 cv
129.662 4.33301 129.967 4.63818 130.228 4.93359 cv
130.489 5.22949 130.62 5.4292 130.62 5.53369 cv
130.62 5.7085 130.497 5.85596 130.254 5.97754 cv
130.01 6.1001 129.723 6.2124 129.392 6.31689 cv
129.061 6.42139 128.714 6.54346 128.348 6.68213 cv
127.983 6.82178 127.678 6.99561 127.435 7.20459 cv
126.495 8.00537 125.451 8.97119 124.302 10.1021 cv
123.154 11.2334 122.013 12.3467 120.883 13.4429 cv
119.751 14.5396 118.69 15.5313 117.699 16.4189 cv
116.707 17.3062 115.897 17.9248 115.271 18.272 cv
115.271 18.3765 li
115.792 18.4468 116.419 18.7422 117.15 19.2642 cv
117.881 19.7861 118.672 20.4307 119.526 21.1958 cv
120.378 21.9619 121.283 22.7969 122.241 23.7017 cv
123.197 24.6069 124.154 25.4507 125.112 26.2339 cv
126.069 27.0166 127.008 27.6953 127.931 28.2695 cv
128.853 28.8438 129.714 29.2012 130.515 29.3398 cv
131.002 29.4102 131.324 29.5317 131.481 29.7056 cv
131.637 29.8799 131.715 30.1411 131.715 30.4883 cv
131.715 30.6631 131.524 30.8799 131.141 31.1411 cv
130.758 31.4019 130.314 31.646 129.81 31.8721 cv
129.305 32.0986 128.818 32.2896 128.348 32.4463 cv
127.878 32.603 127.54 32.6812 127.331 32.6812 cv
127.122 32.6812 126.834 32.5337 126.469 32.2373 cv
126.104 31.9419 125.677 31.5586 125.19 31.0889 cv
124.702 30.6191 124.154 30.0796 123.545 29.4702 cv
122.936 28.8618 122.284 28.2266 121.587 27.5649 cv
119.882 25.9644 118.507 24.6763 117.463 23.7017 cv
116.419 22.7275 115.592 21.979 114.984 21.4565 cv
114.375 20.9346 113.921 20.5952 113.626 20.439 cv
113.331 20.2822 113.06 20.2036 112.817 20.2036 cv
112.468 20.2036 112.191 20.2217 111.982 20.2559 cv
111.773 20.291 111.598 20.3262 111.459 20.3604 cv
111.424 21.6133 111.399 22.8662 111.381 24.1191 cv
111.364 25.3721 111.355 26.6079 111.355 27.8262 cv
111.355 31.6372 li
111.355 31.8457 111.259 32.0376 111.068 32.2114 cv
cp
f
158.498 32.9946 mo
158.462 33.5859 158.393 34.1772 158.289 34.7695 cv
158.184 35.3608 158.053 35.8828 157.897 36.3354 cv
157.741 36.7876 157.54 37.0142 157.296 37.0142 cv
157.122 37.0142 156.914 36.9702 156.67 36.8838 cv
156.426 36.7964 156.2 36.6831 155.992 36.5444 cv
155.783 36.4048 155.6 36.2573 155.443 36.1006 cv
155.287 35.9438 155.208 35.7783 155.208 35.6045 cv
155.208 35.2563 155.225 34.8647 155.26 34.4302 cv
155.294 33.9946 155.33 33.3511 155.365 32.4985 cv
155.399 31.646 155.434 30.4805 155.469 29.0005 cv
155.503 27.5215 155.522 25.564 155.522 23.1274 cv
155.522 22.5361 155.487 22.0659 155.417 21.7178 cv
155.347 21.3701 155.26 21.0571 155.156 20.7783 cv
155.051 20.5 154.964 20.23 154.895 19.9688 cv
154.825 19.708 154.791 19.4038 154.791 19.0552 cv
154.791 18.499 154.869 17.9771 155.026 17.4893 cv
155.182 17.002 155.26 16.4629 155.26 15.8706 cv
155.26 15.6616 155.235 15.2534 155.182 14.644 cv
155.13 14.0352 155.078 13.3564 155.026 12.6079 cv
154.973 11.8599 154.913 11.0938 154.843 10.3105 cv
154.773 9.52783 154.72 8.875 154.686 8.35303 cv
154.269 7.76172 153.92 7.16992 153.642 6.57813 cv
153.363 5.98633 153.224 5.49951 153.224 5.11621 cv
153.224 4.94238 153.337 4.69043 153.564 4.35938 cv
153.79 4.02881 154.068 3.70654 154.399 3.39355 cv
154.729 3.08008 155.069 2.81104 155.417 2.58398 cv
155.764 2.3584 156.061 2.24463 156.304 2.24463 cv
156.756 2.24463 157.252 2.28906 157.792 2.37549 cv
158.332 2.4624 159.106 2.50586 160.116 2.50586 cv
161.229 2.50586 162.43 2.47998 163.718 2.42773 cv
165.005 2.37549 166.232 2.32324 167.399 2.271 cv
168.564 2.21875 169.608 2.1665 170.531 2.11426 cv
171.453 2.06201 172.105 2.03613 172.489 2.03613 cv
172.593 2.03613 172.714 2.07129 172.854 2.14063 cv
172.993 2.21045 173.063 2.34912 173.063 2.55811 cv
173.063 2.6626 173.019 2.81885 172.932 3.02783 cv
172.845 3.23682 172.741 3.4375 172.619 3.62842 cv
172.497 3.81982 172.358 3.99365 172.202 4.15039 cv
172.044 4.30713 171.879 4.40332 171.706 4.4375 cv
170.905 4.57715 169.93 4.70752 168.782 4.8291 cv
167.633 4.95117 166.467 5.07275 165.284 5.19434 cv
164.1 5.31689 162.996 5.4292 161.969 5.53369 cv
160.942 5.63818 160.132 5.74268 159.542 5.84717 cv
159.367 5.88232 159.236 5.96924 159.15 6.10791 cv
159.063 6.24756 158.984 6.61279 158.915 7.20459 cv
158.81 8.21436 158.75 9.38916 158.732 10.7285 cv
158.714 12.0684 158.707 13.417 158.707 14.7744 cv
158.707 15.2271 158.714 15.6709 158.732 16.1055 cv
158.75 16.541 158.758 16.9849 158.758 17.437 cv
162.882 17.437 li
164.692 17.437 166.302 17.3413 167.711 17.1499 cv
169.122 16.959 170.244 16.8628 171.079 16.8628 cv
171.74 16.8628 172.071 17.1758 172.071 17.8022 cv
172.071 18.3594 171.949 18.7944 171.706 19.1074 cv
171.461 19.4209 171.166 19.5771 170.818 19.5771 cv
170.226 19.5771 169.365 19.6216 168.234 19.708 cv
167.102 19.7949 165.918 19.8994 164.684 20.021 cv
163.448 20.1436 162.264 20.2739 161.133 20.4126 cv
160.002 20.5522 159.141 20.6738 158.549 20.7783 cv
158.549 31.6895 li
158.549 31.9683 158.532 32.4028 158.498 32.9946 cv
cp
f
186.923 14.3569 mo
187.044 14.4268 187.175 14.4609 187.315 14.4609 cv
187.489 14.4609 187.766 14.3745 188.15 14.2002 cv
188.533 14.0264 189.176 13.73 190.082 13.3125 cv
190.395 13.1738 190.734 13.0171 191.099 12.8428 cv
191.465 12.6689 191.838 12.4512 192.222 12.1899 cv
192.605 11.9292 192.953 11.6157 193.266 11.2505 cv
193.58 10.8848 193.84 10.4414 194.049 9.91895 cv
194.432 8.77051 194.624 7.60498 194.624 6.42139 cv
194.624 5.93457 194.545 5.53369 194.388 5.2207 cv
194.232 4.90723 194.049 4.61182 193.84 4.33301 cv
193.77 4.22852 193.614 4.10693 193.371 3.96777 cv
193.126 3.8291 192.857 3.69824 192.561 3.57617 cv
192.265 3.45459 191.987 3.35889 191.726 3.28906 cv
191.465 3.21973 191.264 3.18457 191.125 3.18457 cv
190.986 3.18457 190.725 3.21045 190.342 3.2627 cv
189.959 3.31494 189.568 3.39355 189.167 3.49756 cv
188.767 3.60205 188.411 3.72461 188.097 3.86328 cv
187.785 4.00293 187.61 4.15918 187.576 4.33301 cv
187.401 5.13428 187.262 5.99561 187.158 6.91748 cv
187.053 7.83984 186.966 8.74463 186.897 9.63184 cv
186.827 10.5195 186.784 11.3379 186.766 12.0859 cv
186.749 12.8345 186.741 13.417 186.741 13.8345 cv
186.741 14.1138 186.8 14.2876 186.923 14.3569 cv
cp
188.254 .54834 mo
188.568 .496094 189.002 .469727 189.559 .469727 cv
190.881 .469727 192.109 .661621 193.24 1.04395 cv
194.371 1.42725 195.354 1.93164 196.19 2.55811 cv
197.025 3.18457 197.686 3.88916 198.173 4.67236 cv
198.661 5.45557 198.905 6.24756 198.905 7.04785 cv
198.905 8.30078 198.696 9.37109 198.278 10.2583 cv
197.86 11.146 197.33 11.8857 196.686 12.4771 cv
196.042 13.0693 195.354 13.5474 194.624 13.9131 cv
193.892 14.2783 193.214 14.5654 192.587 14.7744 cv
191.752 15.0532 191.248 15.2358 191.074 15.3228 cv
190.899 15.4097 190.812 15.5054 190.812 15.6099 cv
190.812 15.7139 190.951 15.8364 191.23 15.9751 cv
191.508 16.1147 192.118 16.48 193.057 17.0713 cv
193.997 17.6636 195.111 18.3765 196.399 19.2119 cv
197.686 20.0474 199.079 20.9697 200.575 21.979 cv
201.688 22.71 202.811 23.4326 203.942 24.1455 cv
205.073 24.8594 206.152 25.5469 207.179 26.2075 cv
208.206 26.8691 209.154 27.4604 210.024 27.9824 cv
210.894 28.5049 211.608 28.9404 212.165 29.2876 cv
213.591 30.0889 215.018 30.4883 216.446 30.4883 cv
216.584 30.4883 216.715 30.5586 216.837 30.6973 cv
216.958 30.8369 217.02 31.0283 217.02 31.2715 cv
217.02 31.4463 216.872 31.707 216.577 32.0547 cv
216.28 32.4028 215.932 32.7505 215.532 33.0986 cv
215.131 33.4463 214.731 33.7515 214.332 34.0122 cv
213.931 34.2734 213.626 34.4038 213.417 34.4038 cv
213.035 34.4038 212.251 34.0205 211.069 33.2554 cv
209.885 32.4902 208.484 31.5327 206.866 30.3843 cv
205.248 29.2354 203.49 27.9653 201.593 26.5732 cv
199.696 25.1812 197.825 23.876 195.981 22.6577 cv
194.135 21.4395 192.405 20.3784 190.787 19.4731 cv
189.167 18.5684 187.836 18.0112 186.792 17.8022 cv
186.722 18.499 186.67 19.2729 186.636 20.1255 cv
186.601 20.9785 186.583 21.8223 186.583 22.6577 cv
186.583 24.0669 li
186.583 25.4946 186.61 26.6602 186.662 27.5649 cv
186.714 28.4702 186.766 29.2095 186.819 29.7837 cv
186.871 30.3579 186.923 30.8198 186.975 31.167 cv
187.028 31.5156 187.053 31.8286 187.053 32.1069 cv
187.053 32.4551 186.958 32.6982 186.766 32.8379 cv
186.575 32.9766 186.235 33.0464 185.749 33.0464 cv
185.504 33.0464 185.174 33.0024 184.756 32.916 cv
184.338 32.8286 183.929 32.7246 183.53 32.603 cv
183.129 32.4814 182.79 32.3247 182.511 32.1328 cv
182.233 31.9419 182.094 31.7412 182.094 31.5327 cv
182.094 31.3589 182.137 31.1851 182.224 31.0107 cv
182.311 30.8369 182.416 30.6021 182.538 30.3057 cv
182.66 30.0103 182.781 29.6362 182.903 29.1831 cv
183.025 28.7314 183.103 28.1743 183.138 27.5127 cv
183.138 27.2344 183.155 26.5649 183.19 25.5029 cv
183.224 24.4414 183.269 23.1978 183.321 21.77 cv
183.373 20.3433 183.417 18.8384 183.452 17.2544 cv
183.486 15.6709 183.503 14.2183 183.503 12.895 cv
183.503 12.3037 183.495 11.5557 183.477 10.6499 cv
183.459 9.74561 183.425 8.84912 183.373 7.96143 cv
183.321 7.07373 183.25 6.29102 183.165 5.6123 cv
183.077 4.93359 182.963 4.54199 182.825 4.4375 cv
182.094 4.02002 181.728 3.49756 181.728 2.87109 cv
181.728 2.41943 182.076 2.10596 182.773 1.93164 cv
187.315 .730957 li
187.627 .661621 187.941 .600098 188.254 .54834 cv
cp
f
229.445 19.1074 mo
228.992 19.9087 228.696 20.4307 228.557 20.6738 cv
228.417 20.9175 228.348 21.1265 228.348 21.3003 cv
228.348 21.4395 228.391 21.5532 228.479 21.6396 cv
228.565 21.7266 228.783 21.7881 229.131 21.8223 cv
229.479 21.8574 230 21.8833 230.698 21.9004 cv
231.393 21.9185 232.368 21.9268 233.621 21.9268 cv
234.978 21.9268 236.109 21.9185 237.014 21.9004 cv
237.919 21.8833 238.65 21.8574 239.208 21.8223 cv
239.763 21.7881 240.181 21.7441 240.46 21.6919 cv
240.738 21.6396 240.947 21.5791 241.086 21.5088 cv
232.89 13.1558 li
229.445 19.1074 li
cp
226.886 24.8242 mo
226.225 25.1553 225.651 25.7559 225.164 26.625 cv
222.553 31.167 li
222.378 31.4805 222.274 31.8115 222.24 32.1592 cv
222.205 32.5073 221.944 32.6812 221.457 32.6812 cv
220.482 32.6812 219.699 32.5767 219.108 32.3677 cv
218.515 32.1592 218.22 31.8638 218.22 31.4805 cv
218.22 31.167 218.394 30.8369 218.742 30.4883 cv
219.089 30.1411 219.49 29.6709 219.943 29.0791 cv
220.57 28.2788 221.265 27.3218 222.031 26.2075 cv
222.796 25.0942 223.562 23.9282 224.329 22.71 cv
225.093 21.4917 225.842 20.2651 226.573 19.0293 cv
227.304 17.7939 227.948 16.6538 228.504 15.6099 cv
229.061 14.5654 229.514 13.6519 229.862 12.8687 cv
230.209 12.0859 230.384 11.5376 230.384 11.2241 cv
230.384 10.5283 229.792 9.58887 228.609 8.40527 cv
224.329 4.07227 li
223.84 3.5498 223.422 3.18457 223.076 2.97559 cv
222.727 2.76709 222.553 2.52393 222.553 2.24463 cv
222.553 2.10596 222.684 1.94043 222.945 1.74902 cv
223.206 1.55811 223.51 1.36621 223.859 1.1748 cv
224.206 .983887 224.563 .817871 224.928 .678711 cv
225.294 .540039 225.598 .469727 225.842 .469727 cv
226.33 .469727 226.711 .487793 226.991 .521973 cv
227.269 .557129 227.503 .635254 227.696 .756836 cv
227.886 .879395 228.043 1.06201 228.166 1.30518 cv
228.287 1.54883 228.435 1.87939 228.609 2.29688 cv
228.678 2.50586 228.896 2.854 229.262 3.34131 cv
229.627 3.8291 230 4.31592 230.384 4.80273 cv
233.204 8.21436 235.639 11.0854 237.693 13.417 cv
239.747 15.749 241.617 17.7939 243.305 19.5513 cv
244.993 21.3091 246.612 22.9014 248.161 24.3281 cv
249.708 25.7559 251.406 27.2866 253.25 28.9224 cv
253.598 29.2354 253.929 29.4443 254.243 29.5488 cv
254.556 29.6533 254.825 29.7402 255.051 29.8096 cv
255.278 29.8799 255.46 29.9756 255.6 30.0972 cv
255.739 30.2192 255.809 30.436 255.809 30.7495 cv
255.809 30.8892 255.712 31.0889 255.522 31.3501 cv
255.33 31.6108 255.095 31.8721 254.817 32.1328 cv
254.538 32.394 254.259 32.6118 253.982 32.7856 cv
253.703 32.9595 253.459 33.0464 253.25 33.0464 cv
251.684 33.0464 li
251.406 33.0464 251.214 32.9243 251.11 32.6812 cv
251.005 32.438 250.867 32.2114 250.693 32.0024 cv
249.544 30.436 247.211 27.8779 243.697 24.3281 cv
229.862 24.3281 li
228.539 24.3281 227.547 24.4937 226.886 24.8242 cv
cp
f
288.803 8.27441 mo
289.917 6.41309 290.76 5.00342 291.334 4.0459 cv
291.909 3.08887 292.318 2.47998 292.562 2.21875 cv
292.805 1.95752 293.048 1.82715 293.292 1.82715 cv
293.501 1.82715 293.789 1.87109 294.154 1.95752 cv
294.519 2.04492 294.885 2.14941 295.25 2.271 cv
295.616 2.39307 295.929 2.52393 296.19 2.6626 cv
296.451 2.80176 296.582 2.92334 296.582 3.02783 cv
296.582 3.41113 296.555 3.76758 296.503 4.09814 cv
296.451 4.4292 296.425 4.71631 296.425 4.95947 cv
296.425 6.03857 296.546 7.42236 296.791 9.10986 cv
297.034 10.7983 297.338 12.5908 297.704 14.4873 cv
298.07 16.3848 298.469 18.3071 298.905 20.2559 cv
299.339 22.2056 299.74 23.9888 300.106 25.6074 cv
300.471 27.2256 300.775 28.5747 301.019 29.6533 cv
301.262 30.7324 301.384 31.376 301.384 31.585 cv
301.384 31.7935 301.245 31.9854 300.967 32.1592 cv
300.688 32.3335 300.367 32.4814 300.001 32.603 cv
299.635 32.7246 299.296 32.8286 298.983 32.916 cv
298.669 33.0024 298.461 33.0464 298.357 33.0464 cv
298.043 33.0464 297.826 32.9766 297.704 32.8379 cv
297.582 32.6982 297.486 32.3857 297.417 31.8979 cv
297.138 29.5317 296.807 27.2085 296.425 24.9287 cv
296.042 22.6494 295.65 20.439 295.25 18.2983 cv
294.85 16.1577 294.458 14.1045 294.076 12.1377 cv
293.692 10.1719 293.379 8.31885 293.136 6.57813 cv
290.838 10.0938 289.011 12.9302 287.654 15.0874 cv
286.297 17.2461 285.252 18.96 284.522 20.23 cv
283.791 21.501 283.312 22.4487 283.086 23.0752 cv
282.86 23.7017 282.729 24.2417 282.695 24.6934 cv
282.66 25.2856 282.52 25.6772 282.277 25.8682 cv
282.033 26.0601 281.667 26.1553 281.18 26.1553 cv
280.693 26.1553 280.345 26.0508 280.136 25.8423 cv
279.927 25.6333 279.684 25.1812 279.406 24.4849 cv
279.266 24.1714 278.97 23.6235 278.518 22.8403 cv
278.065 22.0571 277.517 21.1616 276.874 20.1519 cv
276.229 19.1426 275.525 18.0635 274.759 16.915 cv
273.994 15.7661 273.246 14.6528 272.514 13.5737 cv
271.784 12.4951 271.113 11.4941 270.504 10.5718 cv
269.895 9.6499 269.417 8.92725 269.069 8.40527 cv
268.964 8.82275 268.79 9.64111 268.546 10.8589 cv
268.303 12.0776 268.025 13.478 267.711 15.0615 cv
267.398 16.6455 267.076 18.3164 266.746 20.0732 cv
266.415 21.8311 266.11 23.4668 265.832 24.9805 cv
265.553 26.4946 265.327 27.7915 265.153 28.8701 cv
264.979 29.9492 264.892 30.5928 264.892 30.8018 cv
264.892 31.0806 264.926 31.3589 264.997 31.6372 cv
265.066 31.916 265.101 32.1943 265.101 32.4722 cv
265.101 32.6118 265.023 32.7417 264.866 32.8638 cv
264.709 32.9854 264.457 33.0464 264.109 33.0464 cv
263.274 33.0464 262.517 32.9595 261.838 32.7856 cv
261.16 32.6118 260.82 32.229 260.82 31.6372 cv
260.82 31.3589 260.907 30.9673 261.082 30.4624 cv
261.255 29.9585 261.499 29.2354 261.812 28.2959 cv
261.986 27.7393 262.23 26.8604 262.543 25.6592 cv
262.856 24.4585 263.187 23.084 263.535 21.5352 cv
263.882 19.9868 264.24 18.3594 264.605 16.6538 cv
264.97 14.9487 265.301 13.3306 265.597 11.7988 cv
265.892 10.2676 266.136 8.90137 266.328 7.7002 cv
266.519 6.49951 266.615 5.63818 266.615 5.11621 cv
266.615 4.5249 266.528 4.11621 266.354 3.88916 cv
266.179 3.66357 266.093 3.34131 266.093 2.92334 cv
266.093 2.54102 266.354 2.28906 266.876 2.1665 cv
267.398 2.04492 268.042 1.98389 268.808 1.98389 cv
269.399 1.98389 269.791 2.04492 269.982 2.1665 cv
270.173 2.28906 270.304 2.54102 270.374 2.92334 cv
270.478 3.4458 270.774 4.17627 271.261 5.11621 cv
271.749 6.05566 272.339 7.10889 273.037 8.27441 cv
273.732 9.44092 274.49 10.6592 275.307 11.9292 cv
276.125 13.2002 276.917 14.4009 277.683 15.5313 cv
278.448 16.6626 279.145 17.6807 279.771 18.5854 cv
280.398 19.4907 280.868 20.1694 281.18 20.6216 cv
284.157 15.8706 li
286.14 12.6689 287.689 10.1367 288.803 8.27441 cv
cp
f
313.418 12.4512 mo
313.332 9.92822 313.201 8.07471 313.027 6.89111 cv
312.992 6.68213 312.94 6.4917 312.871 6.31689 cv
312.8 6.14307 312.662 6.00391 312.453 5.89941 cv
311.931 5.62109 311.669 5.30811 311.669 4.95947 cv
311.669 4.47266 311.974 4.01172 312.583 3.57617 cv
313.192 3.14111 313.897 2.74951 314.698 2.40137 cv
315.498 2.05371 316.325 1.7749 317.177 1.56592 cv
318.03 1.35742 318.682 1.25293 319.135 1.25293 cv
320.04 1.25293 321.084 1.36621 322.268 1.59229 cv
323.451 1.81885 324.546 2.14063 325.557 2.55811 cv
326.008 2.76709 326.461 3.09814 326.915 3.5498 cv
327.366 4.00293 327.776 4.49854 328.141 5.03809 cv
328.506 5.57764 328.801 6.13428 329.029 6.7085 cv
329.254 7.28271 329.368 7.81396 329.368 8.30078 cv
329.368 10.7373 329.072 12.4077 328.48 13.3125 cv
328.132 13.8696 327.679 14.4702 327.123 15.1138 cv
326.566 15.7583 325.983 16.3667 325.374 16.9409 cv
324.765 17.5151 324.19 17.9941 323.651 18.3765 cv
323.111 18.7598 322.703 18.9507 322.424 18.9507 cv
322.145 18.9507 321.806 18.8813 321.407 18.7422 cv
321.005 18.6035 320.624 18.4468 320.257 18.272 cv
319.892 18.0986 319.579 17.9067 319.318 17.6978 cv
319.057 17.4893 318.926 17.3325 318.926 17.228 cv
318.926 17.0542 319.013 16.9067 319.188 16.7842 cv
319.361 16.6626 319.692 16.5493 320.179 16.4448 cv
321.85 16.0977 323.172 15.3667 324.147 14.2524 cv
325.122 13.1387 325.609 11.9028 325.609 10.5454 cv
325.609 10.0234 325.547 9.38916 325.426 8.64014 cv
325.304 7.89209 325.086 7.16992 324.774 6.47363 cv
324.46 5.77783 324.034 5.18652 323.495 4.69873 cv
322.955 4.21143 322.285 3.96777 321.485 3.96777 cv
320.718 3.96777 320.014 4.07227 319.371 4.28076 cv
318.726 4.48975 318.056 4.80273 317.36 5.2207 cv
317.291 5.81299 317.221 6.51758 317.152 7.33496 cv
317.082 8.15332 317.021 9.00537 316.969 9.89307 cv
316.917 10.7808 316.873 11.6602 316.838 12.5293 cv
316.803 13.3999 316.786 14.1831 316.786 14.8789 cv
316.786 28.6611 li
316.786 30.5757 316.568 31.9854 316.133 32.8901 cv
315.698 33.7944 314.941 34.2476 313.863 34.2476 cv
313.27 34.2476 312.975 33.9863 312.975 33.4644 cv
312.975 33.3247 313.001 33.168 313.053 32.9946 cv
313.106 32.8198 313.175 32.5859 313.262 32.2896 cv
313.348 31.9941 313.418 31.5938 313.471 31.0889 cv
313.523 30.585 313.549 29.9141 313.549 29.0791 cv
313.549 21.3003 li
313.549 17.9248 313.505 14.9751 313.418 12.4512 cv
cp
f
337.956 29.7314 mo
338.112 29.5747 338.277 29.4966 338.452 29.4966 cv
338.938 29.4966 339.512 29.6621 340.174 29.9927 cv
340.834 30.3237 341.653 30.4883 342.627 30.4883 cv
343.568 30.4883 344.325 30.167 344.899 29.5225 cv
345.473 28.8789 345.76 28.1743 345.76 27.4082 cv
345.76 26.7124 345.594 25.8945 345.264 24.9546 cv
344.933 24.0146 344.524 23.0146 344.038 21.9526 cv
343.549 20.8916 343.019 19.7949 342.445 18.6636 cv
341.871 17.5332 341.339 16.437 340.853 15.3745 cv
340.365 14.3135 339.957 13.3125 339.625 12.373 cv
339.294 11.4331 339.13 10.6328 339.13 9.97119 cv
339.13 9.37988 339.365 8.53564 339.834 7.43945 cv
340.304 6.34326 340.931 5.23877 341.714 4.12402 cv
342.498 3.01074 343.402 2.04492 344.429 1.22656 cv
345.456 .409668 346.525 0 347.639 0 cv
347.882 0 348.24 .0258789 348.709 .078125 cv
349.18 .130371 349.64 .217773 350.093 .339355 cv
350.545 .461426 350.946 .618164 351.294 .809082 cv
351.641 1.00098 351.816 1.23584 351.816 1.51416 cv
351.816 2.21045 351.686 2.6626 351.424 2.87109 cv
351.164 3.08008 350.545 3.20264 349.571 3.23682 cv
347.274 3.30713 345.621 3.83691 344.612 4.8291 cv
343.602 5.8208 343.098 7.04785 343.098 8.50977 cv
343.098 9.41504 343.393 10.5547 343.985 11.9292 cv
344.577 13.3042 345.229 14.7832 345.943 16.3667 cv
346.656 17.9507 347.308 19.5864 347.901 21.2739 cv
348.492 22.9624 348.789 24.5723 348.789 26.103 cv
348.789 26.3823 348.701 26.9565 348.527 27.8262 cv
348.353 28.6963 348.031 29.5928 347.561 30.5146 cv
347.091 31.437 346.465 32.2637 345.682 32.9946 cv
344.899 33.7251 343.88 34.0908 342.627 34.0908 cv
342.315 34.0908 341.914 34.0386 341.427 33.9341 cv
340.939 33.8296 340.461 33.6904 339.992 33.5166 cv
339.522 33.3418 339.104 33.1592 338.739 32.9683 cv
338.373 32.7764 338.155 32.5947 338.085 32.4199 cv
337.982 32.1069 337.894 31.8027 337.825 31.5063 cv
337.754 31.2114 337.72 30.8892 337.72 30.5405 cv
337.72 30.1582 337.798 29.8882 337.956 29.7314 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 14.0.0%%For: (Marcelo Guerra) ()%%Title: (hackframps.eps)%%CreationDate: 9/11/09 4:43 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6CQi<gDBS]^c@<ngMWg(+jW)"V?H5OjVoQD\>LD`-nUtC=;3n642-X4[/X>\erUifGM=\f7hR;8#bU[7:+aJ#l&-N"F"Mafu%pu[pp5J2CBj71Cor6:dVoe*apQ\rB_.8=/toq,Ujp;PAD2YTE2#S$6TGG2L;n)mq;,fTZ-^\-d8Dnc85iPk,,hn4C/rJR:t5.u77%k3^L0\NBcSq<PZ-IK!aVbO`@Gp>XW'2udoBI.dF7s(D2nn2KUDlcW?_Y&E/\4F_RAmq70)n*n`^s4j72O2LDhrgVNs^\[&I(Z4k?%?i9CP&,jg=_]R$Fq"qNRhS&4XpG]ZYb]!OXB^,<:h2It5rSqg'r:ojGGAj+gHhlgsJ,aY0H2*k&0DtO_:X9@(;0=Ggo;hl2]CUqF%4TFNn4/1eR[-GE?qt478nA!fXrD*Fg)'@$"2%Di,J*:71ch$Gn[=eKKZgD]#]>"_t&RY.S2eRAhVn_Ej/uJVLcgBO5pjWH8!rm`D%io-e:celFO0obdPhk+egIlG,`b<@?,lK`bgleG'UZ+$ZQ]s"9?]2[7-l>UK$#6)S+^O5Q)^ZhNlrQEg]hYd:A@dH$,^Se>#]RBPA%bQ"aVC7TqRR@q=njjf9u^OQ4Q?0>Q!:nu)1p<=+$?K#SgZe&:)@<aAbn2iN&h=J*?^3J6upW]aG?o7@)oV]J$jl+na5J;==1Lk4X%rV]MF?N9H<ImIhaG!=^C5&TdPUu'Mu>E(qg$\%]lN$I?c%.LnP/q&Del!jG^DdWM=o(?pgXRb1S^O>pq&C'5'.Xa\,n#Q9!ao=b<%n*R`204$HVc@:'7gOZ75f\_-N0DO?FIsLgef?[e*X*b*HX.>Jb(\?8AkO5#:O`k<Mqp-qpkM>Z(mpO/Zr@8$GShkb4%DJH0!Y#0Z%L&c]4!WEu=rUkJjVs11NTiKD-YFM:dcHn'(lW%o4#&ROr2Q_JFe#bp:et<cU#2c-)kle+`-[>3(K"mgNd,oY.^L"*(_pd3fr;Cr<%B8C#kQft,%dU1s)q0NCr=7@566(d's[":J5:[)fE,PVacTL\JlqCS51B;&,j*W?4*K("5HpdCLC8+7Pq%6jk#I=cYU2sL:f$Mjq`%U!<6;0Gtt*S9R_4,VHoWHBNSLe._4;)nd7?QSFX=oED@iJ++I4d0NXRl#/Cfn.Stks($e>/+bCb&&,rrTQ`6ln=:s4#^hD.cp.;#%UI\9LI&6ST)ass]EfhF]1STr?%]tP*_ADJt;%Jm)?1_I?/E9/Nj9s[,mmJq)GORH^Rf3ZmKC@0Ej;[qc4J?EH41'Rq9j``fbM48d%d2PWf7>=637,!03Oqa&_R27WU`-7r9\5)K=^&d=N,18EE*EpS>#s1:GJ#=roS7X*>1Q=EbL+lm&Mr]*+G'[cs8nRCV=i.'[q]suA%pI"r<koiDLe&NjEQcD&c7D_W@H>l5b'meuTKU89PDT4@)8QsO3QhU-=nWU[rUjnGtoJM&^&jaN5qC73u4atg\Xn;'cjkZ3:%L;jR%pdni5,Q2ueUp'$`o9g`]-[f8Qo^D=6^1R<fI1B`lhe??[hsrGsg&'sm.AlEV5$tMTlq?p$Zg3*(e8db&%Z^UFh[%pXl7i-]KonCF%jF+T4n(>44J1nXpmte7KXO%:tRG'#!n4mDCf%55Mn-lbE[fHs->CWN""tjY;m?G`)n_`,fhc^S?SeGP/I_q<D#&_uKh5T].WVEV0%iPOL2$,I@e#DoF9oF,\uW"GJdNeHfsdtAB`#JNH-TGbN@e+e-9$8E7Z90!*Xc+DqYr#<([cu4.^[Q)]B&6gL(//A-@dOY6Ihl!Z6%%f!Y4F<Ear%Xc`6i8A607DSN2;]V>s*2AW3Re[Ef=6a">)JOr@%*fl<oFH*BRjc2%`\6?Ik_6Aa,GmS3q(oc/VZ&FNr;bK'<hrCF%UpT)f%ltY#=s?1T*H*$a@On:>k(\m6F)Au6O4%cJM,on@U\'0aQ+1Q.8mFcc%Gm!f`T+p"](1*@7-Jm]Qs(@M\H1u@,SK#<=]5VW%3jq^8c=3O2UtegM!D2DK8^Eo_GPY!EXshW[?VDp@S#JT-I-C@SS+o,l]lc=f,j0>o+MW1!Q#l,^J$*C\i7!s5`^4F[#kM.*:J&$O%<b)MIqVb$).?EE;aq=4i%66XP1D:WiW)+p&M$ATp(p\lZ`E@'@-Yn@8*F[Nef.fXH"$B):;E(CO314mf-'E#5hiTlYFSVS\3+ulJ%bf"Pa)9R'EClrqh=:F"TfXZdM&m;fcXLcP:BE$*.67WPJEZh@RhOtV'qaC!C5.(VX*n]prko/lHE9U3`9rQgIk^S#,Zg([SUb=R-%b0`b+D)Ie_`s;n3-N>^Y:"k>El9^QQLo?h6UTkOA]LR31el]gE3t=WtgQ5/ID]+b4Kg^!cHbc(P@5,`T?e9$o+%s@N*7SH]StT)N%G*U-'2M7JU[qYiW4%V4Kl9TR,8@VrpBVt@XnD@`1Wi]0c*$5rTkT9)cC7bU^%V,37.2hj0cs&e+e-2FRB-2DHfIFd^#I3f.,49o&%H2Ri`)!JHXRg4`Nr@H?ODr/3Rp#\d@S,SFtq=_e>?[e_'$NBq7^O+F6^O-L,NTop$0D2qq?N&=Po[e$=r:8=o]`,g<kuWW^hYbi\%]AL;Ui6m[1J,`=Ej2Lc]IXUr@#)qHRrT3.Q(\c6_rq,ON,.bL7rq=;OrNSSGs-0,tIes!%%r^;gN5l6NH2Z&B?G60VTN0))f0A'h%fB7(%qCq2Q?9Nf:r9YNA(%\bus4mYF]^ogp*jC\jqY].kmuFSX]`-l&`C^)7iZm*2nU:9t7&Snu*T-keo,mFMpZB^N7D&J]@V7A]%U&D`eGC5#R]`.f[`1ZLe\AA#9LUZaOh7]YoIf'ZRO8kfVT:WfDp%$/4c[YfObO>13Yk*'e'E.;s"RAhos7GI(bF]l24;l4!celH`%q>I?1hu;m'G:t#oLCLc`LR52ok^nU_B2JKfi@!8C\bl)]c[U7l38a])MClSCK^$+O(p3*#qWmn>6m(iWYKbu)qX*kr??UJgS%E#J%?iBQTm^N.ecX5K7pt*tYps.]<6pFBF3;qAqd?":sF-pJ;V#JJWRHrZ)k:e"@dsR`?o6%c.#`a-G>]e)!='Tmm*SdoL:@@I$mcruW%47@UeZ(%2mYA;ZIJ+,sXo&p"_phQ7L$b\h3+bg\O.%uA2%cJ7"iS6YaE:%bWk[TE'VCC[,.C$l.&+LK4nJj4P)R#].f+$Gq@S/(F%s/0sNqrJU.3W2_/QLFH1Y^sO_c\+D(^<h)`OF0k%ane.FmrISt_;>V!<frmMqh.1iZ1'u^=2#dRVd&GWe`YeWq&\`/DZ'',;dXGr%fCSZW4^JZNej&h2Y5+MI1W%[Lh0$G:0:0lXEk35DLJ,8/9=a+V]#77Opl"I*qr?k_q0YAsO6=E&DWfa0JUC5UfNI[h%U=_:j`E\W%:<1iBe5#[9:AL,LnJ"atjA+O$3*qX.j6:eN*ffViO6)aiknoK?kbg$?h$,lE%d1aoE',*MXd]d]O:URe&)lFWY4qgN@tj'd"ZphG%:-l@^@gDB@FK]'gTp*jJLg>_[6?dd3i<)V'QO/!KI6V0?JHN]?L3rtr!&&jA#rr&L!NlE0i%lm-/eg@93g5(gSPf@7OB31m"WRW9%!S?>pbkCAnOe;7A1MoG%UQ>3j\"@@>Gh@IkBB%`Kh]:VJ5,I%!"[BDE>6"5'9Lo#&M1GSL<q^OT./)?U53$_":[AV0=33<Yr#DTh%"XSA$lHHlUOS7AdnDd.iI>6do1'C)DVtJB0*(q*_cL<Fh0Sc[/?(obE,>^5iD].9[=rZ1na*R"q"N,Y)36Rb+^4k-<7jfD"kRCa3%LN[K>[UDj,5d#MFG""k]jNO5K=Ss<s]<]SPYF3.LF[tD"r,gK?^IS2>nWTiQ.m[BOe<m(^YPieqXT(E@cX[!#@P)mm9mUt!q1(*_%HI[9H5f5\]"@;8N#sP&C"YEsTpPQPjTtU\iHUNi$3qq'&g(d0D3gV[AkaFGQc'u?5XcI-7R"I5DOAEZq52SHj%\86f7i8!0@aVa@%20aU,FD"&blI*_Hl]+.Q#ADg]W(_WDEZ_U>?O=Z^Xr4Ds/,T+5qFGfnd4s39rjg2Qa@#/3F'Xi5@GZ1,3Hb-XoMM\qXE%'7Qa,1S%c$.`^5HDue\P)%hb@p4i!Rd50aq/nqI34(/=nP@9md%ouY9U0Q-`+!sW@p!"F4578:O3?01k(%*R#u#$)%dCNCohPMW%<0$jbTN2%IbFp`4!?CT.*XFJ:,mg9;N7VW6+)#<YOIrWa^.ilJuUu/\ik&7s"L/'D5_eIqh"glW.RAD8(>HXLB!&b"j77um0frU1TG%`c:?Yf%kbC]fCe#H2I+lViVStdc-[j.oBA*OPO8Pg@BBZpV<3a2bcS+q\GA4cE/X3jb*r^?ZlFYAhq"So[CZpYZ_1"VeX[:a\OF7pQBN+d2%/ch+;lJ-"k?n:uF\SrA5I7n;$F'H"BBb$44EUR3!QJF/[+3U/S@I>$_6CZOXTGdj)]C0JchK?_O&:$'jS\F,eNG5Y<pW_dbo,h;o%]mFhp?iLD/qR$*C*u7Y,0i6h]CEsc]`Z5fIa_BV.ZMXkS>RD8)\J%*;*MpfC^Ao;hQmL@%K+<\/$W312G<<AIfr#8>?b_$ZijJH$%<WL4#&g)m/i_YM5+^/GJp*s1GA@%HL$?g3o>^8L!/)c0)@)F9Eit<2Sq4kptN#K)WM%uB0e/b+,-Wsf0qdOs@MZ26?2@nOS#oE0H%Z?L*XJl]YfD1m_"`8&TIE!a<_kgGaD%IqH1=a[p/')h1#4bR4IOpf\Q0YS8N^!O@3/kn^ZVk@akfOp**<dF[(rG9*OhnrH$(KMtf%U_gF0*SR9!M[jN%m*W_f(hIc1;JT7udCchVnZ?P)Jjih$4aC($dW_+9SZLW.W-4RiFSRt?BtO)XfQA&?>p<2pT_&E#_0URsbPSh'%p=I%R]5@n-DAK$C?0Of\Xj?3lU0WU&*#WbS6:Z-m':IYWBa:CCSa(rio`:WL,<FI)G-]F-GWu5".J@Q!?q&NWE*?<C]0`'fgn=go%l@]ql"XXq,cJ^%DpQ9BIFtVFU(`ui_#9!gO,V6/*$1s"h$roOJX'ZnaJI2`a*&LWG_$W[FK#T"&M](:fZkphnF=<MXPaF7!c]N(b%DE[!smr`):&M3R)C&o5+i&Zi_76OID(M)##M8tUi?o2S.Hf$C/=$`('Ef9]MJgeJl)b@MQ+9_s,G"WW=.7HTQ'MP3>b(YHs*ePnu%*P]1V=pmhR:7\"4X")FFQr,uD?u0dKaclk.746Rc*B\B40')"dki7elLHZdU%-6DJF<nZD,<(Z(4a-M6ocS^IZcDLj`#`8Q^P2%:%PPT`ARiYCL_#M<?lZ)VN5>aXZ_IXn(0AQ3Q?QXpInb6VUC)sp\H/^4&\F;Y`@TROa\Jj?]:TM\X]Q3qM;>dHaCnpG5[t:#ld[qn1%OY49l/Gs2TS(VkSqEN&8(:REdB69a<PP%kuVt,WBKg,/t+I[p.rtn5lU/,7EnO&9VAeoKGC321C!N.eBUq03@?QZjMK/c@8@h@U/%pKbB9Mc(Kj>"M>I.%OFE.R5L0$pB+PP3C:K&Z.0rZqc]d4c2;fS0TC!AX1&"ilm=6_aPcD%nV[Im@(Pg+]J,!_&J)]"n5UrHEnDu%<Y_1?@s:ktk6ls,E):r6'+mT@"b$@KmZ*riiF)KGl7qLgd4k_T%pgnOrFP]@^Y/P\&!,)Ns24.SKgLe<plpkQjD]q8!6BkH*Y^/k%E,k$m7c9X<"cY1!"u6Z.^F1'bk4g["k;.mTLN.2@o??MSY/Cu*`Xl'\g\e\tV95heeM9mB_564GbK=8AE)l:@%`PIk@MR:bU8X=Z%D2?REMHucm!BY<)l[Y:1`AgmIGsW0"Bg=1V:s3?Vb8!p]'V`*VOR%jV0)BNt-Qi!0-46Z6XfoQZ'DjsG@c%go*jKX?I#lqS/@"XM%KARCBQItqfIQ*78O8*oSOg7E/N1sgG$'+D+`cg?NgW8"k2E&tR@_uV55\>UYph;'M-F#=_QBB[n8V:X7,E`mi'0tS#)LWC[Yfl$Y%S=93XN6`khU?FMXA%O/<H6\-Gd'Xn*oLCPSN29@P82eIr-PU<nid=cmDBckE\NrQe*/m$r0NQ&qL$\-I(t`'aqS8fXMP8^^Q6q8t%"'V9+]u2FVC!S1.`sJNK'X+WP]Om,V-Hs"I1YQ@:f!0i6/e&+HaX%7U%.8ZTo>O2>2H7p@8ilF_b-9:YUX!sjdpS?.GYW2Q1d$nV%N,foK[]sUVO^ZRhgi6Qd-u6tW.Dud,`e@Q7</782,89qu8\G]-5[[Y&]o+[:.?8'O2iLa9ggnJCZ&!SHT^*bWYD0)F9`uB5TuL7'%4+^Y0oq^kF,28)6:LocEM'`O(':C,Oc\U&&-O3?T=;.!L)9`;P$SW*1(/1gkBo$JBEEIKW@6eNT6/#I#j7q#V"3EK_(l[(b"30b<%QY2Fk)Q!%?UB/S7(`=^]Z=KUh6>0)^]riK)>rs!2bH3B(8l/V69c09HlM8M=QgAk>m-0UEA"EM*E9o4tZ^<-5lQ_0;1@!;FqXoA"%pVc2C7563NiGnQ#6^:?qFui<-YP+*6[6[L;)4(jh>etN9"X^;G>&b,u,PFY8(A`13c]Jgff3&\1EjT"]CX;Okl`95lET22bHfa(;%[sfh\KLEe1(WbX)h^2tgpk()sf\,cA4[&e+Sr3G;r*`6KQgKAt3.,];-8s<:_^hDPntN>%N%a!tVHlmVS%;"W[#/Em"hI0_@fU08%s!b$=mLb0%E,/PQr[[mDJHKS>I=2^rX,;'gdEX5mZ?t=0RY#@:L"Z/$D9G`pa.tQI(+']7'6!03rm].5<C!TpLh]l)3nX[h[t5W=%pdXsRaTjueDD(>7?86'RnD$jUaP)I51u>#kq=?ut0]&St*8$IZc3WbV3/!&i1)dL:BH:je,cNP_#'`gtLN@&QckCA[-/>i`iEsQ%%-]\"!.+JN#Ws2O?8C[iC3=%IY5T!^r34)j_G]cE-AD@,8Er_t&c?q`)a1u^0-e+:l0d:H`E?g;\2:e?(etMXp/Nu;G-iCDLdk\3k%VDO_US&;b+M.+8o*B<2-`]+*t1XVHI#rcQ:'?rJ(D'q-o49r*Ah\qB&@"aA)81`aWna[hr#L+l(12se^V1O;0"aL0u$J,J<V0G=$%]H#!ji+,%9)DEKO9rFiU?g@Rl"=Qf0?W82$,,R&JB\erN=.Lh@<)b7qcUg!lb)41nNiEkS,/h,;G7FBd>Jb']:&&Q[mcn)7?WB+m%.]YeQSs8A=SMbO\r9'e'6XetZ/+JiV$TEAkdY6L#EM\FH/ZAd;nP&4E03r<a"k][QXAT&BXr$MQ9m5Q4iF;8RK@kj=iGM/GaS$K,%OjB"Q7.In.o0/$*NLsf&nA7qFk,BBO'kc,e4E=L`8u\3Z+q/,_SFgl-I)p(f9_](QC7Bj[9HP)hBTe&rR:r+K`X]O=jX<*Pa\+_[%ROr<"1HB3f>;'^q,a5LQ^AF_o]/L%4:@&CQ13PAnrE9*qiS1\g5I!B#oMbE=310B&bU;g(b]F0ck2XZu*hQHdg1Be700dp"qfU\A%%Zc"kp4Kdu%ei_YUh3.]Os'SW'Zl1pQOc1QCDVK2bG7?$Ui@uSC9lY0(KjfaP'(/6^M(bi<&_6]Om,#XCgr1W)i*=^ZK)Q+V]VJ_%BkLe4Hs4.g-I.e8Ar2:Y6NA)/R+Tm$Y\]H2HW6'8EBo%@!YQ7k+#p5I*(Q)u>&J%@@Rbk?>ScQ1SKPD_7#@a0r2&-[*qO&-AYSr]%n*e)a=XIe:%OEH8Pe$Ak13:%3;%hG#\Y$K*k^EIW`&'DDTLjP_4M92V7SNAdiSO<K+/I]m(Zb[?iKsYlgkW19_D?t1+QXh/=#0Cs%9.rI#N=qlOZG-oU!)*UDQfCE$E7_ZR1P`OU/k2Rn?1i`W+_!"3ipT4GLBZrq6qDqcUtlM,;YXgT&bCEk:n%ZV&cJimD2jjEK)5,c%$Ogn_W@V/&[5]jMXS<L7>g3\iJDM(j+p=<<Y*n@D)^>6F,b\j(?baBT<15,?L5_'Eh2[Yn&Gl\U*^9dI)M]HHHdLT^8[BBHn&oe!%rVGVnV=>5O1&$n%bK27VgQgi^Qc1kqh1FO,a!]o.Da!ZF:QAj1l]d<3/rhs3QmN+pXhmaEBG+*HJk\rA:<,d]a[IsW-B,N/'].U*%&e7>VG""1@F-Sn9q&K#oV)$P(&-GHS1<tbamS(2\dYXL_fM+=[K!@<X1E"l5hfD+rS<$f"G1a/3'U)+Ka6ZEUA++ja_H@(_<ahLi%IJ@r>^6P6u&iXX6dOh2Yk^QC?#ocqZY$=Rs;/$rZ)N,U68S-$^\WZ"^OfcjiHsK=r_8mLDVN%9o?@G(E'TV4@'T7Om&.9L5)'r\p%@Dmim"CWsuLQ>#$4+a\sjDACPlY)jq_?WKFCE?80Gs!<rI9hXrP_0l4LM$n23e'YQ,+&c[)o`Ye3);"=QW46Nh\D)\`++UZ&X:C.%b>MeOB)^6M($m!V9r/5U;h(9Y\nO[FX]N2I5Rd9&$1S2ZR3'\CA7"IBm>tC0b/g9(S1BB111oNrG[A!i#$fLnL:eZ!-=F'Y6+0m^%0o0_4g86Jo&C_%(c>$WG+H5D:K[hbs"]6e+=-YC#O@"$QrY[!-5[:<tGSbN2/f9HQYQp7DhVW.TN(K8UP%JKjidK*<]S2P0h=;C(%\<k["O5[c*LJ]'ah)CqF[]qj*,=ctE_&[l=B6.a!SCj6QNpM/QJK<V'4Q=XuSP6K"IjEo4O,Rj6=4K1uRBs%8k)naXhNWBS>b=cU%e4_=9N=U0/ObN`Z$;[Dc,RR>AYRq$PAh%NgGi#HAZ3L41P2Oa&FZFIgg[.;!:OJ0uoR-Qs[*LnMp5.sS^4#U.G?!l'm_?F4nb%fa%GjK/U3iWg3k9oNl,b:R;o@&X?k40lXs-,gkotDB?nZE"nH0dbDFOg^GY4n%h#BsPH*:@RT0>Y+nJ,:/#-b]K%"nJFBjS,ib5C[qJ%_qg@^]'Jsh9?Ae'`K2<&Hmn"PLr6Uc3O@bYS,Y0ZlUkihjaAQh<W/a+F?s8JH>aFLe$JC!]>p^5Qil[pDODP;K9/KW[)h;gg.WQ.%@Arn=3'lI=%`/!k>P',-+r>8n+A\l["kC+"Ke8>I5_-dEc?p2]U'KuJ&A>TtIc?TLJ1=Vus,6a$<=d@s[.MF!14Rg[$RK)#V*<im%Grd'T:u<AaglWS=5N-?r7IcfAO?B)7b/1D\04aH@mJe.GFaDh;O1e9a7rSADPi9M-$YBAC/F&"?T6;-pToZ_Y>L3Isj+Xqu$3-M2%NOQY-mFLk+*\DePhu"6*M`"V6>?EH-@$tn@YulWiqL"3Tp*+>hpH"(VS\]16[hk<&9\GSCOgf2-Q7Of"BAM&WWS5B]/qRUYjN/Ym%R$<7m;SoA5E7j4tX>:NoAB_JO_$AC%.0#o5mU[u6]oiKP=oi?FTg-!X_mJ.J2`po+]mWJa5OWLZo+q@:p@uZ\s)t#am.;t)qG"+V%O8$$:m5Oq@QOiKX0.kYeMUb&*10kC3f^iOV.FY\AT(-+ghkJ#r*k%9l`e(i(0%sX5?1h]1!%@ZWIuN1WR12)kgh6G:GN-%hbAGUS%R471^Xsqi9es)lp'g=9&OZ<5V3Cc5-lA\`mEM]:-M6B9pb7u4gV8t=@/T4AbR2DZ7Mue(,-$I*LI3'2?$4Girhc34/Eo\o"38sFs%3CRhT*iFecfFYB$QlaVLoNt-<KAbQc1P_<bA0Z$fTUEB(M<JAI:Qf]PM/:&1>KX@=r%Z85K:FYl8#84=X?b:'5GWhj=PRJQ)S\Es%rs<80[ah"I:FZ/4=J[BCS=^[_fEk.-nihKtqTbpNGf>n)o4X/6a=.?Wj1r\u`YjQ/AJ`;L%hnd;lM6A,0AaJ=rt5?o(k>!T0Fk=e%()+>rMk0T?_;_[/F4Y=:1`bXY\8Ft#XkWe#=P2RC:^*]qXj.5P=6o"pZC2,%FYQ<aAd%MP(:aIS02n0F='(,fahhRPq1G=1k_G?+%7JGBR50GD"q6T*PYH@aW'%6/MMDHX+L.12/:7\4%ku%=dPD3s^O#gjMR*ipHq1R)$[",S,S<Zajq%F2"cOKLu1@Cc8a/@JXBm'>H%=WP,N?Pg_*b0A[729Jq:>$h/gPkh^i*PV^bXcB$g^'<3h=j'OjC;KSXk)(2RQg>QTm`ep,53:?YjjlTVeii-GI972TEpK<;lTY:5%.C\^o\*b]'jtAfSk"-8Y7,^]OSj_PbgcAPc5<<`-JM5eB1[0l@rmV(NQL8BFbk=%g<:]Al]'!qf4`=!fI,o90;NZ69n\!0P)H?oa%OKG5R/N1\J'mNrn:kQ*Q/W?fR<bj.a[<+*V3L0h8LT>'gEZCrVFjRqS6-5:VW]*4:K9?m,+op$?i^!*_ip*1EO-?o"TPXh3%#W%^%=0rS:=N3kF]3U5(YYA)#-@(;:F+3htLBU'e>@3"nY!SQm[icE/i!O+N2(]g&s'Gq\hfg<ip1B-l?5G=ZE\55Mm$2BG5<RI][3)mR%BS$MTc2:C+p_0!^l&hA&B.l$hA,/sU7>A+2hH0HiCBi4@48tho-cC[P;+BNGfga`--Xfk=oW%.E,Is`[LU-%W]sisaH3*OB[-i@7%m#gm@k#Rd\W[USP^97\M,\$n69=aG#;1CS]NY,pm0dA"='b[,L-)\1:,\PCI*fAS=mTtkI#2$Y+&PDpTiXYB^%Snh=V\nr&N;+hk%r"LB)M@i(lLnA.p:GLk,B[B[cn4==c7,^]O^+;bO=-LXi`6/^qA+.,;HY8#e)I`)n=PO^$mtt6&&n,[4YXb,$@A_"`VJ2Q5)H@kR%[8gFFF^/T8mW]SX%^K>u.nn*[p>\Y7a.@Z0YLs*4+N^j.Z'5SG'2+2?gBSe7'62*FQ%VY=JaQ$u=;$?>(hl7IN3@;,Ib*Ar_Ds=T%kSUYK2JZWZ>\&IgWo^BRnF:8(Mm8dc0[4S%]ej=hA[\(ST"C=;j5i)?M(_6.]Xl!Us5e7?N<YdBJqO$<hGjP<s*$?9[''NH8mjgS%3r"&g:/3>AR7#F9^=Kt"&r#ui+,oYC8q^D-AN2?\U!^-;Gjr+Cnto[_Gp<;e/9uRu&R8GC\=R@>JWrU3pC[oifO!M\'0K!tW9^4Q%:s@`@p2'&<3CqV67JKtnW/iM8'5IRZ#:g4DklIgk6l3qME;XrX0F#=!1AA;V`30!AlGpWuca]VfqnNu[R`$5L'AcC1n4jUWpQ:tL%_n/H++4Ek)9=TKTXrj)%ifSt^NeH8Y/"W#Vb=3+L1t#Nf2iLFT(CW"PiPcugA2>p-PUiu)'J$C&R>NOAN@K.rd`RGPS/tV+$PkpL%L$SSO`+$(AcgF:&\IacQ2LC7TR^htN]ohIi;DOBRl+Ne07fnUL\DlLgNp6.Qk?(-I(\,H.4a1s0E\kc5Dnhk"F8bLs7LjJ?mecFe%SbNs1%MJ86(=0J-jP<@X)mKH,YTfDPiaES31l]e]ctSaH!AHX6![gr"j(?.U;0W_--W,+$"Vla;X6J0-eogl6$m:#mdqa<lq*'P!%5;UtaT)R5UVp?k/oqe/$H,%'[Y+JTAlB/cN8*A]R>4(k4\L0I$j0n<f\TcIpZCR5;>&Oupq$s2T"8Br,D>/j+$YM5a`2tW67[^sK%jTTU?;`<p`2nSf%3pH(9m//J[I<i#?^Wr'<7,"\)AT)c'X%]927?23W,M=dhq^-?ZHdnd)qH^+!aj/%;@Q38a-*#%EPTj+/]rcV#%"2%U-9(iu%?W@QLBZ>\<I?5g5W%/[^3q>FA7kIGX!C$dZ>E@>pQ`%^c<"X%L/@]t(E<GA(^9NL[AT9f!a%SDFSaK*sY=R2e^M1sl%AVmEu)5oehWeQdW)alJKFtb0X9KWK*7N\tSjO_'>;d)&>qGYD$"Mk#V<NkcdK6\m5]HF?UDQ@>;@`)_k>5?uj8B7==;h_8*N=">V%_";V$iVi=LT5huXWK2.i7\qZ\='K$O]Y36JhA"2^P$-9!C?'<=Yq;HQ.%I[pS[C#?FdP)[Z^)?5K#XGG9bFL=)(dJ:247'?GnGC0%h"J-W>O+ZL[2uBRQ#*.N7:tZYC2KAR>Pn*%\g0s27CU:]>5NHO7cgbCg0<%#r0AqM[<LMoWPPuhlW4$Z4/KIRj]a9_s8ECIQ/EWg%J)ag.DVpV!PfhX<4jRhq28qKN]jd]p62+rFA'MW?@g@MCXY?(Pq1+MR1'tOS-b[c?F!ImU0gmpVAB.&CU$4%R;hsC#qkbIj2>u/:%fFMl95)/8gHat(pX%<JT36G<n6cBqj(Wa6;0N%@H;p<NuJYUt`[dnbYD#[gW2K.`2hp('O@51V9"qWY7Cjl?Uq,:0ijmLN=Ah&'O%mZCIJRuD)\;/n2L*)pujTN/sh7:[B15^>2SQ<lp%&e#Z:OOGFGQCEQ`BeRAe3((mTUT'Pn2q>3.-?!d<@d`-/\5';>O)p^\BG4&5%0-VLpVdu-7f-eik>kXbBU1q40ke'J5giOMt5:nVtpMpTWfn>N98gf2HG=c_j)GB#VK<m3GQB#3Wa^[qJ6'%U8i]Q"=8EYFsGR6$.%_-?F"h(s(%G5g"jnhV?UM-(u2%ea/t:_+Q1Bmft6h,a,QA92D@@6u]]G&&d>FN]EI+L":CX\DWM7dcIVpCEb]dsGs+pA"(3@tsmQ%TkobfA.It]D7^"]@R&_W*QR6Yh4$TuXKpG@)S&Z9]0=`\ku7P`%s;geQs?.upGRTN0N/sq64"ns=9=bME&$_.&<<:)@X`L41jM3L%@P2t3Q_;(o3kCG.G=rS;R;>&qIA@.r3G@kjm%\WW5u9$:)Z^U1N_nABZPMF"fp=;;].qZTM-1-u]^L4WR@NsfKfrdQpG:7i_;c37%Qa,AgYjk]H`E4F2$_>jF[M7K/s/i,5MTJ@@+YRFf'ojBU\a>RCGau_3)FodlGAGsfD=$_2.Ud:]bkX'8(b]u_Bi$5m7LgXY^>PS2%>T@OriqACBLI!AS1$GunZ;LWNacL)FALaK5nh#ie8kZ(YeC&*2^"S[:p?\WLH9o$:gsV54%gn#K9,^l2Y38"9S<q0`]=5g,O.'ra%2=.,/-!*%D&"5T1?Z6e[Mu8D,50R<l?rtC6Y%pnZA`%O:%qdk##^X"RcOTX=YRoVkX5='7(TGa=pXEi2Ie*09,8;h`!=a5S:?L%<%D?fR.c^ht1LW<m0NursW`XQ`dJsH/-G@k[bV_(=ZoBtuI@Q29X+d%C;Mmka.Q`M\.`u?M7S]%[l<+c/r=lgasmSA</[&4VImpE(1%mqW4d5uS/94a<T[o4!:e\N.=Dp!&QCpY2A<N(n<%OZWBbh%]%M^J*&A##`=D<p%Gu5#^J48*)m`<;PstG[Ko8R/G#>b`>,(\'dGe%?%_DOIn\SA^LqXH.L@R;Qb7UhKmlVS6B!m5i\bZQ$RLYb=4a!1':QQOb"nX=X24t2puE5cXgf=pO1W7+V$XmfmCbFBAJa&9S<pPQ%AQi&rDeelJgYZ=iFlBS(Ks/=U9<`*7L;PSid=BeD8Mm*`Y`eNgML#Y1I2]X-9.n1E:V'\Oe_@@M#]]^)^,WNN90GfE,]tp,H_0F+%qag@-I&d1IRa'1pT>TZ0ls:(3=Q=J>Lr>-7BCiZmC^BiU`WH.Hp<$l:HP^1e%Jst;l`JKd+/VIA+`!^X;*9G9>=fQEH4HGp$$fHB%W(g0iSQ#,&3J^Rc%N&80j*>Q8ach)pXs\lW`aENf*Mo(K]W*9"j=:NbmuF^A.(;]%mVKV.agQh,]8;a=i/"Oh,<mO$mSW(*R;28b%++qt%U*1%P.K3"eo!,C#)ns&n-C1pm;mZ2^U.i@upWQ3bi5f^&dS=u*::?HDbJsm<9]cu)APVFcZT;q4M366>"_V"NFZr]GK^q-Y%kYNH@"SAlK4B.3<^r\m.*XpVXkVN^k?T;@4=_s*:ZQ;WI%rc4d*p&-\2-a(2f+#e]DE>^alpD7Q[o4)reg98&7is;6Lj'!;B^^uR%?i"L:5;U/nn[%li`lm#A>01SqeFFrG\lll[oD81#rg@m$)Jdr,Y5ANj/"0Z^JeRlj>l%h\E`c<E>@sBV1JM\?8XL:(-&[_F<@3R9%ZYc*iZ:Gh#(7?Aiqq79l+cD#873]ess'o4ZIaId)`dX5Q8*$C9!g9?%"^VJj848n+([9)A0P?T3FOH/oOd8DOULeHYV'g8?d^7(n%P"[/LP-?oA]0&g"4A4EdajZsMs7Hn6h^n5+5>8=%jj,"2a^eS(q+17bSj'<+hL!7g2;6MlmJFS0]VghIq>9*+YC+o)'7"KR>5C6f%4I3lA1Zu>/fSA5+SGA\Qs'd`pp<0R)[FN=1cnG>Q#;GmgJ<B!-]q+rGca3`+/$_A6pu7-#&AIUq^!@o;ISBA-)bR^WCHkd7<ZZRJ%0=%bHPS^51%Xdp,C^hjLVl"?-"l4YSql-<Z]"IXggiok*$_2P4FQkZoi04#nEoT$hdc`TM6NqN!2'4C-1GK>;DiX+pS3aJd5fKCa%(XVKEqpZ:L@)9IR)EK\4cJW+Knq5>lR5(?Gprj/X2WWXmFDr.qopiBWg'*EsY*K=\:;CEqF/cOD2m4=jOd^Zg`YIk($%Xao\Qg''%cTCCMRL<<5S]0@I6.jk#+^=`!a$N6^A`3YNie\2PXYT.T`^)AAG)B*;bU,@>1ak:!8,]@ljj']@k)^Z*1YOqK-aedMkBK:AQ`jg1%O&1`J?e$GBQQ0nH3.thCjn4@gEq(J>`-4I"OcJqASX@:Nl+I[-csZ1H$7OQEHOrsidFJn$3.9_^\W=@Dma7NfV@Qp%[sL9oq``c8%leZhsh+(^\2sjRCrg<Q)O+*rr$S[(o;t`H)@t/a!J2;Y?DPOF:H8"ms$?6No-Zlq"0>=*N,P]1rf,qbK*?;ZTA+!V%pfl?GC"g+?%r<E#!J*,#AlZ+Agp?@4KDFV#IX`s?s+TAS*+KcAU6I&uopJia%IW&kXYD]/'/]WG^^I^NfW'_TKr`+_45kc)T8EAUoX:F's<UmsZ%_FK%alfU_P>s@)pH-FiGgAR1uJ)t1f$.H$r+,-$:OHoLULCW\Db\4UrompN<(>98OQ6%HtrK%Oi*LJaS+g`7FX;BY(d62!EA)nD2%g)2Vl,84pTd!a+ZPt+5"6MB/)bGUU&.gPh3`PDuB8jU0f\0(I&-;\1hor$fOPcJ+FqG3']RQUX3E)A$9*S28n5CqUa7.rS`Z[c=O%>hdPK$1Nm(+C.<-f+/tug>OP7XT:;+`[1D1&^:^P(F?ZFU&N*h*2"&<6T85^s"<g."lDC31>dTA`QiHtqjAK_Sfdhj5P!d32P9W[%hLE]DkDrbN5OG,[7kCdkmBZ6Wn2"/66ES;IrQqT&7GZTeGeC*sFi`/0_er34D'.0oDWldAs/:_$8*VDnF77gsl7QF+4[G^JfCjFm%omKsQcsAn1>hE:G4].2l8(([QleE\rTXElQdU<X$,o`5):Ub4(]!-Yb1:A`K`<3KlLDfH><oQf.&8(+pQR8")>f2N0L!\WpHPXqo%,PrZ(V!OKljjTE&TC2&j]!LG]cAnea4.bm,Ge16A7V;/)#/\&ZUSg18T'kt?%j0t]\u=RZ'V7_O8JM/?pH!djp!@i0J5:IY04m#5%m@I*jX7N=@P\[`c0sg\7m,)q_`44*dR21W9p.p$Xi$FY#PutA8#KE0jE?aG#L(`TF<6V'rD%%[>i.;0]KEf/$:<5TDUTf7qd^)*O%8XBDr*\$F/i1Pd)S4<*!4In4(:I/a$ClW>fY^N:E*T.U1IbZ\G@@VY:1LZHEO>6c@2W9^Enq#+NHm!Lh".9H;8j_/W)LP5q_('AR%2"tWtkT'hdl?W6sqO(U[LGdpL8Q,2PBKjglUA[iF3+Z,*(oB`ho"7Pa'Q(@oZXRp.a_#bHA&L"L3G"0?Q0-O>i^bG'oePD'-NrgT%Nd`uH;MW*#[^`WQ<*78D>3j8&KF.PX'hj#3.`X3Ynn"hA[h;;;<^Pb5/b$[7HiBR'$BGs8QU<ma:/pKS85]'kQXo:W2:!^U'LQW*%[\]>5s!<$DUKXqc,spq7=,h)aE9X*bAJE!T]L=?mAQ6n@_?jfa;e#kL@`Z2d9,aB3-ILsc@-q9B"7jOdAf&\XEL?&*1&H`*H,gF7%:`%ujV7g%m^S[oUQ[8Oeo\j+:J/sXE&c2!:F*7>`]dgM++'/\WQGn%!j`^B=Ub:sH0[#WkF`m*u0(Pji),mTQ]9>88dS@ENGA656%Y/b:X4gal7)O]>jE0#E(1:te+g*Bm:]L,4:pp`;A%.X".g>78s)<P2AX('rK=Js50k<66',19Y8Mi6B&%LR&MKi5@8RT*4FeTY<-%<S:`>M[F7EWALo4+b^Z_U,]bRSke`X?[V98FU&GHBmVAbD:#t78a1corpJ%sDr/3UrU/e5+2@g/X>KV]e)1*,IgPb6Dk=^jpYtT+%^'&l]s8MTem>IV*%^1A0p#:b@qQ'[@cJ?NC.fTp$3Sudj2uO/uS%h3i@7eD`5Ptifq1&'Es$m=nb?_dXgUht5n+5?G#lf\;p)e(?%%gL$un"+[Sl<Odb4Srq"+2D4Cli%r\TqsBI=H=]6)Q7sbnlVukRiDG:S'<2e:t(b(YQ`1`qM48'LAob)dp9QR5&_d!)+6^ZSbUgF%"6%:lD(u(T&,gubU#J@Fj_L4E;Xb+s$glfYl5,NM_;s9^48@l"pfqH3l5f8L'Ak%=m-[4kC%;*B9V-[@K2:>K1s,?TA&[?G<ZEoo%c#_VAff-+>a]n8>SF*Nda:&,5[0&-nYehY=^i#DccTW2-jfEE0%q_YHM+q<.e9!.%0mt`0HDE,6hh,'W=Q<V)CGdF?ZND>rn%n>r%XRXDZTH8jr38qGH%L(0H8b'\^[(]Ai*)9)`8qN_AnJ@^7oA+?L^fBW:26-2,_(C$9r<7TON0Ac<T$UbnfmNN)#7@QfrJQrj+Y.oW%[PsUtk3NEoJGtC)IZ!a6GA)F'>S8*WOtsN^87ir1nnPDlC\`:$AE4Q5E<W\en&[)BRKK]\?/\5ecWOS2N8)m*A#GnH?-"G[P!.J1%?L>S1hH8eWP]jg=@NA'J;J:oIht\lpkVZ!/80UP4KEbN+L#t9LGYa*<1hie$).Y)[NlqC")p.t\#@$^LIH2UD6ZqT&bg+*hSUSIR%#P(5`Qt+>VqK5=&$&G4#[_['Ld9^O:]-,b"h:%fSb'@VO+UYh9S&:sI;=4N__?(nr>cY)m;m(pQ(dCC(K7VE4Lg.R)Jm%Bjpk75+%%:SW2Mj"U8*K\7MB9Bu6IQq,Z]'SQ-gQnICSlY^2na.tos&&9!4N,R\T'!XPs8O2?Abr6Q(.RK$ab^5bf:fa$TC-1V5@R0dF5cF]%k'.D^"pY!A"bt,3"+h9**_[Z*4b:]]dSQkB>^+UYr=Zo:+qlf,1uMQ&m`\B;:?:'#Nq_IU+i3!Dm4M&S!&"#Pn';!\h08$7&/h1V%ip0EV].\54Ka)8KpZH>6pVg.0(`RXN3O`T>rWu[<F3!P9BNRT'2uI<%kZu6mUO@FP,klG+8YouJpZOFcg\NP;!>-0E^r^JY0+$PK%pjPX\'Jf*_CY:4UqkmHg7pEk\DYqc/P,h3-jhF^**iRQ[L["P3]DL-^n,D:\p>8]Fq^bj*oS4\4Tm%N)k8,?Bd/mZIl[#I`E*$O:%rs*,LFLH^gBEnBN$*G.V[Na?HGm$6kge.,LHgYY`]X5N_&<V!PUCe,J?bWIAX=b,>onE$U8T8TNCB6.7E1lV"auOHGn@/eg5_sSj%%KkGb0Z*ru\93ajWTnL*Z#]oSHTt"*87kXa8St0*2ZUaDmEGsi>b;Bp>+ZWf\Gl\,hFZH5q.4:6GLY!Yb5KS+-_-c(I79YV&`?J^%40[L%QT_aYbci_5h)\-ERogO/O;OBfT6$kambgiW=`S0C@cAoE2\dDO(n;7K+b,jJ!]UJ'?l:>bpG6<=Eu"nmB&Pb;ZAKb>*T6"h%D.u=&lomK5)bb'_=X-)u+HSf\;fE9b31'\3!<RH)9F."uY6]^r/p:I"&8*!(9lA2F\OApFm\?CW_Ra$,*!\&-UgjR=TC@"XFIbn,%"[ULE&n$YiJ5$:g*V8+%&]nt1;]fJXkVC=Y=1*^g$\oPWkR*6?:L17^e(Q#9&:d'&.NnNa4:>4<.T_$^Um+8XSNNM`4V'm='*B1-%Sq*Xu7Z_&q1P/L4b'XH67O-@e5).4q)KT=n=.^3nQUhtqf,TiF?Z/Qpf1""6$J:n8HHY(r?$Hu\)s/Vp$`j^uS*)gC]Xc<]"W!OP%+JbYb_fHu/T.A"iK!#CtDhUg[gc*h40B34Q(7AL$>%JB[`e70a:`,QeOBM"(U<Ulj&R(hj7Dgq`#$$5QZPhtb@ff3U&\'Iu9^_7^%AeNfK"7-Xn:&d)2Oc8(&%qc_j+M)I+[N=#De3k.Q[m"mc*i'/mo0@COCb@HMi'.gXUffYeb+4*ka;iA-5msE#C*3Remqq0`'kT?)%@hRVFR`p0[]:%hG`XE1+)&G1:^e8.0S!,$]&o$W1;L]b4*@Gkmb2+Mo3J6(>+MfJKJFOfb^aN-jJqL$SR=_T5RN`#'(S'9s"O*hZ%@B9Mb]Likd$QorBFlLbuG@9U2Yfd>M29MXtSOemh,jL&jOVDrrd$(C@$(+p3B#A('#Z@Qng6-FP50'G$2P0P?DqY0:bh%qJ111^d%UASE&p`p.+<KWS?!$s;8;A;$2[k:8n**SYr*(\%j?lS]kF^K?XqOa7NM%EXB/'I!qA@;KbbC"jMRCiL=D7a,@=[+]K:]O>r[PFp7%A=7A/C$8iNZ0^1Ad-C3/R'BbA]Nmfr2r#-6RtJr\5'`f<!8#f&+[[SP#DQ.O<?\RP"M?4fM12.BKl/Y'^LCUV-FPI-'bZ,dNohZ%%"r'3$d:B06RWE(KS/:LX+NV9;Dc:Ig_8>MA@MJ%qo#ng=@117-hP(dDPK<iMSVXAKpVEmF4j9Z2FBs@64;-4gE0ibNYL'(^RA9$P%Ao6a!.O+%uHM=j"<"Z^3,Id>KN4D!5i<KY$=CR?o^^.O6N4Q%.b,\#;GJ,<\S-4Pub+S[SDX5*8l\pU$LZ!"qnmi/C-8p$'2iH<Y%8"-U`*<`-^?1l(h%^%)q_?a8<YU8mjFWEPF=h\.?qL"pR_O6SKq6@<=k_6#LF9*ClP<]Mu]]mYT@piZu"i2`T?]+u,;?TA*3Ts(C%]M:uA0nNEoJmfi(Z^2hrYZM9:N.EX;VRJ-d)Y@Hu%.&UP`L([G&S*88,-c"4JLrhcjusq#R/<U'.huTA0S6IVh&HS!l#ZoOQ\?to%;`\m#@e-040*l$'bQ9M?40SoDkDFATh"rMtY$c/\JdtPsK*HNEn\",/\r!F_J^jm:E%eC%3c>Ah8d9JC9jO]0XUp[WJAr.kQMiA0%cmO4'`?nU5^sJD'\>Ih"!1h=:\6_lATV4^.Kg7R!_$;<gSOX+TC0;tK$<@bGO@0T2*ef]G(LZY>A"[`p$>7=;$.*a]GfY18#+6X&%%6P'kaUH9g%.F8jF_1d/R1>1^;:as?&9+"!I>)(j"(4#>3X''O70erf7mlTo![/c+5gLDMW%OIM!CPc^7!%9A7_fYU$#-1J!LDjC%iYAR3Qa+e/I+Jt)[48/hrp8E.J;Tdg*UKdC!@S<Y9W^&BF!bl3TU0@t<,Vh4Wah=h:6E_OJ5,PDoLUUu$;R[!h]"6NnbN8PP28\e%D@h@+S!leeS=L(GaC#7-PXPXU4[;YGPL-lU"P&Ds/mrie'6(b/!M,V"k_l[H(!?a^c89%8V6IBq6._'@7)7;8)AWbT0ffkiQj@EM%:(]lOE2,h7!0#)`JI>+jTKuin6SM]TK$k4CaCh+;bSsYL<O=d)!5K5T\$As6(jpJm"=dXVG#pj;iLC8XH,b[d&V?rF&I:=pK%QE^%fL/68Vq$>qB,iINN$&u[Z>i.+"6$[iH!);FB6%.0N[+`FDeNNt?u!"PMT21P0IN#c]f<:dI$5j&K<?Ajf83RA(Agd0=ZctaciKX_%aAEu(Z0i4"@!+C/0uCp<PtjGt&2[N)@;7UF72a([1>@@G>'>rQ.Y<b)=f$8S_`6]_,F]A>TYa;MCDs8eoR-%@8"LNL[Nd1l<YQMt%!]F0Tq+XVVLSL)MKs70\_(HI1btJjskuj>F,S?^USq%.aBUNKAmN/=.*jjEd0J\5NCnOU>KN1?J"8E.qKb0oY.#liXfSj["egLP4%3P.OA[qc:9JqC$X0*k*SrC5,Mm5\"nJ`<ieKbD0q]A&2c-u-Y1Fr!.NP2erdA=6&_We8Y%Yt`6,7@QPkX&:)6Blt&[71,Ol4U!#0%lWhB^?mcqE:2#>kY_o*t,-qpSkeR19;2D;tTF42ies+/58pp`=@U+W.e9]ih,NW'5@j"8s)Wj;37?H]*dk1rY/lG":#9l2?4_5C]%+?\lQ]CDmn]&FT[,MAWdV8rr,5[Pf_<]Etf5W,HZknLd-*KA!qCC2oFCn["<QNCL/A7U]35jVeDBeS3[.EHO@AmTC;,(#0;M@T8E%bb2%$rjM2M!NS%e4IL`(/L%'-'"hqE?%iEqS_tNSV^r6A6PcSoE2X.NV#a(kOp-CI_OQAXF[Ue`=,gKAUd-;<*7)M?hPK>&^^Cf;%>>3oa*$M/Y%S02tX%GXN<&2r((nrX"4Q[YdK,?dD<Z;1b)UR.*m_G3a[,nE_"L7Dt2T"+u`a%mnAZSVC_2Sm)!310l$<.VI\ZI,6%d=+(@jecR6;:ZsEf>4FX9O#LeM*VVMKS)$#=D"u>^oNU\ZS!H(<$<CM.ZA-f^F=t)Y,6C]iOX39q`OpZ1Cs/;K#a=\`)a;;%1>\Y%!6%c@L*SAdBOA#e*CeY@J/fFpHVSpWq[A@`-,a`j^_$ug+HZf.D9a?\@ZpjQ&+OOs4#Z)S7M<=S$%-3c,V^kH`cgM2-*W&1=^Fs9%"KcLGFYHr-WE:+!rLse_+9hU!67`rZZZM.+D-umu/.AHsWM0(OD5]I^@#%qX%`P&$8A]Me[7sY+&2Bd<nYQ<oj_L%kI@D[9:-_M$%>ZjAn-Mmq5,o"-gQ20ei)V9Oc(7Q@qYePu"3k.02G,*u'G%@s)0QPOK"*k[k>m7L34'5N+M+p=[/A[Fb$j9tckQ#k>oQX^[_lQKJ%=hXm[ikn7BnEN:-,a+jb$_SESPHc0'Yu>0CBCIe/IjnicG&[)=jh3I>qAR;B?35no4D^l)7c0UOS!15PSq3KQ[DQtHMoJck^n@[0%Q&Qg(%SXk+_U/L#Bc;k+'qGG0p\M%*$oO26R;2fj95kfX!Gu$b:qYp]Z_53`.=sG#liqEoVP6%30[-Ok*NdilN6\R]Jfs/%G^3#;%gCd)CZrskuF#&]nNF>-RgFVXF7Wp@F1t$QMR0Yf];ODEXKd015@Z?[jDs.9b'fh1o@YBEonJs#4?ae8d!T^>=GpSK#Y-J;aAdV!@%d.A)c$6aq:c/aR4+1Pqpd?NU4*,!F,8Odq4l%f`k;($UHCs<!4/C%hbi)9h]+c8T9?@XY=Yn/3"O?(D'V?IjE)2u6W!m^[8)'&F9%9b.@-S#OI3$Ld+(3s$g$bqfp53`\B&1BX!qD8X=JbC1I.5e]jY9a>e?^<@:mApu[a*(P;%!<A:`+qZOq0P2pi=O.g8gQQ642VMbQ%B>k26fh(CW7.(FY+TbS;0u#@,p71>'0PMBB]?0PeQG&RkJcF2oNruLMbcjWB/_G#Ck;EgME'K+`q';"KeS"5:QC60/$0WY7<Lg.i%3'jBT<m_V$K,8g@/Rc\"hVU/gQru0EBcI]tni]#f"JKogMF^!0kEaU^[%2in0(u<&1V+^/#ueW"(&Ko5MEjR+G)Dr`F##V*X9akM%%VNHL<P64USErIk]T*Tfm\UdH/Ojr8orC,@.fm<sZ7pAm#eXu"U;SFQJE(/eJ-Q>g$f+)+8s<8;GKW$$QWY&[4Pu,5+^iBA(F'1u%]Qj#PJ7Ec/2q3C-LsbU4?16^G@1UEKU_732#[Wf"<(5HPHC>"iSY@has._r8-CFqnl,l=GHY4?99TZJ-9$X\,BG?=B96K5G5la>N%/5C51MF!$tPgC=`5B;$BUd]$WR_6-fYra`0hjP?SYcCkf@)QRkO,"irl3`YD66[mEP8@pS3sPbGU?Ora4CdTZdUi0J5\`dJ?ATm;%5^h8:PQA"PSArEc/HA7KMl<3qS+<N,,r)'C(G(#-e^^sIUERe4M,&f6<S!V[6/18%9;hj,B+hj/B3?%>fM0%:-5nQSH+?J1BX"^f%!3`PK:.+[pgm,!8adGId"Z@d:^KCl\oLeP>(apD0.$Y<h#(@9fZPs9Y@Mm,ji-F.\!4;"kUhDeI4;3Rnj1E1Nat)CRAd()d.iU9=%EXk,a<#Kf7g;8Sq#;Y&sI?o<s%`rp&%'m6rB*Cg``#H[Jl-LSqOb96U[#'p$4!t/)WYCDBG6BBN&teO+@6R=VBdpD*caIU1'H!H*%bJo!L4_JnTEteqg.<]13!G4kBUGYj2/X2sJO[NJ]HJ9X+EmI%F%Lef"(H<G?"(T]:K-B4X,*\hnZPNa`NAHWuB^G.Y]2Zg)ddpIJ%6?^;I0l\o$8jJE;/O`,rjY3*I#GFD'SLB/]k/]gE$j-RD\F%XDLC@[Ur3@TS]ZHlQ=`iZ2N\Cb`:eep.-`*<I7>=n,32aCta$L?e%i+1Y`g>+lc]UT65A46qik`.:&c#FIFJ@854bS!-q=(tVUJV9\a@&bKZP\/@=$i-=nEtT7(6OFrc>-59lK\n@l%B#<N>rXL#(U0X[%8#OZlg:SspP>Sd/$Dmo]h4V@pV+LLoH4*$mL+%rsVk"r(eEki2"11f==q&P<@rTSbWUV6bJ2oJ&2+gijBFgNj;0A2<[Dn'spng)F%=tVF#N3NF?A-!:W$8=C.6eOj.Y=L3/Y;r'eN8s",%^5WO==sI=.a&pR/<qJ6etAi&"%<q!6AfCB;c?2a[a?J+_$!Wipp-V[)VT\E%1MpLI%+'Cn3_M^CjI14=jV;Pc!s#9@AYc2&7ibs<b10(.?<2CSjs!LD)Ee2,)_2Hd9N?lh.1`I%X]`ZiX-HpuA#c\RI!'&m,]Z9\%qF]3<=AU;J%bjUs4*0V`6I"tp!Rq/"%>M,2!h;igDD9S9m#q;h2R<Eb)`Ja?#jA:W"O?g35ZO):VRS)raK'FEEtct(2?`>:r;m*H%Kn7-k!0!)X0XOZ!`&Z\:R:X$#SsX&hoRRkq'IG+;Jj*L4GOI&]/-%a$XMoUdi'F>LW$tWXD0/JXj2BgbCq;^,K&#bi,`L:(X@(#`%N?/W3:!C>u>#KuUF[cM@K6\gW^l=<;$Ef+9ERbAI&J@_T&d&8:jA<:\TIo8=[Ge:jY\>Kj<0A@@]=Ec^<e/oX<iR/9V,;22g.FYo%fTjYN4@^@V8-o9hPAPd(lD<Ygm:%`#*]7WbkX\0sQ9#VjAjo[T+=<@@>55+D%TQF=CQeT8fdil]+fHbT&9ru*At#b.UT+E+Q;!,I%LPGD$\fWL5;ik/?`mZ5+^<8'#Bnap+js+r_!M7Um%E/R-Q9&<'g?-phOJngcKdk$=$B>j+!SQ"NA=hYScUlrNQH1('mIhlN6'#kJ%A'G.FX'csIbHaDC^b#H$3.mkEM,UbEkX(bf6l)8&cn\5eGAUgd<63s_*8esZ'Q=c-bLmh.8gg9J3HP$V+fK_<M5bpCi/r;>B:K"T%-uG+#P#$p$VC(r^L(/=Ij_YQ)HH+kdLDW!JYbi\h#p9Y=C(<C>1SNWiUh`h](=]t#/8.p%]HkV@Ur8Bi(fid+-5mUDH$VYA%[[9#%c(1#>>i_lE\Pqp>4'iKBDBN=]NN(_[XOoMX@c5H9_D"Lc(BfmCdsE2UZ0JJ'R*!Q)#[GLq47nDAHmRaW8uMq"i!$&WE1):1BgXoA%LPbRGGIVq7dZFkMi#u0]J@t=\^p,S;&rU;0UWLZqkTkj%UE:\RE_^VE`WL/mY^+n]1FC.>?o#q]gkGki"!oUa]S[2`o4=2I9<_1M%+jcEF]qLp:1nmFS5(ZI,k2_!<&PgV\N/UbMX(MR_Ve'8%H&GgqXJBN:%9pCtFJ9:$gp.!6n#OJ/i_Yk2c4,)ZR%aM=h@/d-#(',-%X[=I>TLsF&fI6iVc'2`N#)7u3Mjg-M!9+V_^gZfLcBq9oFL@a_)T]r@Mn5OjYfbW.M5,6e;oO;lF(33-5")TO/"-F3?jW3hn.r>I%`>VEEN_;rq%sT0k&[^M4QX#5Ffms3#1Pu,&3H.^p\uIM)'e`2f%?CW_7L"(5>]7G?AtJ@kQ"mhPWt7Z7GSMiQ&k2p<E_N7n2B7B9%33B9+N%HS?Em?R5+hLH94Ic]\B`PPT-jC20,FFZc+S8Z)+V[M`J<1hM"u6]8U?;,[Or+6T_-)eriV(LI'N@c#-c`Iq%#kJ-bB^N:%fOm:hO^o1o^t*)]QR4m^aHrYcAV@4<SjS-!]h#dQF"%s,Cg+]I!#lu5r(I*6LG,MU9Ph<!a%$OG-+<+$+<PtZA?"%TA^ua'6<gBq%dgdh'%=uri>_</@RG<K=nX86UB$7#IE'neofbK3IE/l5\#hKoH$!tu%V(64:Fp<<98be*GY@$>Xo+2hFoO+;;Q73GhA#+`'Es^,L%cpA.+4pk+s.h[$eF(Tk1[>mf]T#%+_K+-uK:'_+M$)0B>^1%S(j=A<^RR6n;cPVUHkPk#n4od+n'u'b<2PFOF3C1pn)g*,Xr#1bW%`k9F!.IQhi=rA8!*U8OgR!=d>Q7sp0^9e@taH.o'#!k0N!*h"7R-\lAE/TDM`rYb\-ruAD\]d>O\60Ba(1CYcMT(JeKW7';Kp!Pa%5uleF6EH^C2A1M*#j/)6-$g&BN'urN'Au`hTNbq@1$af1A3H0K<SM`U=BIsP0Ioo\S_$iITNelom=XKA"C`EM65RQRA0.]"ON&H+%6Fdu[(``A4Fk-\GfHac3U*2PD?rpu1TOp'W,mVgqEW@hSdKTk<.>$Mld/->UI+?3H;"4_kFq#V;"ElK5`cUT#Uaea+B*$duE]DqD%l9Ir,itL_e/>^Fhe^H<!&%teSeCU)D/eQk^Ruha<LK+[AU4aY5]d%S&GQ%m#m1T]HQ7r;]#a;.#!T#)HMrW8*8^B(*b4?ld%^P#.%%RbuFCfR1!T:\XTYS].s8b:OVc!L$;N-aEhN3b!bN]Rfa35GgEeI8I"XbsHQp/-kSa[,"%K!IfS8!U@c;:6WmG_/N&R28m(H7qEh%44bI'.OI[u+a2V9XX*,VH:4tFP_d_'`h;PK<]G$:.@Xn=:7='3[uB?.O:ECj(O*G&6"l_;<FgFi:3IpdJL0&41bDU'me)NeBN,+I%Qj\#YEGQO-g3*92:Ygj4<7KJ072+q1XG<".7:le%TmodLI_"l:-KFK/4<Mg0J2Ng[=E*c"cTu\-mfYnL!QlPg6_8Mkr&Dihl&Z,o%E"J\BZ@;@i7#/fmA1IF(<>FS6DkRiqK##^4ij_6Ddkb&o'3VSK((IC31SCS;1!i@q'8eq0&M7u/!6@ZWZT372FY!kOp0%-%?'agg%lmtjkQfJhq!&[X/-+.]u*\[R:#CV@>"UM+X;dI#.7L6WsR=Z$s"<>Nlbd@Bn?pDgoBT8&%<K,:/39eg:ffbFS7.`N9.;fD,1M2Aq%4j(@[p,&#RiDUBB*4)$=m#$Y#qDHjTOharI;!]09O-4c=MotBD6r5^]@s27-1NNobB\6K]X<R]GJ7ZcCGj*n^6iVk_&OEqV":r0.%,"\;f8+!k$%YT2'S3TUC__$KTJf'>"(iOQVk%Cf\jJunu;.fHd!j7be+VdC$UHs`##WV(*&^F4npoc"l1MHh_Or-"@-7^2UM:`H,%f(a)$M-L&)P"[iNMFQ.flF:u*,m)nk`$Dm`_R9]t2(rhM;MLHp)-g]67Z$U]5JhJn3U?imaZ0X5B[SKhBDfX"YQ?&5%h((Zc<HHJ%acn'M6[43>J1^OI5Zp)IXP'Rn"q10IAG]!igpR?UPVRF),VMS7@k4Ej(*pg!1n?Q>%^4/W4-l(g1mX%=;mOZ`S!`]J.Od_V\%l&5%B>Pe5TLqO(Nkg9tSIeh6aYE9^G"cIgY8#)fU`ED(pr?.,3jsa&H>matPSAi%l\-s\Y*,/##RM7!"J40(DmKMuBSIe$1bt65L4JK<%-EAE6:eGi.K!T^%AEG^3D3_MldY]Li4$5SQ&SBO4%h)3-O&CME+ia^UBa'G,4PNBCfL+6,?B&d"#6p*$+6PVW%Y<c88]cW:@EW8D%_?/FB)p:%,PeeDEQ0l49!B`icR<*LaQp1kdC$c0cX7/fu<?cY^gTu;Rc`ebSQW4(in6Q%kC4NDa@1rYL!ClR!k%qiZQJg!MKqIW$%>KD']2:;R1!9'pl]'hY649qtU)E\eLKf]VCQ<8(3CKS/*@?j88AFVDiWW;6;*"54LcED\)]<4.nAe7+gMG/E=X(35l%r&PPrZP2C%r:07/aJb7!eu3Y$L&i<+76I%FZM2pen171QY.E.b.#'1)nj7%1@$=Rob1&k:(J,V_k=+Ju-lDT[co',`oo#:7m4`F:9<K5qUL8Eh%Pp8[NiC!trnDFCX:]dq8UJqBUP!lkE5.GNOjsaq(C/#?HE];]abe)!AV=Gc*`Ogp,oAD.X`G/Jdj7PR]F>sth;\E!0+?SV7_4dV#%.c=qiE$6T`Bm)INOB]fZ!tNW=TT0d1E=t)i>"b`0\(<r3M)JHFO=:_cY$8ti9pbro.[W]#ab^lH@a0$_(VjR/qT9Zl/Ic=sat:5-%0>Y8JAZfP@#l+``7h_?eH'EaYgV4mCe$^^1#R[k7MB1cLJo:OYB2gfc;,$dV!KT=mX?[.rjXF3cf[A8m&)jT6;+WEpDER8>B/[f*%<7K&G3ZujKU^IfCE)QmbUE^(,41O9;ju6ALKG'%HUTJJ8K=>P8GkYkOAhM/[#bY'A9e$_20s:[3?Z<N0O4hiJU/>m>-J,-o!#NS*%[S?n<J7;!g$mN/S!Yh[,Q0/Z^q)^qJF5iP.h&Ut(Z("*h#t0",@0n9].C7L@#9.&HB%5k!>[3#71o.GnBH(eO*6]buAmcWETn![_%E2$b'!c(lN--$`(!Yg(&eCq@+]*%Ab#Jd+<^AC]]\*qTq^OQ"Kc0OP2s)e")%f4`Gf6@8ZgNRRC^AdZj=5X#Iq+iZ(Y?kV=ks,0l%q:Bij4#HcJ+)US\5Q15+)Z:cVIoo'fJsE>HB7tlt2<Bd^`4MuW*[`5]iB:^TCYVQ7n&S.dK7sO4Q<gPa,Q"\J=%uq>=VM$M$uo+c%_1n9>G6H(P8`%O%letNGa:"dG-L[;;'6#.BIt=sp>>^Oi&0MFR&o66^c46p[%`%"R<=V%8rF`8hrXuf"_*Yr!#`hFF"0D1bV`nlY%Q3N@K,$fK;H$"aaS/t^=/mq$<b51Mh*$4dt3D+U*TJ1SM'JCDB4XBE'[)l]55c0&C$ujX2dXbCn-7gPVTQ$6s[;AFK#1b@:R(Hd]%)V&e!+u[(Z'Xl!F_MN.LbZ%</0,+aU'ToQ@;sngmQSG6In?;sQ0PD_B,aDhY@!R07RJ$ahp,tpIEh]4t[d<A?]FBMA!;Z<)=oi7c%^:$964-Li=jnf30XCY:HgX.I&Fi+2kD0H,e.WtJc4^RI[``U21&lPD"#_V!m!;@W:qi`mB0fi<:DN_M(#$T,c,'pkF/!F/ZWIdhZ%RfNk;I@e?^/^A,'C^a>H,Q`^$+Xh76/<I_dYZKsB!<Ntt19n:Tka'&rjoFp0K/JVaZa1^&nIE#QZ.obhhj@FQ=l5T3TC;mcoF;(@%].q-X!utBj=FmO@iBf!PN.s[X8gr2s9ZLZI86pin&WqEW$SIq[/$&io'Zf2<37I\l-.YIS&XO1c:m`c_R^Stu#4%!KbhWQ@F6$_$%Q#=MgR4b6?&8Hl@b?Qli8aS!;+jkk&HH;+n=Fn"02Nc.)7R?/r_Z1*?E`E5jN9ph">IA<G^!C..5c-fCT#$iSO%ZRYK;9tg-t&]%%<i@lm8&#J`%1e9"h,9]`@I4/P/FJt#eA_)tOegL^pJLRg'OFTl7XO*]9:KKIZXC%,+[R8$qfdUli]5X2&t];X_HqE8D-P)?&RS&5%=s-]c#R$[dKC1H"d\JrPL&_DbGD0/JG'%LBh/In4$Yqq4mF&rq!sNaQo"pR#Som>MJ-"O"Uj(t*?:se"VFC:i\7j1#K2c!oC0t`-%J=ke6mP.PnO%^pYCg1lIkISMkJ4tNSNe/R\_dL`p`G>f&R.+-i*A),8($1/N^fs>&D/:9kpDG1^So4=C:g:dl=RI@OGA'iE7N%_k%i.ig"*`c)cVE>67HtNK(Tikom"7ZdukDh\6gQHJrYUBa<hCaj"W,,<JS3uecgBf4>'frIQNc$>hFl+9b:(B4):4CN/4XY6_ro8b_%o7\C'gapaZL`V#)]=B4YE![Q*LF!d(qn-p,FZ.A,p6tk>$8Mr"q/,j*:"uBk(^@#BK`XRp^mPfg(Kg2i0'rlS$3Wm*PZlPeFE_-K%nc2\?Qb//PN\D)WS;?sE!b][Ha3ot.4@e+sUjg9C<!/A6ECR][M]qV&;%<lHS"<Y7*5*h%C7E?h!B;mao()GTP_!CDD-QCi`Ob=4%X^"<=A!slG\/kCL!b[<n8Qj;uK@_h?C/'-J,r>]<f&iFVWpM?mj=Sp`A.""%!ZmWX#$*^!`llMt5_+MQWO6S5^C8[&%rUJY69\/m%pl+W))DIs,H/WXBh9<-AU5@s@(bALngZ<#&(:MCi>%&F:VEhXA?rO=/Z/U4@oLfMo.,8BKD;3GkK6>(aRsBoH;L#TI"@ZjF5VjE&%+lEVa(S?Am>YnFN_VGtqG."H9K*`=Z!"o>']KetUnpqM<24+8@!X'pqQ%53841]"-XuUGOD\9=nS/B+>POMuac5IYBK"p<2[DJ-M%b=,;1Uontk*T^==iJ_Gh/$&io'F8a`>d`4Y_:g`Va\]c<685>qD+D>LedW.-i%;h39B?a95r'Pk3)_^f!J;%.-EU1T3*n7'@B<sm%CYCh2?amm5J4tMJ<kr\K_CT8u"`)SW)FFN-Ks<tHBfl0&Y\n])1N*lT'rA'!C^Tb,+'.;n3@r[@(.@L5B.#uRDD)W_5[eSMo="%V%MVDMR+B+qbcX9:/Xtl;p'i&-22$FC&"@B5)48NNmDKp+VJ$B['#n5b/6#i$B%9Td]!+7A;I#Q?nSQ$"o3Z!F-O(g\a1C_n96je$`%'J*CR#&Dc;FG9i$$3HoEd<>0*?sW<\[Orf+'Qj,WE9@2<#&J%t3t4o7^W`e#ias!`<WL[O,&PN_^#,J&5^^7-5JV<:_B<,X!-pd2%<C(?/7,-Ej.Fnq1^8LmiIt`<QpGn8p`r&tea5h>L_toAq%,"rC<s/,!IX>mN6+PqillI$"*GWH3K!/lmol_+'<IkP8d=CheorV>)%c^CtE)AEI=&1FrpmHAGr'uX09?pjGlgr>#6%nWJu/1qH+0GNnf=XnI8!=3>=9+M6HD"u/,U28RN)uE:0$5<gQ_#S,iVAi("[T(W5%d"BpU'Xfd%[dE;G5e>piX^"@EXA6`u5\#BRn?;sQN;=*nNGJJR4n&J`ZROKnJCH@\L6f>aRjD_"+<<.b^C6*P8(R8s$B].">oEhO%:ftoZg:!bX#4%!G[rNI^juh2X`tO^(fbc--dYi3d-r@c2V'\UlXdi!nT^Z"Ml8*;97Np`m@NE6F&oe?0*+r0F-&k7<8q6mJJJ)bQ%Nc#`9CC].DCJ8'?9q]F)EeCn(DL/0."Zi5I;n=H"j`DUIKt242fX+@nT#G.Z5c-dX#WUSem#2Z'fmFEY:`r$^/lQQ?Nd_kI)]meW%EJ/ZJGiQM7:@H(-$oJA?oE3\X"S!<S`t%PP=9,==&U]>;C5_>"FbOr<R0&ZP=d[[,]M">ug9t/tONh[3+kF"@h&8gC*4URS#YKrr%Kblp&oWSBuH\2FXM@),Zl-"#n6hAS'Kro_:d'eZ!MS`E53e0nT+;eK<=?`t+<XWL*)%%3/HkgBj>MEH&]&CKMgd[YkA%ucE4^8)l%HG;#dRR*i;$JuWq2':>4(bl)G4+'bYD;3[5/F6B<"3;/^JcV1u97mu-:jlSG^d)>3:qLC&\uSpl4Lgg6L_l%qSe=VKf0]-UDNL)V%+>"j9_gL^K!2XUf1GBS]\^Jq>lN!eCGVc"52oEE;'fcsVmq8:U0=3@cNaC6V=AluKJ[5XCVC'T%<_L8\jm3EJJrV007m4iEMLp_F%TAue#?Q-Dl3e5CfX^J-Y[(ok6h[fcAH$mt">)l>qPUcs"ZhP\Fma'k2iUM;XLZ-2]E&@gVK3!;>=sGTY?"2%YOVo$seX*^ZM\h8K%'ikJj]Jp!7(=p9Yfc?;81FNeW+])ojgX0;ZFi/hbpYn6Z=sT+1eUnoD:ifW*K]Rf0IIsNJ3#5eP!=E%D+5<eI7":_6@3%TW5e&;j%/9eH1S7SKOO7s$DSl]*4gX3'QFPZt$\SuN<Kp0=[:eU+_"WhlH6;<Eg=GiqU&DkhHWrZ,EZ<gaOg(mte%+\n=9r(%/Ah7Or\8-X1%:O%StUd0II>Gfu[*W7`q2a"U8'*n8ad.)/#eS<63JO37I@,C_sjVWQD88#rR7_o(Y[o0lT["UP=ZL]D6#E2um\qHbGC]=g5O=\G[%+3+0].%FjPD;3GeK6?#MS%3KWRnAl!_ZI"P.r_7-*(4]NZ5Y1c1\SOk$'tZ,hE%Y\CtiP_D7d_IJ4tM:&9&MrYmd^:Y7E<$0Mo80%e=*h@?O#hN#Iea4T[HP*igu#Z]RXJe=!BRafqmj5[s6.j$3Na<96(Nn[*4t?@Sg7$g;*t#kKgQcOPn?+"d@PN]7LJa:#"&CK6?#K%)n9gbl=C+g.-/8Q4:[9ZTd!(BQ*fK+X)8F`!u.otBp<bp7VDNKecB:g"Mk)]4WjrEep?8/!X9!=Kj)sVG#tqdG]5J5%;(T`E@c'E%fY\&$eQrE2WE'Rp60#oA$sD96)k_/J'BN83P8^M,CKaiFWK$FFYatWL2,epp,m=]Vp+j%6[\LHlFi/j$\Sj_9eZ-H=Im9a\JEJ+X%7rb4kE-6d']Qsm@+Ab,NMJVfugB;_?Kb`/B:n?>E=:/7bYh!gkeY&T#Y1A2.drtB,?sW<\Aj.3!.r-n\WR`6+",peb)45PjD@Cr%%6aSDrP&;.Tg[`>49<85O'IX"dF7K&0dTZ5(r;`%Z#H=Ssp1[o>FoU@EK7bsa[792i4KQ>Xat%p8eH2_"i')*C)Gl$s3B,4d_@iDC%=g`,/R'gBD5jQ6(0UG=7?nHcLjFRF6&d"o\[N5<%=>rA;EXrXt_PrOt-rEX+(i[r@J(W-=,7Ucsr?5(oCGu%r&7K]ih%g@Hc>eP\%!1<m+(]eEGTn*opke\&\5_-^P-J#UGh&8gC*4V7I=2k_YV,MXM.r[;P0LO%M4%(O-!HhQ.C4O0)3Q,ji<]pXMO:GAMLBS-sN4Uk[%BusOcC_.^SASp2/*PF412]T>m$O92\EYB69.;&h:kiuQM2J1eCeI-D,SD/Q#A#6p<BF0B5r>Obtild%X!Z\)f5`*&(>d-WR/jNhq%'5H9^/fCakcJQioK-U#7+pSMC4flGYMOP6h>jnqV)\p.I9$S<IE0a-qfsY"NZ)t5?+B'Bg"KZ`1%FPZ5Xt'Pj.(g:(:#"'tJTSe\%><-V@YEe7<TgF(XJ9_71,i^K^>s5do)&W#SFq/(Z?Wn5Ub1^710V]lu\7cb(K/:t.PKVQ6;#/hN?aWTTd8$ra\pjhN%EeojRW"`e%nY'q<0C_nX/=[<BLtaIcFi?cO'XhU'IV7EP)(ue,=9jp:&B53a<%Bb,7u^P:5rM^a%(2t7mB0pSnDIp8>8\Ts65QUbXM>C7CI3c#%[TP9WR]CK3-EN2q/NHuM=4RW^OC'Wd%kuk+\jSU%F.2hZ:cKtC[C3I@<1KH'hooqi_53lkJ9mNFP=olBl;i.'O+oSS]caJ7>sHWs%Q#-"a[;De@bY,#Fi%2Ep$a>;>(Kb`nIR=,;Q+9MhBfl0f=>r@PRG.phFHD.M\@;@>!UEI(afGMTkf8-1!i9ri8G])uRp4QR*PerE%]E#jY]/<X>Q/hg[W7jP:[Mq@bpf>*.(pD3_q,/UkKNa>`nur*PXmu_:B&uiNX^lS0MLlu36QNY@8NX$+2)*EBXcl3cfG^SZ!!a!9%fCX@nIMp&eD+^(-.C:%IX$5D(E*Yu'29c/?Bms08Rq@QZV,RO0gk+2>*f8,8*]&n(KpRmS<Em0>G_pPCR0"6/!KXqlJJIj_NZh=D%5ijLnCYL1W3*EM(G]525XMRYn@1.CG`dm$&,JFfpdU@bBWebuG7s8&L-VES<Dd<sA=PGaE:s*5f5c-fV/)W1cZr3uM7P?>"@$pGL%Bf.J4V[U]W")d4l5oDYakN:lJ[=Q3>41!]j,&sZ'krDeY2B^soS7TH*>=*SJp_D'TXCa'qBNa+?1Q+&DpH%'\1J$2&22PC<N\23>%le^OC6*$*(/2enWe9KVrS(qYDjjJ(;cWMl]l=N[F5[c7qXB;p5\sOG<(-"p7(iZ0aHBq\).#^59@%_I?W&8E^^C8[&%rUL'_<!S$%-42QC+#[N'@;M@tV*crC6km]3X7aRb.9133=V/;L"hmQ%-*`4Va0TBW5s*rG5ij@lB\JK<(keAbhnV%#l?HX8f?@A[ZN]!_>^W)c%iN(#/>>BRU;,S$-kpDlfg(l:M8o(LDL_L+j"[)-/K6>rh@45NV0NP,0D+D>LedW.-k*]YSpE6H:<=OQ]Y2`\DW,pfTh*BCMYl&j,%"t8h4D5V6IRmJ^X!FuN?_#W5ZY8Ac83CLWVJ:Yl"]P2/nX&q;C\=%u(b"1O1Qu;Dt!nX]]6T.b<mKAXmXCa>?_O\EF[nYW,UrncR%/Hf0L*lJ-(hQoLO.%>3J!!@qe6EFm:HRhWG*4YB=]#??j1?QIYg>nFHX@K8K;QM"Aa9XC@;#''S/Xs2D.Z7cD^`!E,#8A]I/s.bs%H:/P\W!q75RZZ+I/]G<`_#)F*h6II4q]*H0s/T.2l$dSA:tI)\%!^8tl#)pUGE,9Gh5c(6-Q:q;Lqpi$]$%*))=QdTiZ3Vn!3NS@%_-0(B?lbM5$jF'hMkS_1*SiST2a"U0j-Zga]NFl*Q,S?SKF7@PEa"Z->(M.Ek.@V8!rY`?eZqa-BLOm'VC%3%O6S0OE)]spYI50K%%%4Q+p;Z+Io__2H,%,:p>[abU@_l50,rZ?9eT51K=':*geQE69BLN]p!ail_gLe!\dUF4^;j#%N[<@GD3i]7u$>`-H6`k2eqIQmK%G]4mg&Ona*4]WmE=Y*ZjVZ=D9"#7j+apRd#mp3=9=b%$sXBO=@,/lQmVB1X!CZQ8L3@_+t\(bXKL/QcLoZ?%Ho`%re,7r8i=KQ3d%E]]pt2[+_k/f>WD<cWgc7rgCNiN-QcR^Q?kX';Y-33'5cW7FZt84S@K6\);Y@YhF/8%/oX2$\$[0`p>i=0WqpKOho&2[)U&0+Jm8%<hO5+<RauX!B//NeM<O2H]$9Abd8.D"`)YQJQ&VMfXI>B/='2_G4`o7h":WiI7J\`/7-(l@^0=CR0(0uqiY2i"hH"Ze><idJAjH%%D7cB5;D_1S%\Tf>@_l5(`F;ghhbmiK!L?p<G4`sch=0?'^*>63_aTb]//G<u+Ab=t#TZuJ!MGr52O.AE>fs'X1:</XB<lZCV%/Ce%CW2Nh;_+p$\!niuQ;Z0i(sc3%DYei5^Cb2/1:CA?AI7LF.0*&XgO^paXNd&COj7N4<&\[+XkG[8#>hJ*/AYRE`F@B?.[C-7KuHs%%BKQ'%Yc`4i;pQ';Ue525Xhq@HF3,,hL$q&N;Hj;nb/r4g<+3WBq/s;HC=OFH5cql."EUu8JT<K9jP?[7M^<F):$T7E,Gu"?5=>[@%%%@qlLPMK]^nXq&Y#.iQCK6X)]a1F9^llMGS7>a2`G9VWOp]#dJ."ThJ@/F8_)eTr(^b'_(.53@RuA7dX;`4.ETSY,j9n20WPDuY%UK.^u3pq+JW[cAr_*G-<P48`7WMq=`dEiW3?EaoI0bmeA=GiplUnarI+i%,d0uVeSUUL?iL'+o*'e:Q%8n:4<YZS+D9*&cJSR<L=%<ANF8kI^gncQ(I-?FT<4NQWO`l%#0///G=p;@LuN<Q,MW/$Kk"D;3GgK6>(_><.QufrJ-J>d]9#XV;neqae0J$?]&qKJjQIJ.5c=%c*i<VnRP-[Yn#]j^ga!`k11Xq<E0G.[K;@1f!ZUT10E-J\='8IBdfE0V\N;b=DOaD\4SO=AH`k5>>'!C;CesO+1eio=)FM`&9"f`%TW,_9_-/A.?nGP^`DBB)"VsJ-D*.T*Y\n]).qc+sNdSTsWPDuZ=t9d?XaJ,eX/Z/=/oFsG"hH8!JnaQ/IVlj:3e4(/MZlbY'T5qk%W`T<r"Vsb4Bfim`OD[$s"*Y?A;UGi(;Luf=[8mW2>51uJXf;Ff=0!p\,&HXg\Q)kDZqE>3"mZ/W$7nh(f1N;M[Ao+\^f4^He=*hS%]8CaKK:BE00Xt<S<@b:UY[.eF^b1*THr[-TZWsUEWfc#T`U6H)-qYk4Ul'9p9a-h/\D'0p[[Cn-5-65@TWhLr?*kX.<NI,\grs=4%,%bsR<-U"%,qh;&q4QiRKsL,;`;u0o"XgqCUSSJFN<\JE-5Bbnoe))[$;RRM@,F^5H!KR?/OtR)b%9IKPlci]HG.]MX-I)/?Ima/%V_+2lGH_UOAHPno8Wpo(g6SO)FU-Iu>Y\u:F/bBM<iW.),XAB5/86+V8#Hd<'a+H[cL,7'"Vg&l`UMdiGgo=,E;sVc:P10tjPo+3%>mj&4j<j%,:"p)135ggjX96!%i!aj4<s.ceW+%0ZeQ30e[dE;H^q/XDQ[<[jEfI9@)qA"@<9p>&TsO+TE((N*<2,$*[e`TK?n][:%S@%[bP5@HK<Wa>l="I=Ks1gWEWgNP8l77TigNN4(+C4aA<pj1C>LJ-T9i?DYK!e?G/l7dQB%*'0gS&7?kY6(qI0I,7p9pf7QT&';%#$(g_eQ4;(l_GB!US<X>^fFeseCq@+?O#hN#Iea3i9j8lFX3dZMM4Zr'VLc`;b'7kkZJ4tl_E!3J.$0pRC9YoK'80C^ddu3$e79e%#%u>@.d$]K<*qAeg:!bT#4&l#2fmk;k#fSfd-<+sXE@Ekh@dfkjbbP72nAJ'<*oYiZlikRD>S]qE^i[+%\Tf8@_l4q`F@AT.[C-7%IDo*"g5^V"X;`59b'iTCV7t6R^9WE4W>$Hk[<WcM<M3tVMX)G9<ri*sZhJ')OX8V2kSN;En00Y[ef^T?Y,?l7eEVqr;b>eVG3rHN%7?WqC(pZ_2V)ht5I8)ol#`&p]63O]W9Lfs.h`gq+#II,4/QMHcl+654Pm?`M2,?j%BBUe3$m0d&en3XDD/8E_SM'pK6oRO,iWE;h%YOpbA-O",IUSnP[UC%!dPB9)Jq[-4:,79@_(90UNdYH7d"*W@!7PKVRp:]%9.fBdelmr$N]=.ZYCTf78n7874]UBu"Ji3GJ#VN/O%]T/;+TDaHEW&a*IC;.[^8@@)9CKoULXL2+mE3VU9o;Q,`CV*>OeLbqXLn,TmS*\M1/PA-1fmtLagu*jF@%Wm7V$BA]q^BNdb$9KU%e/AN,%.?6MXA,b\?nZ@SV"mZI?5p,l]eY0oWakBQ2Y,@0&4]VFZQ7c.j`\=4p>F%<31*n_n(sL[AH[(?'ECbB`7V#@WCb%g84dXC%X)2&RX01%YXLVD%0P*io4&,Clg\?qYAXmLNg"+Z!S1O^%jL8M>f!G+7]UXLfQBVs='h_"icDM;,lHF9+pIaqSZHfSSLFid?m'Qrh%nll@%=]2h;><\<i#(>p)DROuJ[]\3Il5k>er"_uNIGa-ml+o5M$Ht>Q<?91Pa&#guI-uQm/YK6TPI;OtG"Y.Wl*UV:\Q=*]Ue0f3%D>@/B$,eIj8iPG;D-L'.FEIh[8q[Ss2V@+tl+rN0"_J]W/J$"%!\<jpgC>W9la.A-QaRsPFMt9$ST_4ipIYt!=]2h+><\<i!e'L%%DR+]F[]7pEl4,qA!*=Ji=pjnZE81J0U(j+L)'!E]'j+SBP-20L(hF5fAoDJLU"$GO2PnS,=EC\<^rBKa/mCN)DY--e8iP/3D-Kp(%Fh7>q'A`dMiC_@PRX:k9f.8@)?15bl_td8>BruJbc+O25+@Y6n>7^.7.ZV2c^b5@R&!f%$IA\rp8j@kZpI[['Y&.BDm<!IUSk=)T%4f_W86#s/f?oFRBff!9l<pGf^!B")<#7s\#L6cfAf[7)"35?Gqm(bJO9&F:+VpZ+5j^.1ag9kcjl?Z`=rY*@j5WcMS7@/@t#M1LU%3)qOJTfJ_P/1[dN-WuRKD,J$q(@GD,e`sZr%bTlL)8VghV=1hS;s@rAj^.1agU6F8>C0Z/K-ul=6;ufb\Q;7>A=r#dZsH@\"U[i>%`FUb=":8F'"R)ReBkr>rP?rTD9u,205n=O'K2B677:bUoO?2p+Rr-ccXfLc1AIkA+H@n"s,$<D1/3OgW`XB'e<ZEri<p&.WnKC^e%-fmsBV(E87._Kc!%Fuh5)8TX7qYkQ<24gP69Rq]"\P6u*g:"uO?<;=.a^d>tKTfBd2$(l+jrde0l=MCg1N3@QF*:9nJm]r\GC<[A%Z<,Xn"4dT+,8gF;hR(lS<lWGphmSs(G&9ZRJ!8EtC]]nHN`9jg0>DX;8Y$JV4K]j<8oRqMTN`%pi.-gra]cjYYHFk4]+3E8D&p-`%;!GQmR9$o(]::G.,[3q!CQtX<eV-4bGb'Un[miIr,qhn%Xr12H[RFd?Ob%PTi5-mU^X(()Hbc?MI9TCt@E2\9@$d4V#M0A6?*>j3%8iMAd02"7YY&1YNf'DTB4I,9qFf/rVH!,H4c(K[[X^5Z\4:Q(I6*f@s]I^8tj\nBX>Gtqm1Qu-,@$d4V#M14N?*?-?8iM;R02"7U%f!8LZlZ.+MSk=+rHBK-,EWW@'<+*//e#M)%?ssLW+Ad5>7#;Y[D<#B>QQFd7Zh2V57A]I[k$.'td,em(-em?ubA+_nm(eekE#oS!%`1GT9/0gOgW8N&-dX="^\gA#2\QN;^;O"8[[;G2r''XN=f%_f>\7SV&H`d*EqAFCc=o-g[[b\MuYH*$><$Ii627Z\QRq2`S3AcB"%"BiR`Z<YBbOB')UB[sPQ+BOr?\m#VC'=@DiRSTdKZY!P.a7$=@oQ+kd]/@!&=4dHT10j'#GU[l<Za>\LNfG!L`[i^GXN3u^\h#E5%2K=nV"`GACS"\F7=L5C,i5X8h^"1CXr=$7g/cBKigMU<!f@<$/1)UQ='dZJ4R\chcf6f&-@4eXGiWeBBRn=QUR\^2096Hflg.Fg/%enYNWZF#Qu8Vb[c=u3AS1[)-OoWrCOLZM.3X*a>H1*!$bl6If]>'b/4VZK-.G4(fE"W!H*o46+oJo<M<;5p_#99N&KB/Gbs'5ILZ%".0_$oUXRW/,]U^/1pg2>MESoh!+)64Dh1UE6OKAAV>(f'qB?oE`(s6>[Q"]e1<1rW@IMn[4UbFR/:Ft<YO]tja8P+Vo,(nPT[Q$%+BgmPG>m8%Ut:kPfZG`s?237=T)(9jVh2KM,/W;E]UXL.Bb(PI_b5uPF+S0^lR_IS!e_eSVGKjdm+Bm88D.Fk?99:Ui91W$)s'?S%nHa$#?HO>tL/)Q!N*J>QQl#mE@bMM#;'mW,'dO>%?WH?u!JcN6mauNi1GC\NI,GOO;fL]lli`0O!=FAn%#bQK8V/])fG_mg>(DA*%TV*?6T[`kY6^g"$(\e/*`FZhqM,Ha_OIAB)U;]><<_$l_1aH]gSD"."@bM(mDmSRmUAD&3Wg6.p@C27:>JY[Y.,ojA\>1?Mi!2S8%Xs_^p^u21G?*&<*<N=_\purf=#?'dd8@.KM;,F]Z%PH7AKk4^SLa*Z"$3;!DGE\edR^BA*CFSP;8%WS=fmEdO""Pam/mE*>?oQ">%\I&"eD9Pg3LpUu;NbhmN_C<.TX(QlLQ_CM*&DmOhaF_p-;*bU@!A_u1rX<J@.J%'M1f$+abGHeUKRe];:"RVq@uJjuk^^j]jQ`8V%-Q-ZdAF=IJQ>PQI'+0eBr-gaW)\WLQPX2A*7;jBBA0KKNrQ@+oV"r@WGa$9m<WVe(B#PRkE(l,VN)Zk,*dil]'OPNL1)hTtAM\24%DM`i/!>c"kpF$jkC/bT6KhY8KQPsTW!!!o^#N3._]a>C/%406V&fe#<XCELX\K^*AIJp)9rU6rH*o;;@pqEEmgU!A"!."Wos-N&P%^D38g>L<BK5(O6jIQYC1s7#/(+5eeUd@\/O?[r!kq*jQ1c0sp^$^LPDGCMgUbOsUGpuankmejt(Hb]R+ji(6qdsd_9c1qmBDU1KJ%Td^]Bk%)p"o_nU)gRGN"pq,5Vh4LifgY^rhh(k,h[JElnaSH\P5.UGV:&]3(MlW%7C]MB44LT.i5B!.hcS$tnX_,fUVt7C,ml/Rb%Rr.=,hOgA=q#5I.,,F&$YN"k4IK/uZL\E1Rl]#[?J%KtHd,s$5E;d]S3BOo;]`*$G[`n..qQB#8QLYNJcp+_ZDa/,Ge'Rm)buhll%@(+fc2a;[>9_mr+`XSV[2XQ1iquZ3:\:U3VO.S%:]JO?sm&RY-rq?'`p@KtrelM>RS,MCFibZWr*#_'=R`rdj>^a3]lfmfY^ZV\p%Du9INoK`53X81`8j4PMlcMm:1nu-/^ek,Hn\DrUKl[,MC&_W`R@hU&"F1u;ETD:ad^&E+pHM5CKP7R-.:H&rbWu8k?C0QhPq:/b(%BpcV[Jbe36Z#03d+3nb!DQdt:0;5e$Z+"[oIJMjuj8&)4VskuZJBYsOZ%)Mmft4r$(4g03Qkk6e9*HZO#Y_Er@![$<;Y\Rr^KdC\%>XYGXAGRKcg5Iq587^GU1g20%k<"_n@To3!+u(Y^e&su"IC$O@e#^)uX463:J^cMh%D*`?*M36,m,Hdo-Z?2<H;\8%mYDZIT2Bpi%?0_@*`M^>0nIA,+S%8$L[r9#AqtKmmb[c`-dC4QZ;Z4Y":EMfmT3NDnI7W,6\8FKi[kfGVgQs$;1T!?gYePSmb!,,;D_3$AIeW9j%g$Lp=rH#3j$U*C^igP&SiEcLG!Noh.f,*$ts8AkiG=r6*B)VO7L?=Ga/^NEBZiBgZm.@KRm^bbI7%lQGLp5B)(FM.3f2j&4:Te:\%B(_&u0S7MTfC/b2iVMj++mWlM4Su]JqbDP:FS"q]o^(>]P?G)=BY@&Drk;HKo-&%Q['/#Mfl*k&^Md`/rkCA;rkDd$$i&KLq:4m&%/:mfD.,<+^AUJOBjF)eCP.C4'CC0dRPQY3k"Fi:Va=g\c^FbLm1J7]!?0l%0q9\:"D5<Z!I[:D8T=WcL%fB[W`mjC!:43?/r7=Ra%c<"JnSPP$MQ@rP6hu<$(r(d''LM5>^c2$c(bHoq@([@>WbB?C]I"9@\5$iK-U\jZ9c&ZMAG<<`tbXMlACA5Ku";ZKM8#r#+[Bg4;%3UR;[Wa=,"E@9EXGES`el\iZMZa9\cCiESUn9<(e?QX(o/A4&hHi@a!-:ka#=6+4t(cPsig\SE<:OVQj[^YE9-Sl1r4!h63q>06k%qs01++#al/mG[tM"[^pO1c-Eu?sD%*.gX$rd*S)OU&?!TPaiE8Z`VkmLN=]bR/>kaq5$"Lou%NiGlh4IHoLY7g\ZA2n=A=Z5.nl`%m`k0[3u#ZIq2R%(gs:0cGPP3[mpr:'Xn^0o[,OYk`V+U/r36"bCbMX>4SPtUFFW1aPrj;AEclMJna5#Kg$(%jH1d*Y\$g*2fKFI^%X'`LVQ2'M>j+iPVe$I6(X4ok2I+TT?EHtHng2&V"C<8g0aaa"bri([&DHnRgCBhBsmC!VID(fJUiI#8ok.WWDO<]Rgr:>=IIiC,m%SD1BX2h/0<\%O_MoA$gHX-sV,qLruJCs+>T2p^CCh>,%//FS[Y(H>-=(P2!j(c.=V:o!3_TjIY=o(1uYPdb[[E\m/];8Y!8@,5/8%?lH4UJn<_b!'`a-R2Ll3C:8gEmG6%[jbu-WXe't;2eONmD-Y$$gUH@TkPq+sI'f1mTUrldZ'*Sb:R@^A0n]49l.Wj:d)snlal`AK%e!#^=5@;b+s6a&SIgj_:ZJM.6N;FE]qo1uAS%fLrIr][\3Tj.c+YWa69c(40(,q$cR/6%W]0XZ.qp&jT(,q$c;c_1h!aGPLGM!@6%`n\%0NU[qC+D,/jg*&\:V#].KOc@UjhNg5i]QS%p]oEZ%47!5-A+!PslP<!H`=_)i&*?kQ6Km%e#VcQKD_5PU@7Q+kF5IimaDO%*%bdfl@Hh2I6&Rrc8\"9XHGt3[m[R0>@+30n,1`Hb6d&HDA!j=VU>g'iGrOtL-k(+Q*p+J@U(E.\q1T#U!VshC:/-aurV.OCb.*`6l%d^H&,GpS;eJ+:W;('JbEJdT7`"LWO*$\DOne:O?"&jcKqV>qA9C;E\!MP&2P(,"fb5u6goe&":#k\3=Y$[UMfo[K?j^4/`oo'Tnb%V<[pJ6KZ"DpksMCRod;9OC.Jbq:k^pc7]*>EUr_q3uj1O]N$VV402cUq99Cq1rmAWn^6ZkmLg_U3P2r<1[o`];H;ouM$B8N'hcE!%3EKojIq@-$p>u=T^%1'ab.l."IT?BO\,60;91"G]fCG(2+[1@*PRnecZP*Wg2Nc7^b6IL\$Tl+LHhQn*lL%9A4hCW3G&mK)*4"$N%h>7$bgVUG4MQ0rHbUO4:Xn'<0fl+R1p*.Use$GY?,.@/-5L_Nq]lCS\Y^9,ZpoT&*GM\Z,[IZLP3VDPN%6#?E^[>!bFdinYSmSMR%4S?;p-N2HM98KpDVgauM9L![3SPu/356&%`fQ55mfj##6-V2pW81sVkb/0Y>g\7%I[kmf;?QMqr*OYd^DWMLR2/<8O`UYH/Q91Uc%DR!:r(<a[+\QCD48JXre$Xg:tlDo1Y@^/fpk@.baQ1?f/X^A/oMj8=`F=:@n#[4<o0<b(PXH_K3XEWDkq=aaB]2(4<r,:tdT"BNT%J(:%;>^cNlo<,=7hp+og4ga'4P7?pObgd,]T7&FYT3Y],s0Qc7(["#s^Farm5D:q\Rhmr!^P.H]cg0fkW^u5Q1Z$I##E(Y-REot(%f!qZBSeCF=p#F<Mg!s/XcT1m&8<`4$?@VY:oBV=@gTPM?hL9TqF)lE$[:R`A/UF9_cSVe9#)f]6RhfSakAgT;ZgRkS^WnJsh;2/d%WkVT_nC]HofY!*JMt1ALU8)N#@Tne1cB0bD#!DBQ%MIY1O+,<_BSWb`DC\pTIQ0D@7.fVA3)\'N,:DfJ00QIenH/:1lui:+59C6-%ooO=(0=Gn,];/ga_T+G\A/="?U:XNL(H\S-?qggh/m+6e.Z?f?Z03g3D`*I@@aSI4\r-f6!O"k7EH.%q^B95`7J63tk3sr1JifoX%H&20'CK3'l,`qOrBp+dDr0Mog1EroeOSkH4qR2.>c^=R;L?-+4V"M'"2n,-4?(BgOmH"1?"o8_VYU(!5HYD)q?=lb^o@-^r<a%C#%K5N7YH^IpGoqZCq/+^>dg$T]1kMO?,V9H"I][5T?,,NMmmn_eHs0Pb@\8tB.Hnr<dApuaKc!*uR2eQo0!e[-61c?.FHb6gH+1?Ig%M_nr/GG2d#lMoPgQb9_Nkka,IO(Yq@d;R=ecGQUla%A#WN;ncNqdo9RO#Y0]`Ir0Q3IE8Ursg$b+pVtU*42pJY;T_()2.Z/kj#7[%cerGBJt::aD4^W#kATPYPB!ql?\=oSLA,>eI%+l_B4"*V">#sP(JV\'Eo=,g'+bpR^_Up`Bm2E81T%m"!k(LK>VlIc8/)k7^il6c%U'^Sr'3I'lT-4HqT$6`/=JVT1PChZIS=JH->l<^[I"lPlIC3cBV!hr&alu`MN]d'kG?DU6A+!PSJ6lN2H[C3gHC$t#QU@J"5L(qE%7+`$0T3hc2ffSrne)ar[li6^L`Un#>hpM4,F#o[1:-P9JiTBM,IQG)%SKXV#RdUm7ILWhdQII?fOuh]4F+4,ClPW+jH:uZ&]:8-0%)6X$E4o5;H<%.LDAP%UH7(U>TUiFM0ZEorq^50ei+.mG"piK@cbV#m>k/^ES.KdDJ>S"U1oE^BKE%RFMX'PBBRPFDNoc[5:^kZUK%)KrrPW0,NsmtrRN!Bo>76!qA[\!n52*RULs3YkHXqW5Ak-?ldtb75tAeM_)](Q%BBYC;V%(7Am!RC5f[=Ce9VT(sQd9bsu[1=Kii%@?Ht$9P/T6?:Tq'[&m6Tk,\PE,W0FFbT\l\fqVo-VF>0%KVmqF&c6lu`MQdZhc@S8^B25cc5LjlE;JJDf5H/O3LPF=(TD,hUo%4V%$%?3VlaC-Ff+E#;=e8_>m^MF;[Pm,oah@GC&binq8!f/8>D.O`>njH($>'52+"g;`s7On`JZ_5-S=\X;r86[NTK_634KB#P21,<^%`E?b;\+[MZS,U\qO[$YSg7]<<oCcuZ[<Q(cO0)F\IDhpt8%\_mT7m7t3n\/pa_hK`g249AG+#jWIF`HUYk;p[ZeNI>:H.`;:=$X;%4dj:`%BZ70_)q6VB!,`Zr9T@;l2@,k`s]'(]RM$pd]I6;ILFJX?e<]u'c+i]Timb3YY,=1D)X\r>q%A?_\m@/;Hs-YbQ2)5%[NF<%D%>l3'k?,p0k@id8]L$30Asi3HX4Ddc\LheZ\PW_IBi:+]>94R*6Uuo/.9A$0J*/B^1I5QK,i(PWYTM%j75h?<aQUA[4$E0rc-8_%#Cfg=DY'RHo*70iT))`9kC2]64/[O/ZB'J"FuuTc"+1%5-'7:?EIjWsjk*lp-M?):T8&olSDV&q4I_PkI\C=+O.$hfp(A@`[aMH!%;r:VZ2B.9d/K&o&=LjO!Kp97r.GGjpl;E=O43ldm@-AW`r@^*\*BO&KPG.&;e@FD&-=VadoP7./nsYFF/L`0Y$Pd$?PccpbJ8[:X%epE;SZgM08Z>l$%Y8IjAg2/X?hHFC[a7AK8HQ5k*0\d"FAc@)76e]PHs!h-;f+m8N,S&J(#I;+4;q]mK!W+sK3oCCFAtF8_IpGD1%\*#3dB0'AJIG//2!9fq]/cU&1)."+LXd=Os&%YVBqo\e9]RnShH:A@sKr&)=hud?-GONgprc!>X1+Iro3Qp0@+(h&'<\*U^hIb"j%0(XS;eBAA]?S;<&VlS:]mgrNE"ZPZgm]!nOHC+W@gneYs9D\=UV8JX?;*^6F!b;7MF)psDh2Gn.gN087`,]ZGj7H1:riO`lcsj^#%&%H9`IW='DoUu'Wio1b+;*=>V/Uht@jd5]f#(KIgO^EP8-`t,_rRKY+Gm$AR+Q*4\qW`!q$V["n:Z0-s+4%.e5J6g8#OV]oo^0tk%5?qR.q=W^ggE4c8o\TT(hp/G)op[mTn*BQ%ms]TSWVf9RrUinVe+i@oo&G4cJ,Go?qJ":CrH[l3rVtC(>A4'22u>=AFc^\$9.ouA%j7b/<Ae('S^&e=G&!ZVp5iKMh?l>>K"B[blb5/eMr7W/:N@iUFaMqX]Ih8+V!6b\qk_R#n&?JV0bc150hhQhp'"!Y`5hVs<D(JW&%nGsK>A"\Z%G<kF9*U*@51sH9F,u8"SO7Q.>Q1',JTF#11n9n3G[S6uU`JAA*fa5^Bnk(..Cl6E8_<>re?t7@.QGI/.3]PI$dWsZJ%B_d"!&A@)&)J,iL=*D[U;FA_6J`Uu1JBWQs8&_+t"/g/6BFe??Q<ORZiM^3GSJVnRA=g((e^Wj(")TRt+%q7EBr!M"D'B"/,$7$"%4qK,Sr`\UiX/KGe0cb3YD+]F9&Hq*A9%lTn"/'[<7a'u'[%q2,#<A6oD2jU\bt40LCFss<!pXg$%%gf+)s:X.'&;-F@l1/u4goJ<%en"#1BaZ^f^8s,Zej6*\bOU('Fg_n5RNgN=>!hI(8(ac)g?hPe+*`jMU4@:p1g&ET#@!bA:%ro5eZGkPI"$E0?b'B8*>dV*$[(c[%Nq`UVh]#T@05t#R^-InIdIAiSG86jpHc(<pDDe`o*ab"6gj2`Wd[(?,nm6g?*aXb]FuXo2DkOJ%]r-5:nI=jXpW:klE;e&Qn,O/P%>d(*((U2NKAWIA;V;^9Xr)_2:h38[73.0i^j=Ngu*dY:m?Cer5i\Xng[5hsb<Mmu9))6uGV5</(HeO3Vd0?9M!'BKM7IXO_R.GiN%"@f!kId1,E+p42b4#%j@S<H[5O_1b5bsC$<[+A_a=;0Pu*pH]JI4kkPBIg#$JO/H"m<cL%[0*q33Y9r^6kfj.ZB;7]Ti.HP4phj-%65$@10>ue]i70e21%:D-'^._\ElSah'&R6b>N*cuHL)#H\XO(%#[s5H@Ld/,Q@`3cR-Cma=GQ7_/LkE`H_\X+/APpuS8N_jF6/\^%8R"QlUd%PkPM/\@^>RL#]d.0]$4n:X]hK(mEhOrB]`VrpBr,BdCKdkr9aU@&dZ\GgJKbfh1d$mkZpP@b.3b1BBBT*WO;t5B0=80p%_'XHMa8c4"dofIQI7/,>.u*Qc4V1@nW=Vu.!g3.#dYUMRP7dFT6Qt.6N3hFZ!/;1O$-)#E(T:1`#]_1kV#[9ccN0$F/:@^b4FFo&%FT<DpFb62Jnk*Ik-6Nb8Lccl>7HC:4qUe*m0a7\FP=67iOckM_Sdn)1j8b8^,cX^5<(+/lpS=kmC&Up/PpAh-/UPo;j-iSPSZc7Q%b[jS5Bf4TQ`1'dKdY,ur/eS&c9EFN.Ed>_i\@2.QX5FYSLPP%\?slWdhWmt%(`43H_]P8:G#'Sl7/&.aJUO8^k=.qAh9j6)d:Ee4%l\62tL)el/H6^`/*$IHlC0Fb1H$0:RfcFhINjbk@0s:08O\>)0>XT01Kn1C:>XDAkS24UpNu,1`YmEYj0XLsNk4Qg('@LrJ_Vueh%oQlT'#a#b[gZ/Q,\o^ETLd;;m,%D06(NG*3Q\tK,+fCKZ?6BkaioC,`<6*,XUX+WZOZ;K;!DLNpWGN@;Nn+J`a);H;GU's#L[U.?%r9Ji=JKXi5n&Lo]\*%Bm;V!K#AkrHY.qH9iDg'jgd_&hJBZi$l/i;MUa#D;]Q6cC=00eZN$D6bN-73((5J2C8Xpfc(=QJ&j(=De?%V=Nt_)'eIKb3`9lcG^uPQ@Gk(J$t;5^.a&j94ut6"DrZF/(=:]UgG3?F-1+Yf.dJ\d8jt"&eT@m^qA3poM$%6>T,sK<_gU@?`$2"%!m_QRGp`?@:fnpEji0aBli[ri@:gs'Q\;q?a4)]:2:NXt7nha^Mk7@7je(&24A*T!f>(Ei!d[+;7nhc,@Eo.K,!W)Jl^?k>n7F1r%%it"-aEt."g<q\X<d#b;jXWTK0+reh&!HBk\Kf>a+a_7S_HYk2UBo*H7ObV`ds#(opCX1"A8kNu2--GfIn'F3d!*=Sj\?QAdLh$h%E)hpc^b[JGZs;"R.d5+^jFI\87m[r@i"@XWBK:$@7nb9;)sW*FH_D*A<+;LZatoJ>O&coO#P<&TA:f%L`=+6*bfJZAM%<)P/G(h3%M+?naj"#h:1Da4egd$F96c;+<>6+lO+AOO'^:Xm25sRM,AYS\<TE0YOLaid`&'>92Nuk.i6HQ!$4FTRM_'MUi*7,6qF&.uL4K$SP%!okpa!8\fk6gBXW@I:2!,A3nNp]P0kOsS83:JaT05sLc.][-pd3>;2Y$:EXZJn$PLGYL.9G8"]!.EKrGNCRH0Dof?Fb97%dml&84%iFsK]B7?nQ]>I,MFPV2Q,E<gr&GRHKA>/h%ZBg?G8L2/moVUJC-N(t>B9)_SeLnR0Yhje+Yi%%Qp$n7^RV7*1%e2t6,4[o#2nV="%o7al\YErRq_g)o^-;W@;!p0)F-='d+`s6N@#YA&T$C),'N..&7f;F77.\!+Xi3RHJBm<?EL+)5>5aUSZ`08V-AXY)XeB"_LeT@i'%qiX!4d9SaF1*9fc^k1#eX!17^/dlTh@QjglgsMT`-lcMr\(=Ij8%3i<4-#mThnMdYS34WZPQCSdU%(J/q,)<pi9<]UI:^HN1c)B.%!-qg;#si/o@Q7hWa\!,fM"\5.\U_l;`Gp5i4(.+na[Qd*gU??8OtkOt8_\:;FND?s-GksdEpTImBPmR&J:>EdQ28*Ll>L22]SNK:%qJ"-i-&rd%+dP')Ep468">d\$;?R<@bRY"[7_o@K/WVM-8P3T>TW!]FLrJ+I:.XT-Silm<7*uGl+pn)3O\$0`4!L7AA@Y3.8I0R%%c4\QO`3FsrUk:FBSHg^&9i4,BkgW8'Su.B@fVU]\S4VUQ8/">*Z6O\2kD?^N$0k"iVoL`&M*s\u/QQWG7>GZKMF)ToN/pZ+(+SE:%Bc3"[1-*O(KZV@UTY*SAU"8)i)>Z=Qgf)sFQM:lZBQ8;XQ%ZW#pVaf#UW+-m]@g;B[e%FSKJl#0d?$/(Z?:D^`59#HS3/Mf2V4L4%/KR(X/P99Z:E9hnmbY`s[<pW4B'i&$';sW)qZhid?A^$0!5INk#(7Y9MuBu&'uj7!_K+(/(&"0N;gQpq)r$ta_!s<^6/42!RKTNF%2L<m5$H(]h<8S<">'.X!P6%I'^QIEWLpE?V.SB*)Ld@0X,`[b^LUMfaHT;:K??B,6#OeUiG?I&&b<3jBE:%MN;e_/]L`%KpH;(IT%i'o0akfk3,i;1\Hr^@V%/BEpE+>f@^Xm!NR4r(('7n">#mrP=:.:uH<W[OYo>.tAjFY=U\UeLF%[4RuI(P+?E\I6fmX+ZgfdZQR)%J;(pCd8f!]51N+oP*)`T^uc.<*/(2eTIejlatA"Q9_be&l=3fE)1$MN_C+[XKh(LeR>N1$^O&o^&iqGe`hVT(p'F_R(K$M-)RRG2%,+TnE,\W#;S!7]$#TN?B!u+B:&"Y?"f*6#8QiI;n-b;`PDhS6HB@;bJRMo![$R4\(-Eq6Q]m_[Ge5'3XlNXAF17_+/p'@V!N]uk'%]*U`gRbH$h%<i!KeY>JMK1nOJ8!dU9aBEgK3]VPBZAJ/FmP%.8^kb/M$O&f%L']Uu&*<E0ZJB-R_,cp_!EL`aD4ItukCcI2Ckn@4%0Yk<;KLY?sUGmdDi5"US.I5/.1E8=CY+D%u6RUa`K'+\&#AllUhOu*fRiLqt7cXnZ78jL&.jftT'/7TE79X]J9UdoFNq#hC6<7sO%P-)3<L.Oe@6I#2a]Hc8hR4@*RM"aU)i>+kpB?j7i>f7CuAZJK8IE@c9Hd"7LS(r:Nigh=.?(M9njs\$q=+i&H[a94/%[H"/QFk0D%)?eK:Zrc$jSXP*1'd%P228hd*=1bpaR5W*CNnRA:D8fr6K],Uq[]^O2O^["e%W0Y&)`L'fm>)#g><+W'bRSXA_0\=2noRHN*XDi'%V@\*s1"u)*Y91,kCl)6H\<4^P$HesYd1`dK[do_F\lkZ]87LlumE'?ra$R*oU-:!1!H@u!h4*=$o?BKsMuDJd2du1,^Y/MPJ$/pp%46ddWOCEEfN/4Ykq6!9Ha=e[BD%g8;V\PnS"hkRbD6cH3#$N5m,Y9BR"98H;YuKBqA@nclI;Z&U=%J8S"s7CuQ+_FHBXX*KQu((S%[$aonMW[rH5-k,9qcjF4$*U=S49.lPKE=Z<M_Xle/PS%=7\j!8/*5b9H9#;3'9XT6"KWL=[.SuG$j4*A?,j`:C;_^cM2=)$J=_K+%,W%3:n5X)E6GioSM?pObORfa\[rh`5ahljpCIR'IZ=S/m<mEU]/>s:\JFSB`3843AZQU&D.cdcFQGM3r<57&OY@<`_[77(I?c>M"%Zb/tnq%8APYS`UYAHE(F)P87`bh:&N:ZN`#Z3ek`Z&></77'_kPn&HY8>N4u4H\V@V&'ZS>4(hamGo2802Xc$.^C.N/&JLJK91eb%(Th=1ItuM[TpC*Ci20![M-0`YV46'.o"4c,8iMsTG-@q".Y2M'A0@m5"J_(#J:Z5qJfQGS[KV"IBksd_@+$;e^]]XA1r'b^%$&nq%*R/<CXE_:CUeHGs0?ssm%2<ao#9@nD+H-u6qaV'jb06;F&&='U/R3eaSMGJrFA33j,&j0UJ1Hs@C<"?>-)/%B0:k.>4U:f)P-EQ(%":kaf`oHVU/2PS2>6V)Ec`(b2nnu`I%j6KPKo2)&Co4"<p!oCb:n:*eB#Oq9FZJNsOb,Ph3mY%/XCbS[<\>?T,)(4e%kIG1)A/X;%XN=ZYKaJ&?I0%Fb>3k7W"ED$4Ol0LWmu@oSMlOTRR6<[F<1b\?5d2c2jB4S76_f9cR/eU(#b:\s`"aFsh3CVAe1$;Z,^L\](#tbn%8&458AFa8`SKNdqB[&Q"UkjU6$8f1d!,5.pQ5r[dZq:h$NIKh\d\2-8Zjq"[ML,G*`7p^/hEXBs-9H4@[#E]Y?@#JU`IR5DHlYt4%kT\E2D693=_c5505"n$J/]@N#%,'sJfC:eHqrJk$/i-mt0$Kje"\guiSI>Fc=Kfm^$EbtYAjOgJ.,hlJjVEH+K?iBa,hU_qHT(Bo%r%u."I%qpbDT^4C)L*16rl[V\fhW2>8jKe>ViMkjE:0Bm*1HKc>RCh*1+$5^s7teYhuE-1S(f(ti`G"fG*3+!o=\'.4o'3mG44Jg%P7M;QQg">Hhb'rQb(&<9dG'&cKRIb,GP$E8b</DgZR6:Z4+687Y3c,[k2bgJZd894075o$gJOSMpk_Y`HeKjUZ4n_n]IOij'qU)S%Y[dp+iMmjFrYo'0i+#fuBQE'?al8[&db^'7[%L[nDESb(4h8D),"@52i)i/Pr2q@UA`g+!iZWR3_]6<u29%UaO8lM*Z9$=(*=lB5%Aa7=R^7fEZ/0Y3d)@Eg2%$C3V)Tq?U>K,FH?:C97jjprH5##W/q%Uj176.Yn0@4*"*b##mQ&R2aP2i+)2XJbaFZZ*5c%0\<h)Vq^%e"nJKNU,nK:tlDiDUD7gNp^MQQ$&-.:>=jO@E9adjU5T3p]@F"Q>-'>r>R_"[:b$T'c(A4:+^_?.JgS.5DXO,r$]Fu3`dG@($HtO%/INK84E16r7B1In"&u.&crp1>!cK3O:]bWhI=V)VTq_6YGX?!WJYu=bT-EfWaB'L:,[2+miRUQ&$!c+G9tmW=lZ,/36Bqt*p6OHG%A%Rpm7Y)"?Kcd=&6``,K'OY13K4h69b%*:m(2:Wf<^`0Fj!n0+]c6VXTlslQmr)=P!J4CV?ri,47rt\kVQ<lMOm9_hm[-GQ_Yg\(%"RRG^3fnD%E!>0J,juipFKXue!B66+T6)T15+.)jq)Dq5HeoP%(d$`K\*ZFP=>mj0SnEaVfp@/g*Bc-e>Ea,JZKL6s3na,pa;n$t%:@<nTq$0!l9hnaDmN/?f@;h=0@(N=4G&hiA\D,'*+selrC=o1ie=p8t6bIZ^1^EMK-T''aJnJ<p!+2@,GtIGX\/,HiVTG$m96-)=%T.ATQ,Un_.P44J+kn,7i:shuI4Q5n<G&fa/4P'$X-%+E[-L\-E&k"E[e0J^;+J.Am^\V6FrBofrd6FZW(h7rHD1TTgD;-d-n@!TE%3bV_\+HL\"?G7A>dE<ruR1g?oP7']*:JaZs:*YA/NR2R#:?tUpOmdgsO#n!r_@rF-4BXE/>L\`BIt9cd33QR(lFI7%PU+\Hb";-[%bJ.TVYmp,5OR7Vu*6E+]L)_`0k@I*c:?+e%2CX`O9't#A<n*g;I2j<r[["2#F+s?M]Z<@A`f^C=g]_r:W[t`Q%db-[d)\<PKiFk$%1W22MdLi&PB1P1seF9"TQ`"`r-o9qp$GOD9KM("9U<IT3Kd`^WHPXMP[Gj+ChR=P]PDV-7iE4i>LHA<K7MeNRUUgh>DSrts_d0A<%Fn0%N<k?mS]*!\q^N=P=f)`Q5:`J4HkV6WAAT;`Z<>O(kR&eC)Tr/,mV,W-C'Q`Y/CVc^CHkI-Gd?FoS*,*V&A?u?`F2\X\JXhbA%/VT]E@%YjAL$"UP:']-6A8ohN'sQotO.$F('1D@D6WgZ-J:AB_W<,P%bK<7$1ik&TS05&6!#<-`.TD/C;c!S\><lUGC]`mY&KeU,%\:]*,;*5ur&EQlp7^f+7$5ALEUn?I$A7#XZ`(L;1+UW_`Ol&WUh,l3j9,;"+GR4`?Y*_Ys]?o@i\1UN9"FK&p_q2:HX!8*ukVWU.%W[:Z+h&Y[JA9Z)E-/%*o09Y\i\8t5bGMM@,D>7(H"(RDP):GY[Aocne*QJnJl%?e5VWm,l]b,)9*ZFIA:las,*oF//1<BSj":?JP%HBta2O&u1M843Yg#UkCb1mB`;_`=rOP^aMT4!upGDfE0Z-E"-;0&Mo.408R5&Q&eFk#:=R/;blq[<!M?LSp1Sol0&l0sG.!C$>s/%*ct):ck/E9_c(0VpW&c0Z`BusMkI\p#Y\;;9!:u9cAPN'V77AIUIU-9Ma-=$a<VRRQ81lLJ8J&>gHa,s3^j1.>!a!!2#E+ll2aUo%dGZSt33tqpC=Oa8JYLfK_+`UXB*;#GgE=dQVE.j=c+'oNi=/Y'5Hp?;h%=H;ca`+8!\i$FA,O<A,tIKV16gdc:fm,(9;RI=U=V'Q%(EE<X:fJgBn<M'e?3uShGJTYK_lGrY60=i1WsKJ2eW)q73f%-O3B-Ymn=UmaAb;h@R62*;+]RI7AtKAGaM/%'m?*%j5V*SL0#tST%i@d^kl]cY-d^f%6m/X96kWFe&F.uVe&s#F%:n05Zd3g<0&Q2WZ-SKXSeFfFhMF;4_Kf3+Gfn,;P5\fb6Vd,4DnE?Ph7NM7f-'#)q%$Qi/FTkFh=CT?[rb:6Z!6=]R8ZbaK,AAMQ?jr2=hL,^Dj2o*#C#Rk,$nB`%:5Wb!a&(!.S"O@Z%@,6-8%6d$==ZAT1?]U6A#^gC+%-+<5RAi"2:o,+82[U5F&SJ(eKC+TVu3_q#J2X02edI[QhODI)9'2NO3N_V,l^2CX>4cbZ>[*/e^ZTF&R=U\JUSNT,fiT>L`=/o&O%!\6!q>.b]GX!iPNhSf9_1^g%W5($np-(<RiQc0XI]7WY7'm]Qk2m.9rW'X#V*FIGDU1+dXHSOO:f"<D`Cd0)A8P?m1B_\u9_?m$3%kucPp+F@akMFu"626V=W,*4hs'Krf<>`QTF7TpBc$n5:Rh[#&m'$X4US;7K,gGrgk>CpP?nL;QSn3U4l0>Xe&R%6$g7&JMi#cUIW%:u4ke)WLW'@u#nXXcp!r/a.2GLd8nL=r)e$`_G%pc2d4E>IOoDNguW'm-!;ueFl(_Y.nl^N^h8Fek-3F$pdZ"++fB6,XUFIJkEj%%Z&ZXk"B=uqP.Sb`=D$:8.W:(-N.)l0.,/,-89D]AY9X_]Ok6BS,*HE84C\Bf)IB\]:n>+)iVS8?ALl_LhNIBV]mC/8f+KBdFHT$E%Z"-pHJmLOY:[ej/JmFZj96N`og2/>mirHk_2J'aP^q4%\!Fh[R(s$QUBY0q.Udrd(r;D^O@EbcVHA!KkB>N"f`(j$=O+tt*nl[l1%W#rcU3=f'j-];Wkd?BBFT#hZ"'87n%aAbRa0b!-EK=1%O"@t+b%6O0Y-_O<R9W#3@eX\3!VA\T<'F(nAi3[Iq5OO=jm1I`gf4#iF%pJsk+"A>gGm_#aY7X&r?HV'6ZZK+;J+\6c(c?3%2Ic,G(4m@29^/5LTa]hQ-DreC]2=3@Z]$Ou0',HVr^59_oah_Bf0aBCF8FK-\%JVS&;Y@ff[,OH>sp6Zd$9CH3BIOhTp3'uUR-,(I`M<"oG;&h`g1U41<KV7n_&.t=@9OQ_JOIcTt$(F`cd>("3+@I[c$Uf.T>bRXW%5mTMIg*.j[TG@bb;C`5d:*gFa85om%#u<i"-4nQJ6-IFG9V4j&j6S]ka*QEU,3039V#m/s'[;J6!7&Al/+<lI-OU*DaooaHc&c<U%"Uc8<ji9R*%`)HE#.ut=AR$sJL1nBe'>0u;&\Z:;RLJtB5o,U`QW=,SQI/N4V?*Z(<`:52Q>%G1r(*?%+.N2,qV4:nq2mYm5;r>"%GX&O,oecCTe)rphOX*EsR(-He,kk0l..MS4I-r5!*IhnnUEcK$O3;rN4_5_%qrihb`1qAqM,*in\W:J1lZ4-s-KKC65!!0<rnuR%%'!h#JgdeYmO3W/Q6QR;<qab>gkhJZcguC-"O!I]dZ+5qViB/aeOhBBQjZ][NI;6R>UN7N6L\=)U+#+eVgdak$hRW$EacF$7#Xe/-%$2J8V&eKFA<8Up9JLcK4QkS`J9i!bjS.k-XW;^:J,!@jCm?-UT+.;Wl8CY539mD"1HJM(<]KHn@mc+r:MS&RL'&McmHh`PQ[hA6%%fS$_(U=aln_HZQ]IUp=M,M!;f3oTH<lNZfMGj>S3^*_fUm3"SJiU%6CFW[.Cp?9a$G\Fruft'[$]WI4fm-+H,KXW^h7jks7]mj"u%gS6_+'n(>D>Br/g9R&(kp<a1b"`6@WiU)c+FW[%@p?553+<R3Ep?553THB<cp?7KtLrUgS4VG0jK+m)oR1bfZ#tq.K,u_[D.:K_*%9;[@g;o4\HiQb+'JS[joQ"^VY_nN)Z$lkq(]OohYeph]30h-+CbDJ&_28u\kOB:E,=`Di[&='bO(lOekaZk;:L/Xs37%]$[=!:.9%"nC&:PS&pFdc@5.@EcHNqV[HQE%uH#fQYJ>%2ZTsW<l-?I5Q\r8dF?DBuMS<_ZH(LpR6LAJlF1QRKFe+3$fm1ef_S,?k,;LacV-/%=cn&p$7l1!Oj9O8#\*.GY4,R.GLl'.jOhuuG^'\GoI9D$eccQKp*iU;67l7W_`=)9Y=a68h)o8sWPu+CSQ(G!cP2>2%1-5A`0g'!%4D!67<A]oJji/3GYC@gL<l@Odc3&9\CrE`4'/(Q^Yn"A#L1DS`5tI!.`X[17>Uu4H`g4-"";ELP5Vn:/!)*ZCat,YdX2*[?0;^h0%YMXt^3mlu>ql4:d"Ss(BV*j%EAK?u;iVV`d'@V$AMVnh(A`F6ZZ(Z#dXHd>rBY>_up!D5P_,a35k-PP6Y">4-^Sp4I^E#3T3D+ZS%CfURoa)]p8<(%up4b7-8I6=qq*'rI&.X7^M5(IMQ</2,!<UQ&H5Guk\>GVJ#P@gKi`R&?dp+'tphfUS/WU-8#@IaBu*/!3VSJLK(%Or(s_f::H'HRE7*;Uic9OG5,Y(a*25nlYZ$GbTk,1jPV6oJuJT9Z9^l0UP.&^<W8!K4&.8B".3Z'(bG3p#TG2Ykc,WP+%Z'EM@&P%,!+!d7/dY^?@qgrotY;gVI6:8XXENm;5-AI3N:,C.FFg^p%FPq$2XA"72p8o9"o>fet,9(6V042I6<rR^%@]s3E:45,L[dK>:l@9%D$3uL.6h:nf9kMn>RN5%@SICO,Un8E%oLn5afd,9`a"JZN*Cs<)oW@<Ru%c5Fjl>*Clfu>gVT_J$a(ah/=Mh!fYL-dYVp)4i@A@T%_-:Ki:J+SH(dK>hTbuA78Mdf#it[U6!mEYY]%`f%f/gS\VaR7,?Brr]qPl^H;L?t=9qGI.$MT\<(g_:hIDSfU.@P!ld8SU2@uE/h%,-?p1:Ka+i1J4*CiE:,[C`fe)Ugu"nP,;]?<T5SaR-4+dW'0>YUhc1&E`UOT$!qCq1X2o^.2cq57>'Vg*)UTAP"S:oAttOU,+R2I%PL2uH&03`C<6a.5Dlk=q4_8Ib)o)5[\:)q5Sb!+c(bg(.Ac`AjMFN6S73K2W4Xc9"UYO#MpgI'!FstXgJ^NO6H=LmT#-RO0pE^YR%m,'N,IV3^/"i#]]L*"oHNj@T(mk3K30adO59H/Rd/lCIIBR+h`Zcg6J]BgsYG?KPTejQD6PsmW'i'g.b=liK%'GcXl5X8$j*d[MI%j-46[pC@IH%Q)@`=C)%AqF-kR9;nM]cC?p"opd5Mk,A'%0jt;2=_']-T)qQ$*n00oU6J:4ateD+(MHOsBCYAIio)euroi;W_-uU1%3f?>\-&5XTFi:F3`lC+gCGKUn]4U0Ok4X%EGE:S"eo!G'L$2)3h*_jf$lE\(;@e[;+Pgg*\m4>99Vob^Pr_JBNW7_<,t)ql0q(0d%]5N;e!BDDUG/=oR"B6infQ5bT!)b-t0K''VAf&C4R>=OZ2s^ltkhM%QpcK[7.b<Op"L1n1"ud0GC%2d8PJQ@Li_;rOJ<LYc18hWK%+9skAZ%Ura0YEN'hhBpdU\(%ob=>!4\S]\ZZn@6,NE=Ep&\*h61@\7rK<3O4C5JelH'-bHF)7:Nf;dW=RJe/_eR*MR>,RjmF/Knk%9EID^C844<Rhcf=oaT#DPB9f!,hFah85L`i:Upqq[Xb@ePh#iuCD7#QRP9M-'&+H53K^X-9"$I)OeZ^O;]CP",f"?Y,=0@Tq).+V%PCC`UY=5KfC]\2+=,kO.PHDU!n2oAQo-q*B8c;s#DQ8\0;)kjE$$+&4(?O4sSkX*'D-!<r[Sb00SAP\S6,Z_iG/j-#`)YArU+VrI%?7=GPfc)GA9gF)\_ZBZT6-uqgNLf&7I;'(']k2J9G^%3D18^kfSi9tl7(MAoXf4S$V>+3s3^P%o3f3kX-2-9O$KbdXl,jrE?jRTa%Mo"$PBPMW%CC@$k"cP+lO4>guW'!14haUV4Lm-)"g'F[HJoat/P0i3*")Ub1@KuA@J/07SJKo(FAr0Qti)+\CJ7/Hh"oO[O))iqk%joCjn5gNK")W&3Z(,*\/?4ZMk[;A[jlWohY_JdsjqXOZs+9-J,42ftSp(LW!1&)NSI)+n_lB)7[kMUC^L,[1ZW#;3XE)iJOVjfC=%*V,N4;VKJj#4"g"V5irdOU4^s=6DA.Yqr+@+hIf0SKPdJ_3/hjE_CR]5Ro'(0`&Tc(obrJ9T8g"num'"KS,!a:*WXp_l"7=b3G#W%OM>4N#c=03.f^d0jTM#C^VXf?U-"`X(_N]RP&IR'k2WZqf?hsKldANt(Xj3g!uQ;mbL7SAcinFE7NJK[%bhK"&n#:2BE<P9YccS3%S\`_-c%:p#I1\:5r?c^7[UN&l,tTI1/s[%KQd'%SJJGD<D!9ICkU(q?SVWuW*d6JMg,`-@/T"8#(:NK%D<&3&j)b>mCU]21&Cg)B%V9'Krd'hk+Be0(?!HgK5lZNi'AGSkj\#r4[)-h";$lud\"1QghTt5YdZPrPAcG+99f6&"0'0'1-<O@JDb%2odYQNJ<@U:H!9tr?[%P;8=P#l6'B6Q-p?2')O5A0LMK_5c8'%U.K;%F]Kr9rQs]DX)Z![&2/+)?"7)(9oHT%PS#9$/9mTHiZ%dDaF=gbnL4n6Wh4onc7mB%o;aPXSoohukZ\gX*XpT,3#]@#$D,(+<2u>gcb\XG]_?L,BFN8'Kpl`!X?nU)YQk8lqr?2]r&`?aEMk4$02mU^is&)LX_[m$-d?ob%P3IJ>,9fKW"kQ74AIT"aoDd/TYkLHs[E\!A*"fmjrJE5\MEuO#L\7DpSja=DeHjf*c@@/`Q!(A?PibAGTWBSEA?r;0V^q<i@=R)D%nrg/&`]nOr%quVc2d`24UZqVlk;TObG(a!D\epHP]!B?pFEEk^i>d^\WluTB8`BMTqK;ihb/fMZ9#sN$#AS7?Q4AqBQVhQ2o9?B8%R.Y4$D.)-q>"QD'!CdDi)`pTTU8N9nTHJ.)-m/i+'I>mt+>IV.VHAUsfcFfUp9f@!1teEDo@kOIN&%=)a!B5eHK]n;7)0E+/),F#%Qmntb?leRXWf$tj;c;IX!RlKq19s^ab#V?$KMlPs+p&Nd4[u[i8UmVW/9PGY;!^Ri&_+;_S?[P,[/l'Q)n;AOla9sEb3DdA<Fi4B%?s<D=qmVdDgU!BMhuDlWp!)kgIf@-nS(6Ba%^3&h`\pmG5?s`Wn^I<gZ]EU.YBKR4,#Wg$]fCZ6>'E$o\[:P8Z<ufCAnA<EdJVhX%cV?+lHuaRTrh%VVkUM(/EIN6-mHMa3q:1OU]K(K=s.'&CAX7e$B_1KJip:i,J+)mfoNshRgq91g(OBbD+jRV9\O&19N45`E7i7Xi%OFr2l>oe9JW(?EUQc*#(;`a4@o_:?dP^]k,=anKq`M%$n$n`Xu'SnkoqWS+`b0N-3eu,SW#GiM4j$([_5$S4[=0Ak2M,@d&>I0K&%$[>[tMAQ)>:NA,=ZD(-`EgSeL#o[?t-c7Bg23K6u'dE<pNTTQ9OE3Wr2;Z%p(K0#%e8JYdc^b09;PNJ4oH\=1Ed<D?1X*#pj@'_M%s6MC5T<FGDI$6QlBM5?p5>h?U]@;:c#HmJI&c^559MtcD\C^.@RthB2[a\n$;tY)7r'O#)Co`THm:ibI5SL9c3U.FT+Q'`e$9n6I%\tGM@Sgc_rD)%\1E7LI)75Uj/mu5`GT$&h@2$UFYWrUV=\YNlbQDplr;PI6nm[5h%!?Uhqk1gC<lcB+k8*OF+8!R+WGImqAMH]JU%l=$;GdMs!EI+`sNWgL]:!l`h]<Sp=BB6=Y2[A9h%rt>-B@r'MKkFop+ef<JUSnLbQb^^t8>[#IJdI^<S`q9!rp/P^!X`7?HDu@6<%;f]nP-nbtCUU8#4K39?%o8m]rJen*3UK0''aP<,Tp<10;cf@7gMd\0_LW'JLmk3q(V1F>>'=6Xr)bFI\Gl$W$%j*n`V>r&CG,GaS%s(:^m7js,;35!o@?E9?<c%V$ls%8F(;Ii^jba-glc@_G8n-mE:.5hd&r3iA$nlso21dq^pc+q=h0!ei=+a;u;RiL;F0]sjF\\1FW%L\G(8"U\MKF'q._ndp"M3J/&=1uJb_OuXL'qsJuD[C^-l>lmFnXoG,#0[/q5?*K`,*6oQ,j(\Ib>Q=V9-@,*cm]PM4H;R8!*Q=I<%bL%?g`T*_(7'9oon"=WD]^l#lpqg,q4)jf?'k(Y5^bt+hKV==nlX?PR.KfFKp*U2)VtiS-?gqQq*$i$!^hpdZ@h8^hg,U@:#EF3,%LlnqL#OH>`3.N5I<p(Y-KBI`)BW;?rAVpF89S:WTI0EGa@38_%Q#^pI1PVl_3%.CaF?+kK60CtCS)V$n>l/riH9kgorhCfiVG"W.%X1_&k<J$GHFoni(h[."m*rP]F"qRu+_f,6tpMCM]Y(#1'p#4l]Vl-.>s*fBSZ<[,0k*_h_f]gtCWfNGt^Ua>X2/DS<Me)W7P,6,+%:)47b(3;K]jY35]<&q<SUfpLOPTb3D;E/4o1<cER6:$7A>8Ar7&Mp%cbS89/7Mb!Of[e+mr24AsKPOl>['&o"db?SIXM>]U%A'--%[?`VU.oiWr\HAp9E4=H)PdW:$3_d.*aDQ7S-O!SE"3eiqc5Pe`p*c<&">[>K*Tq_R^D`W*@)'e>(K^lrIEWRV4Fj]@AZZ9*Wnb&n%3d(Ot4[,rhX@2RZ"rc7]&ks^^M'E5+i61,9+kC<-^69]u$?XX7cX9l;^fQ-N&J#=n+d/J%_Zn72'ln<oV]JdW%'8s9`]SY<Ql,F.%^'kr#0s$f&KVN)-(FU%125-;NW_h6=JVn&u:oIGiJ`d-F^Cj]7\tFEb[9[M53OWZ(#,g>f@)!&O.m..Mm[eb9;?d7S2+a&6?_^42%]K4.q/Chnf/!K4`?\BK"JQ#B^MCULO2g,osc=.7TI_gR'R<hcIi'Eq%^0pGcl^KtP:5a5`4OV&TG?P-$/Je[.]2Jr:lqWJpBsB`O%G,N=I1ro$;)$).FL00ir7CEOaG@lN^E3MF+q>NC6:CoP+dp-g=![c'+ppSsZWc\+<gXGH'LCYL%$_!Z-91h12SdHROEibFBY;8YM%q7a&\Rqb-jcLfW%US/!sbK?39n*^B4VPc(!@32&S]3S*+Ms4r<1`&`)0g.+cV]@HS6%WG6qiQC^`<g+[mQ668`rjtNrTRFO+O!#m%(RPY.P<RPbd4?$%7_[.6Bh_>@_HQXA,XTb%1uWZs1hfQH10U4;cXF_hhNL]aZoL9[d)-)!$AX>S3kbUkX/M`oNe&p3QNPls8`b0u%AkS/7h&7s]>VU8Ieq)NB1[/BNc1aQHe1uTL]rP%!/rRePD=*dQLQ(\^s(Dq%<gcgmV$B*S_@oD&d42Yu)rtDf26V^/GM0+Ur5m1N%"Q(^<HjNs6(FBLerVX_1M_)*R!fJV6a9%8NYfHn#0+12?n&"u'baql`GiRW$[!0lJmr)L5#ELVDqO(1ek`tU`=^ZAacR'14](i](%!<1Yhps]Pkg-/^^=;c5GK!osO0.@E^(RH+RP6]IWdH%^LiP9;Si.3b(d%65PCGplUc)N0nEXd,T4DG[2Ydto=0\.aimc=He@?:`j%J\/&t1(rI"%A)pD?b9AJ*TRQL;@?nqJ]Z.(">B>]Q^%gTq-aj>(1CS_"r:WT&I'"Z?jD>cf3I2f#P-sV:&,ps*%UIjW8`(-`OnnX%OQ%C6RkQ;B9,=Y\)#8K)%p5]K]QS=&/gSE*eJJg/bt[\99ghV-n>225anb@\PYFNJ#,H&P;JKWh!El'WA#ptX70/&)(!7;IHC075%E(n*1o!I9ZG&+lioZqV<Jr1/CLCRV^co)qcj&7@[\mSLXfQb!q?6&2.<l7cg^dOZWjn,=NJIZZID?'#(%t/tAYWCQ]DKeD8'aMPQ%<>T94.E-iCosr!"_!UO^<C&\CH[i^h\bbj_.=tEKT`gNL)RA;d'FV=V3d+m2#-REF"Yp+J%)C(i7QX/@RIb3L=CooW2Z,U\"X8*@%>_9\@nYST=r=IH)7BGU(]"r\8-h;&72YGX0\&^IP"Wjf'V`W"T:4X5h:cjBR:akf$Tc<kU(CUX>mPXK!:`5MtL+Em8q2;Y>YuZ=j%>$,&a16dpWn25I96Fkd+C\@kN5((T,=HkZ^2l.e>3"+U/OOi$XLSbP^-"1+2cj`5k%S-rb_JJ]`5[9\>F;MqoptR0&R-64aVL[nX%KR.&H'mAnNS0b[2b'ieZ.(+4'q/>*SF^a5#]#;U8^am2-H$pLu?>P$j1fajF)UTQnk2!W7(>(i$##68*P7YW(G(pf72fO/:/`*`@%RuFWn(kAm:YDBd09nBU/$@r6q&W=</%NX[;Vem;X>i"*'I5\6'U[r[L\qn/>n0ur)3ab,;#,tO>*Hm?GZVRV-MtcH:+[^[Of*IXn%/8P$4EpPH\K2f>roiu@#^kpnE#unXQ'2)oS;GXUO2(rnbS6Cai.=Y'RV$A8NLk(=7%Z]&me_*6.fKnp+&ZhX1']nc]ejD/B-k]PL%_h/1VI)LQ6!!_;&Jri/d%qCJfAjq[f.P*Wo\8loD%d">@nTs<_mYO:*N0TX::laXXJ3qK^:s79sn7upbq"7q>mJ$4DfBjfN/+^-l%<M:7q1gdue<M!l[B*?=.$AO_TKah-eWWn#PHH,CGI<d<f;b)JtLmO([*6__a*6ZG./)L?lP:XtdiuTW8;h_Sm[_?E,D)D$9['K[j%r)1?u:pj6s-!NhJpOs<H`r_rDL$^:q1mg,**Cc?$O>GBL)roQj6kDAnn`(1cjR"5>k[>\X5%\=Rq'5a/-g$`+>7h?mA!IJ-k?Lci%<@KCV_c)]?*nY.=X>^4p`:ps].TYuW_4',p-3<1@W-BJ8$!6$6(W$8r^lGTPonDmW>ApgIrf%&c8kerRa1:%'&]73?b.:_SD0:F2%,k5t1Ce%EtYmP<RY)oG*8UB\3l8t!3-HJ/^JlO/=du.ahMR)o"l2Vj/Smnf>gnrhPP>t?O@g0mmgo[OCn7TA3GQ*6oK@dNgE(:Xh%0C-,M6!(k/"btI`2_]7CXJ:MhW^u6IQ'7(1TUj38h.Os%O#9G,L15Am'bs]85)%HEX"VKSq@j?&/;Ie:ql(7qkfra7!d&f$mJH-R%G>hlo)?Qne7Net^FaX8==Dte.#nT'_TL,5mdo,/PZ;YYnhDHY`+l$i]obd^"lu'@E:p$$me\LF":,d2W'S.$e[8Qo,$L2ml(c7m*%6O*X#QYBB_S11lPi`(N7%UFY\]nZ)&acC;TI-7bL9\3t`PUfQRh%XX[rF/gZIC+Gbk3'_a$V#k\_Y?pR;PVqhA[=]mb:mV5U)Y'K%K5N#n%ocUdV9VX-q5eSjDF6_HQb;.Q[V9.'7pia[EWu(F-toYJ&sU.*H*?ZJ(&Y,ec+kR<Arb#bFD\.B68DiM%4HjQO>b/5@DA8]%Pok-*VS@h%>7AGu;C,1E4"==D%@Ob[C^62mfkpgmVR,_&DUt7n8_ph>/^t@g)KfnjqG5p`l*UQXRAB97A<+(8IPn/V5?bfFGLMeU%jK'>pmR"tQilM?S=1.d=Bap9p8B:#i:D#l%Kd=jZ!MdIp'^rEONT-n9djlC[n8/it\P*Tm>2K:aO1MQM3jS8Q^_%)!0d9U_<F6q^%)H%,Z3=)^\Hc]0fRN,jT==/Zc997\S5K_BNr\9&^no=l"Y#MXB;7VrH=2)E_]`#-XITdok%k%Ck^,`s!b0IchRD1COJMMgp'MB,9%Jip9S*gmY7`\OQ[":W(4N@gk@!2A<gPHm10/HN-+Y':mo60&)JA/X1#P#>Nq*br,ea$@fC!_#BUL>OqgU?i!&$n_4Gc%7ZKQ"d1Y%*jI1,Qqp\Wl=HEJfE?/BE2!,:)6:cS=AUQ+fp"Qm<-FbO`c%[b2pN!Q9__FS1Frcc8-+9YiE6(2a#M`t-n=DbH=s^\i"Zlt>\q1J%=BcM42E)cH''cg.6?dWI@&8q*,ASpef'N]e5(m)e1ds%\e2KfrH:jC-?b%O)+`;c4L94c+bg_0o%fldZLr'tN#hP6#?qX!k'GR6S%EKW_ofp/7=\@'a]b*mq]"dB"h91hSnoe:KsM#sJO.(pt'Y^KaH(*FHmC']P/TE/YW#bm#\,d#a(:J#!\npWFH;hq[5MW>0pgQ#jP%l!'Gmd=fG5<!V,'P!okNiDRJM+?HSOSUad8P8dj%!Xr!tr,C=_Jk\$9Oq3cmK0-JtJb=`Uq"/GkH]:#2@to`&`oVa:'imuq(CiD+%s#Fs0J.oQFa`aDrOtku7Xgq%olYkG3AqDV>;+$U%d%k12V'7J&_D)lYrahTCq;GJ6J,PG7M\"::`a>%/KRujk4Rlf)#8p&8>*Et[%ENN8/<`,fdYU<5\r:?/F[8+:3&Y>U`ca_OlU&f9R$H73&b2Yq$8;#\d#b>E!0&U(0?TXd`Xee3q*#As62hXA+0!<AP<RXU_.U7B(%[*l+0\gRGQd<g0Th4uO%S,DQ3Sl.;cncX$m#ku\_')tC)%IRG6SVNQ8#[]jE%4]:;>[9[8][s,*:/#U?CAIHpAP?kMJE[al^cED$%[ZZN@TOtQ1rk&7td1VtQ*>l_fg_F\9$jNOJ\H$uG;'A[,C@E%HQDj*kl[o!TlK/MM'bQYWI5eJBf[d9=G>E#-<iE\DfRcp`&4\l7%G<r*%.)E$^oJ.`g"gSkRI7gH>!9kV6rn1!!VLj7OnQkB:-n[1a:Xk8J$S&@/B%eGd=gha#Qo+1aR?$6(FTpp&Ni^s@<_8Q`TZ2l4%K,W9FUJOc76Z;*CEMWS!)BqA@"fQ/C,V7/2$No4Jk>2Yjl)mC$#IcS+IS2]Na<k="d[>_TQ-!Oj<#@-N3"R1TUD$^mE3?_)+Eo/q%o+jYid7HilEq$F;F;4%lQl)mj@kBtui,kW>OKhX.6,JO'o1mHPr1]Pa>$9P\W7M*d_I*O"1Mc;f1fZ=3"[81uab_KOdcZWm<n'>p%6iIm@0$Z3CMI+""jQc-:5?:a"+O^),iVhUh)\EE?U:0$2O^/&Lnp*6A1BeST7mc;F\dVQ5G7)oPmAnh-ECHij%&S5D`)lqpj^`@7%M",#f\\L7*au/8=%2,OZlsGOi+R.8kc[&`Ad&5*9VOE8Zj7)dl<_$l,U8k_*/nf"@D\@4L-f4<D<'nZR[-6U:5a*brOsj&]:`V7=%GtJ;E7P7`9/5kHgfIt0TP+bp=$0-5;f+Jh:"nb.)eK%a>]SQ]%jqnW<N.A'!!t7e^AlJ.!6S8-r%R!.P>@0Ba*aO<'Yn6h$R_RE3%5rEBIPHLI"Y^Z?Wgh,8$m?b2cr);+*D[V=j<F#u.pPcLbs2Xfofp&&V?^.,QJSd%/%P67\/t'mU+],UNLt.WLJdP!/30uFO[r=Q6%)_-Hq4Ca4$1^?b3p0]H1Go4Ld(gmtcr29Af,.AP:PA4;")V%a%^,:Z1cn6MK>7^,5LhO"Y?EY;dbn_>oR<YR+i:)q'Afut5i#D<5%KL1Jbh2ZkI[-Ib@m.)(H6c$fGFiDG$$Xf)pABS+7j.Z.g6LNIS]tf7';H.0o?VV#]TH0E&<5=+/3ooINUjp)R!NI_YHlAWWhY[-O%5#hK2f*=nQbJJq3ISgR@'9VC)%,WLU%L%t12rm+XL7'MNn/mi+8\OG`"3P;qi\thel'BjC[DN"'+K5f!^PN<K8Ti:h<RhT2/G4+>%"jbo[E!$Q3Kaum)i'.ck#UrTX%A7jNHQI,>)B]Q?Ht/jX]-4i#&"Y8.]R&k$TK/7'h!B9$Du&kuhg<-8bOt8[cVCZ^hNfVMQ(0e.%l)d)EqG2V%"odQ<p!"f]M(`ALZu<-t3;`^@5NV@WKYG.uq;Uc<2N:#sX[+m$DPGgkM,Pou=o)ej_HT-Z>Jal#BKHDi@#uOsFU(>U%.]$KANW@K*!/.*9+@XYJ'/5LPV+CfT:;)5BMl&8F?ZOt#[R67!^GX[5qjn^F(psIT)7D`@[>ZV">1nO2`oiH)P>l8Z^fU^`QDFWl%:8bV]oPT5tf(=#jIPAIZNq:UB_nQg.$]LJX?RLra@\i3=:jt5;'!sl=5b+LX0"c&(iC:2FD"*:C[gP?j%!t+%?#uHX(jomcBi0G(%LQC:#@,q[:@A\2Sqe+0`_t]^#[2>R'L1YC%I$..A*Ho5In-8;-g3TmeBa[,i",m3slg6SBD=8lT1^j\79W'=s*@F_#kk2-r?Jco.%/CLa)r;3F%;]!Gc%<8fd45dXI!q%DhHDT0AV&o<qT'_oiA58k5$PPQe'h&\#b].="^79]gf`OcE.Ek8UQ*Ih%_-q!tDa5Ib"cL!t%X`fs(V!k\rndJ:N$t,1DUQan_mM-pe264d_$j7u1(!j=rmFKg6?*acW8=apJUM5_1"[idk:RPg!BBY8_^q$9?>bH61RbcAmEig7\%J3A2[Om5JQ15LM9P*+`5@/FgqdA@hQj.pB5:13:l_0Gb(2^>i5)c8[#F$1t9g@t^_jW[L.Dq`dlFh4mXcTMrg$X;fI=,;@I9^><M%eeoRQ50#iJf!D%GkAgXT'I?5LCUmaaH.%5RW!HM>"3OB56"jp>I)"*Dm'Qr,VL[sJ!?teIhU!e:RW8nu$j7tk+j"?-[V];UY:Fth%\Rtro.#?3Blk95k:/qK:l5PjJjoha:384cCgq\6G,+'Z3po-fE';XlKI.nL,R`o1!fX)cS>k9sTj^&,]n=iAdW3<jTmBal!=@@*F%?@\b4kGe/llU&3I-]A#[,Oc8JiOHObr8;i=A_KC4Q5\FM:g=pZVB,08]:;,$7=UCg8ZBLjV[Z_58t\BbX"+857*8!P8_Zp=;8uo]%O=!e"ZpK*k0R%7=b<mIW2ZX,?:/*(i[I"c7H_'T?B+p;G#GVs\_*;J-7a"&?Hl+kqR=R2dL#HF=Zp>@ZJF,iV_a'M1E0_eGORa-@%Ou=F+Lr,a8=&[ulD#"6AN4npMScEmU@'jZQPP4iZd2p)0M00";.#'Eq*phVOZFWe42rO:aKu#TD9J#DJ\5bZ>4[^8PA/OnRAjdH/%JCOf<%/5PMhF7(VN"!WDAb&h(90IOW2P;0%[,qm9F*4;IH>Pp8_<IF1%"(;_F)UHqUOK4h):8R:nFTF>ftM</<nHU$%XdsXn`<=t%($C&W)[57e?+kD6-mGk2?'mI-EWZ;;6der.YK;%)NmA8!"1C,q3E>G0<7j2_pDD-`jKa?BP9mHroL$IG#_[5ZREZ6RgdaZ09^HJ/%irPVs_*KDO2H+QA(oW;/SH;D+2\JP"achk*1J7"C@#";a.g?`Dp4fb+3Vn7-0fgN^X_^L>N?qdf!G9`d#XF`8A"ZSZ24bSrXH&Z(%ZC/LYZ`"^CNYIh8g^^(6[7>1^B5!PX7obhLNd1-VA3_`;_0Md]N7Ll<BTW5p?sst%O_$>ErU9jS:>f7Niu?-1'0%QQ7KdDGNE*Ce%r\nma3.4'Km]_!C9EfoH:sYhON;j4s0$*=e(-R,_fT`(XaHZE1CA4CDbs4$$Lk1pL/3(&'^ZXZ,&6+5&Cu(Fkm`$qO#jkE@RqBq_%rR;h`>)+<2-ath<c3@;'_[bem2/Z7C[@eUWge>I^dESdlaPD4AmaKM`8T5p2!KTW(KPD-C`&gb?c&l'E0"t+1A4YE0L>7!P"!>X.%j2b,E`;SDCDL2@abVM<M?\!Cd-nqL>OiNSggaOI3[_8$4U895tku0,>Af)&ace]_/(Z8#!\k5oLQpa\q8g67_)!Z$<@KsW(isHom%jsj4a<sD1n'%"1""<2';;$)&i+tuS@Xj!1=&1elAPnui2Pa3>[*5U\)%YT._N0h.-)#kD+047Gq?C188WWfUA>*T-IX+]\,"6+ss%r.*G41ke1"fNo-29K(+MB<CsqauqY=ImT8e5_MlDmXc$o3k7-*CC@SU*8Or;7:8Xk=W26UH1DP0?1r+`Gc"`KH"-q'nPK$$ZJoT"%2\stn$=Q@CZOoe/GPH]&Z^)kumPH<_\S12(BCmLSOiCQIdC_:oMPKkUhH,peWii3\L?rZ+@o\./$PV1aP,)fTa/jo<gOZOB]JOf.%/_EI4BEjf>/MKkXLu'20Hr-J7V(J%PW/Q5:*ORpr@CWXg*29Vn.S&-.$5O1g,*JV,Xj.uER#ku1N!Cc3UX(?g<6Dr+PZ4$SbDT^G%R!(?n;<V*,5]SM-5g,aH!*"f')3HpA@Z.WoJ^pIqgm3W*7*Gi4WaY;Tar*;[*I4lmm\=t1&mO"LI;ht3cd7%.!8$`"0t^.f8GA0`%4BRY1a@%[qMiY,>&n"HWX4eW*5mQsN!@K]H:'DBsCquqi1+DX<B>G<IYPHnj6MLl3CR_Fi0]4E_*jl/,""t:mAU)T#cPa58'907N%!SVl+i`l?kHpA&q'1oU.*29X)o-OG'89m'D7]Lnq#(#dDHiXAG6&DW6]JB4g%0*Ei>0!ujkjOTZJdISbC<l0;X9M6bet?-!fo$7>%_$uS*iuo1(g\17PM,9oB-@uI/OYfID\H43h6NP6O#'RKW&cL/)%n;aY<6SlF,d17dVEPC%%?^$:i[orU$C^T&>g/C.S`n?VES,pY%d4:FA<q3U&YYL&&.Yl_%O;t(4V9j3RD/^^6mmbM;+:+>;0(f#d*?)pu:l61Lk;9`bXW52fKs5*M_l!RVr4`XlQQ5Sl'Q.I=C/cN+%`'+!(K95Is,/FnrqiCjideB&%p6sfg]pq6=pOa8HE'aa1]9NEC;%GrJT`80n\fcNDSKJt".r^)><!a@]I?f9tZ4J/69s=G9h7tFs%Th[M_(PRp(lac0,h!uH(1,i[8k"V9AK<f-akeO4r\['jTcfWDi5W4-Zi[$;jdGR9@16@J.r5?O)c3nEO6m8I.A;S=Z-inMdE%prC%$>7m#X90tTZqoZ]j=#X,6k";lh?t/BKYZ^l>Bgg\q,#-N]/,5X:=b[)^e(e<ahmL;(F0L@jh;lb8lD3$$WNdV$5+U]AsS*'NV*+)%JdKAc'U$D6iU%jtp6sa1MMH)I;1[O$$0RH-#;3<W!"k#8(.Zf;-qXm45<.&&9hsWo%$(LuX9LfoBZn6%=,s1$;.Dr`[*ead!cEX5%8Q7nlGYaBSZosYH:o^%fp67ga+2aR7VA.r"NGAjX'J][$6K*V-#&]!tAE@<n/MkU7_l\bJLup&eHF'7FJ[-#37R^hifXi7+5W\#d%Xnr\%Gae2+K-sTpgpj\f93/tr#$DM\<Vh)\k@&#o,qr&=G?IB3U:^tu>>@[dBIlsjOf\\]nchl+i',4[P!$^T)I`gB.02%bF9Bk-%`YoHK/Z&LK0Lp#*9T_^s1mSd]_W7HH0]]6Ha_41tB::eM1AFuik#]nj_t"R,BUlfG](%[("@7W+1603K<MCln:6S7!7F'mkJ2XH)%@o#Y+!+>H]+CH>iBh>9m0TH89@,tj+?pIUB:io[)2PlQ;AU,IQ'J]iog]'cb2TfgphlTDS$&Jio6N@1\94\kV27<^:kokWqm<D(h%!@BTN_?0UjQAPO*]ng!*5O0^3)6uXK'!*5J"2sMAD'CELmFN58K&BLaWG=2<!n&D\p)X\0-)c&boU%R\5o\bS(*S>9FZcmflT^*m%r6/^j:&-jW=>T-"r\hnq226--e)qpGLS)p0^cIjkVXSc`V;MA=&j0\0$(,Nd%=9;H88PM$XZUiK&hVk6[BKXAAW!RdO>(Gl1!D%D%<cs-oS0J1#;2>a')hrGe>*KtZE7gq]N,Q(ekUDOJ$C3(_/\mN>$cFfFn#M_Tn3\0R'00)LECL'BgaUf,"q^SVFa9qZcbL-a`:-n^%cN(m$O\f((LQa_f`Q7RCaJ)6q"E`51YnCPO0R-Hk;c&%OiI9kg*mO%^W"]9f]>M9,%W]".O+8hkQ8XH/.agp$7s%KkkeUL(l5e5N%5rP&RI2;?l0>Pk`V['0l3):bE899Vn+>$!3!#c3T*!7HnnHkd]Bsm)5j3[E*Ehi.A2WQS'WJ1.^ZnV;"REccfY_[r$9X=uX`)LX<%RLd5:&tS*$!B&orh!(P,a%7f&9fIMb_t3A=q',[+%'J$"e'WXWoM]6L-7)kUDN_np,VrC%K*.h1K;BDn#gm^06dje/E@]/j[)9!G%cP.6HFIdOs)--k\!@O&Xq^s&/$14&<C!47;LlnRd[H\N/]3DW$4!/kr7gDd(C+)aa,/Yj#_1LdW:t8,%WIgBYGpEsV+bqIjf4.XS%/*Ifp.CrJKTqFB;>W;,?R7X/&g"6_4`pWX`k.M0E&"\'*`t*Und%QXO`uJ6dpoXO:e0_>C5sK?Y+Gq=GP>PCE7hcQh&akN#6AtkB%7M0'aS"kd+(n3*S7(XF-Zigq_^E4=YA=bH)k]7A=/ce@5!7;Gb&F&ig7!a"VOacg#,5m#l,/#UZB\7qb#p<,NIT(^F+<iB^bm>RL%I2(#h"?Zl#l#f9[^4XrYU?W6cPX.^ekqn4;GH_iNUt5b^R;&QLl[P'?,/`Rf5O(q7/rD'[M^"$oUPQQd(I^a;1Qs42!j4p'&U96Y%U0a`p6udVh;1-2.,/_.Qnm`)QqD)JII/@!^LaGig,`HCT)H;KA?"$-MD&ACB(If*_.?#[X$R:hR%Uhd(%Qm<"&LYHKQQIt]j(4nH%$R7E=BM5$bH!M7a?6;Y$f7aeS8YWZD@746+\Y($"d@e+6Shc7\b8B\;(_KO:222^B4?JM##56:I,DpO)B7pk:B!WY>.'3k%ibI+A%*Cdt:g*[=S$AiQ8DJp@hUqdmhJ[mFmaOd()ZgM$-,Du5N&Z'cjhA8X<I!KWId=rMl@74<27O6CJY:GQ&I;Tl6$7RdKLtiV4["K#C%@73m'7RXh=8JmTQd%3F[87detRY29PcO;&8CG6&>d[qIJUt153WV'[fPbiS!(f=T]7O1Q8[m#a!ehEi:OYp89[etuS,mO"[^"Is)%_rhY)Ph(R%!WR_E6pNP?N@hD'>%3=T=SjCu';bN`7$GqOTEr<@(g=\m'7IuI,0?JR`:66%C5V`T7%2j?nO2>Wj,)dLGTrp6`=p45%nO-7^GnNo;f>SE"#K.;?g$qK/+Zt*6Oi\53PjT%I_86Eoes#rT,5d1JF7'Mc.O]hbM+f!dj>i`$`L5bpE2(/,6tUiQ'\:u8CVtue%ba>/^,%k%cU5>HlRY\<mds.VZJ9W9Q/tU.fM^NQ2j,)d,GU!$8GU!0(nO,LdS8][YFl>`WU5>C.'=jC<*\-:REBQ>nd6oiQBD#2`%,q9/FYsaOd0UAXW(r[,iq/G/W/XFIu/<O02+iY-ld7`tAMK+Fu\nA=t80Ukd/s/Ot)+d6]LM)Ghdd&*6U3s^9P";d7,k;J%,g%)5%ZqZZN_u@Du,a#5a2-,V/ClTcmj';?O"!`X\NdZ*sdE8An,)P`VpC^'ib`P;%I3_Zl(J1Fc7hVdYO[PdnL)q@,'OEb^aFA(Q;%P=(%(J-G'^p?NDR9Ygr71sT2O-f(!['qKGW2tS<F-L#0=9=?%W]?.hkScukXp"tA\Tst$3$QUe6u+u]-mII@PouguV^au#EGl.-g=@Aj%p<_J(6kkDW:D-(6<,b29OW@XX5t&JD+JQW#qsF74TeB:n/7Eg?Ud@m.Wk:\7)_)][Doaj@bH*bFX>G7*&Ron9`XYP+hfG0#h__J"%ZiO_>@[.P0UQVg/V_P:k?[s=Zn6ET6h-sTdX#g;O^E,alpZLRdrooo(SUZ'6IWJ\sU\XmJHXC2Q.Kq6,r38V<A/1cC#?B3^A0nTT%0mDPc"rgjG&o,*NV(A+,;!gk1GU=f)A4Z,$7pF[T.,0Pa+/IUh<(Am2+"qK7=.5?+?t#"h2ZpPu&A`/J=<)a2om+`Km2]aP9.YpB%1p,<i*j+=RA#bh#QUBMmm=F17ni%JqVsn$H&f4O0an6rGCi^:$$AtGub<sl)dY3=5=I.!8\6e)2GUu%G3\[;J!ip.=96c"QK&i;a%ebL8g?cMV:<BVl@J9'5V-PoqgrsR+O#km=Jpae;R^-+Qg3IO,"[nduHp8-+T33sk[ls*ZfQoMUlTS\B1UnWD?\^ZgD!%pK+Wg1hL%pj++l*;%V#UU9[A4Olg3i:g;*](iY5(-1@WkT+BS^]fF._$R0$q\i5(3W3J@O1ip3$PoD*F^-C1UD"N4WN'SR;1ac-P\[T*0d/]R%;d3TOa<Hc0X/5A?J2O)+:W<coV<l1\6SPYiJ%C)Q0C[iU6R*t.qUP>4pqLbQ5dm84$OTD:rd<f<T5ha#`O[k&5CD$26PjOaRJu\Y%-]QSZGLlDAcT(;RFrP`3@eie^5s3k.IGYP/ObX97'YQFl-;>X*._7Z5%49l_A)=U;'gaosUlc]roc;X1F'W>gToJU5LXe-IrPL_8%\$E)b!e^IEeb.I!&b$E+,es;0GRWYZ:E^V;\tY+<R'"=-U7:=9TF06U1iV@Hd:o"Hc$G"'o>Hm:ODZ,!--fC>Zk$Cb)iQ)1#_UVA%Uhp)Y,q<7N?_P9'\,`YafOEK$%]@,Y**Rp\?q9QhNjNqF>&JL-,t9H3PU;+D^1E&EKD&BrZ^)el$^8De2Ak0^1pZ^LS=T>ZVH+oP%O;^NEVh<HZirBoIcb>H(lOgB,m].R8C\8+I8C@-$?rC;'[021om%AH']lP0TMED*VjsUEl<$<8:j(7F&+VI4Z#tcW@N.i!^V//!>%FiNH]Skg/%iiKjbPjO.TQ80?\PG`HS[,oDC/dZEI'#r0hHG`,hF#l'L"i9Tki<kMPPVneJf+]ct>RrrK5j$__BX29#/^/?``!4@P%(BNgW.kf"IZpRCqS231,Uu3J;Ka4/a]q1'ZG(=&K"po\-)9^`L9.FY%1E<1j(rOPgLf,P/Ju&Zl$cK?BJoAh:,i[7Ep$/qE>(9cE%0?aeF`jSG%-I:2Q9^(rR0VTVQj9DX^>#:$co&:c#'Qt)R_*9"hH@'\=\%h[XS!0Hlm&7iV56*WT-Ht<nOe0`2'fH0U]]1q6!cmK>%*"3X0[c@gPcWRe.EKM1?>^WH5'\Og%%qm(gFKl'RJs'?M;"`XMQSF]cIN0E332+lOY2bu5j>DIp#2m03J1?0afRZ9jWi"]1B_=i3%?D4[_i^=qcoP[&T+U3*c<+1U)jI?FWlk`Vb/^L+a)lTgf=t(qY)@YnR]ZUj$%5mH;n-?fF?+F9IAciU%_'3m@rp6IchF&H1^AnjD%@!=/(aJHK,d0LH!;/*qSBU:MCdWA\71018#.s!1t]W#Y-CLJrgY)QQp!H.YMWXu<FhG9hlX-<YZejVVF[,lJO#!q/;3S<=7RHW9W%8T<)(/%Wo>M8$)j5b04Wcu-Q7I)E>q]>Z(U2&Z(/.tEdO1YoM[0arH8a5F[bA7IT[iS9G@3?#9$bQsOtQBOgi/lXY^.J=7S2REO_%GN]obbR^$^!sBUteF0Cb/!E)aQH?VEMg<`X,hge.$2;K`_le&"f<>`?1CZ^4_2(+GqNu4iBG/)@o2I(,imC7eNnKOp4DBZ\3G-rC%U:eXZGd9J`3<]9f_73q,U4mb=_ncgBgl\Pm1KC`9#',F6Oqf8f/Kb%=F]:*=8O1<N1EqP%c?*!h6/*]NangA.!d)6[HDP$aL"js+%`0D5Af1DXt?;W*+N+%?jU'O?[MR3dtg#V1?<:E/o9o`?NFWV0rEo=YE'hF8s,[%?A-nN?o^/L]1#0f)/YomEZ!r5"DY+tI<;IoO:%]6j^SO:a:(B<V\roq0*5;dO[(%KSZBiT[+-4e+S`(ri9a_oUb^h^dI5Z7;ko(i&O3qXVPsVlR:R+5`]<38;'XIXBXc!V\,15I^Bh%@AP$enZ5;Wp?AROSc%.LO.XP`XL*=._kZm;F$,n-QW\q^"PAfLTNXG<EAB/JjDcqWdSc6[n.1\p,-;.$q^HVLcdQEE>2aU5Q44h%%SZ(.\3u.ZrlqS8g@5GCQ^Bh=/*lRHu@ChM/G4Krs-VlZ=fH$_fNoYch:4+n5@qY?on^78pI3O,Q*IFQQK"]RXb21eHljZ?j5D6u^%:Vl%X[4I@7@Or#QAVf$\%qTar%hG';2iGT$NPg%[TSG<.I>&*T_qC%@dsmnha78o1[njeWpd/tZkP(MWI)P4nL9e?[@PAhunhlfq%";?=+*eL10UWu"%<H&QMU_$<pEH?OQ*kUmB_IURh!:;X+2hK^RE?Bc276h2`!1]l.6Penm$\q&tJ'\iSWB=cHB(d@OphqZ2[qtqY%)><K3\s]ml*3J`sS*Y[Y!e5PsO<j?V3lB47]P,[Ff&Gc]@ipp"`P@349V8Vbg*t2IAPMDHV*o30=XWpl+e=\A4oi&*JD%b`,#mq<%3@hq?;3P%lCeY)]51`/#UsEWaS=0.Ueg'51:L;0aQP4Gsat`#mpr&+`otW9R*&kEIRD'^Zd95ZqAC'GXQ9H4l3upMe,dV;]aFq\0%4Bp9eZK.IMhq]2T7r9Wbc!!\`C$S+o5jT0?Y[f^V!s8:B)qEB<X@_F4:EM[@NkfGjCC'bu,YBY2!`e2-$Uo7T^ALC>!=2q,I1sWq%%a70YK)egPRb.Z&JC1;`D_3`,_fP"27\N:/OC\_<D7-O]gJ&RZ,NA!`QMmhQH.;<L"*?P_eQJ!l9-QY-+@H<*"t/he<'isJX[3$s%*r.YU+CpfBdkBWEq*F",n7[+L$XtBI@Zn(Lq#p$s=Gr@P)FZ\'J=Q\tEb@9-6\Bh.r`%GX^'tJL>O^Nc`dd2ti]&Ij]"76Z?:n.Y%he/gJqsmgF=&T`o8t])u\O[1Z22(0($;Uejhpp@\FDi_#986DHP"\eIK%eWgKf;ol?pZj><,R!,=TB(o_TD8V&M+&0J\Cu\KCt%i%!"h%pF9<\:+_ro:7&ZeI>6((Y-kNQ)1l8@h0!OpWqDn6G$Cs(11@4[^*p%n\b=u$Q&FOma7>3E(FH9Va%';T>>7-3G+?(qjo6l`.%]d?%h.D@WqWb<0t%e`<]+\.<,80nKY;D>6+RSP(V%DkA/Ye[J@M4$koGrTk=E)Ei'E=TZE,jr2"EI<`c1h+6nem,J]?SPsIT-O/r%5r?*Zil&j.=\2J^.7-YBUm(8N-LWROk7,ci(T1ZCa]ShaL@TA9m#QuN3)?[hbRsuTkJ?6>VkX3LM%f5$c<1f<V7jdB&=D]pT6"C:%Tj:c$'Q57(?CbZ3#;;9N"tO_]_:Fo02Z^j;,Ap+.$8E3hX_6GA@#Z<aiY<,*'QSq/@rgJ%1dFUl6C*#?*J)H$q<TdRNFi8qeMP`B%%Gid*q%V4O+Gc`V6o0*]0qC.\:/^4V"G=ITJ7E1=[XqljZ!b_g]?+^cqbDR!$Y["F8jfJU,-_k^RaGoQm)I0]"pQD^2-[<N@kJ.2%5_(%S*b$-?EsIQ+-sH]4-A2XX/-gbU*tFG<qpN&O,:%*CKI8Yh.P1&QZ(iAc*S#_]>i;hRbX^*r@f?>5pYH9p/]k`rpB#dK3J0&j%6AMsbCkE!g3.c2c+@&Ce=;#smcQDo7^\Ur1Y967&hKrk[S25BHnU[FH=,4q(<F)f9H6G=5.:Y_&<Xh:t=Na#cd&8TTehWU$<8TO]%?RY_H#'=iNbFnIHRaht"s*Eec"SbZLMs(SB+O_\\8+D7*6n6msN18pJ0'!J:63ShWUr<6NFEgqZgHoEjqs3dt!U_kUG!Z8Ell2m1%_iLgXGOt*8-UpY*J\!;O2YmM_CL6(;-n",o6TTnTnNR])-CbTQ2DKo"Pq%eRa`_(*23dt4=!Gp=(m65)+Z;Vl(g'U0$B_(*AqV'l%-VD$5a2*Ug!`%[4,mD*(TWWt#]%S+%e>PfoTI5hW'WsjX2Y&b'9Ej+7PIgTiK;9*6R3R2!>R;jqW:NDA8G__lYG15VUo!OjmWA&p%?Nig?MMQ:hGnjsEk5"sU^[5WKMtZh.8$%0]D4=WZCsMk0>)pHIR]=TJS",kP4pH1.`!!kLPF`B".>@_JRY6D&@l;:<U.#\i=h3Fr%W>$_^oZsTL/^"Z)JOq.laLZ?JUFTH=\?8cX3#=E3o,&:^N?%A<giE\N30PkU*)eLLl$+\8dsC[?XQ8'=9Z)q#G[%%HU+^C?+<8\k%Rj(*WM<i9K^\HXIYC@A"gR)Y;k$>E9rD^ZJm!W"PT;s3>O+GJuIr$<3%f?WF;Dj[E5itBZrWKGF.Oq;eeZE9dS9/FK^04J:lGRr&%`1=]$aggoVJHel@g$-@;Q`O[l3fZ2sjE00IBd[sS$Ha1NR*TIrk9>@#qc65b?hnC,QTrWrcer-iio49N:oXp#7,JVdHfn3;Y!f!.%:ne$!OrYgh/WN`3^c.9@$6-l+L!"*W;S0Kf*uGPm(*BOX'?M1+*3tjOYFeqB3EO=I/f66s+E*fX#:*`($49'%,MO'L(aA,Va&4'8%<:bnBY_#>!Rfos6cfo3h.9^#nUHe80k-'9fE6`=&>^H@q4<Mo.(o-[;r5_7A220=JrD,/e;5;mP%TgIk'Tt/Qi,\iX86:=OamPF&%c($b>b/MN$U=uK7gskH#&kfbR=a!!/`)9C@NhgY%"!Tb72hV_$60`.[Mk=ndO\^&s:dhja)trbkeC3K^;bs`Vl=l\\'[6\#'@"W%%dEE%qLh9_&=c-g`1erj=DE0><?.PAgRcB7iBm*AHF;EKq=j1<2;A^ZKcG\s&HIflQB:2acm\R(H!p09,=\-9T4$t,tEc,eNOs;i/%rku:8J)oA2EOc5$R%@J&@cT$j<aHU5V&F%lW=@=TC5).REmA"<+Kaeu`BMc_W%4/l3""tDBI`[;lfr3gooc,(NM2q1"*<RKfLgWj%XTNXp%on0AWIT<=C!.feC8"=p=>#(r$FB5neG&JQY"ELjG.,32e8f9&e(H2R5fCmk9OLY1Kt2J><fccNK*^6(gti?X'ueT#-beF7%,N%X`*4V42;jRo5:@U`9/":?qAWofjCm)p%W^]s%Ei%<pV9+ut1:a4JR)r>^jgrR!9f0CU6N>O1qT1PjlV4NC7hco^AJ[)3:@3>@%a`ZH1:H,gZlhLcZY!8kU=T&$_H,')od-6NN]tN*%!OL'LrPPJp8,,_(IsK^1VLMrhrFg,1/kO<q7WWN2gi#;joic_0!U2O)mD8GJ%Ir!+IQWr9`LCX>t^U($o2uERA4R#F-UUeC&hcf[Daem!`Bo$MNHY3-]9mMQ&DJO?3qiojM7au.c/IsS0K0QKUagSL:fUhFq#Pt1h%Z8L@>%DBF3)Jo/k78bWW@RAPgp>8B"Q-O:gg@2ERh;f__8*p=Sil5ZY5A8Nak2a_m8STXP(Lt`>)abH?h%]dE?,HW&,5E>\VQip0%c1VZr]L5!`FFsNtK?HR(BB+KaB@F+3Vt==uE94jLr4B8bTEbCsD:lXWo7-I(M`o'MA,bC;BhbRCEr8`.XrlD/hseClaaYT?9VP+I%=.jZ,id;sV8ngZ;)p*IPr.gi3Dt%qhF%IN+s6/%)18E)4LDZL^&l"tC5A`.jmWR;"+oee*b'B]7EU4]$`?N7"+fddnjr!\S=:.1V%kb>E_ALtpa0;1GknC%6`?N4q,re4m+[4'B!F';5sp8.R2''d6>6^.=Wc$rj]FD6$a7#9:U25Gdg7>%&\-8\2u2=,.G4_/&j!#j&Z%6*EEg:@ieT0&#H-[sQ?PS,L0.lfa/%-$qoEg,d'LZ#Snb4/4FSr2bLSM,_W29L8,/k4I'5%IVWRH\oJb)N6Agajk9f>2':sZs#cI%1V4q1F8*X=gR^4sH"j-gd^Z757b+sCQ1f+UDW=W)W\Ve4)_e^djaM.2\2-0W)/"'0o$6+"ZPHeVs1TAZ=+>#[?L7#d_RsT4H5DH)%:>(7U<n6QFHTQ_)=nCGK<u4]Y]^1+4e1](Mrk6!nN%+6<\F0a0*t2>f2]hVsSU^9Y,GL(A;]Z:ekNTaK&,_car_$"!X@da:k+L6D%U:U&jO9q1,/g_*d/K'86._f+CjI-,%4$Hp;+*FC75ga/Qh<MH#4$<WA6F7a+Iqq:Fp2X,N:#k^7%m0f)/$s-i2RG@<\KfNnqBWlB%rS+qiP5jtu!C,)R*2'Z=qqGnLE%P3_*<*lTIe7KZ[8"9SIu0o)^V+Fo[bJd1CEp!hpBL$YKG!+51#gsQL_l_Ds!>>N+mi74b$.46%q$LonkStXd$eG/)=#!Sj?G98H*!Mu'`%(7[<1_Z,W-.sT+88<uC-:kVs2GP,s%7nC8qMQ#,UcOZKIBq?oT(p(><Deuc*]TrAO*Zt%"bcs)R?V@WO':;*G6-@]*]%.2`G2im]h*R)&uP/uElRLG5KJ>h:rG1%D6^WugYIE9@%P[#kkCkP>Fb@tVg$L$[XW(:s4:JUp7H$#%rcMH;@X!%K*l7BOs!K_'2Tj"I`tV]V[r]VO=@'p<_bl\4J+Q2HV36<3A$%HnkI<DYSu,,mG?&7+SCo0q;@QcE1&bV,E?8?`Vm;6A%T><-TSbi@\%H4L`k^O3<ru)B*[L5a/25mOe\,]%q<Li(F)R3dC(Rb1*dN>@h@:<rls7jY'NG#BP_4TY*CMi'Kf[GcK\%&Z<?D#@>%s5W2<?]28jPsYL_3eZ1#QirUOCsP=V*;i=%pk;[MZ"3iL@fKM[rc.W$T4i$>0hDZb]b)sqf?O%npC!E]Kq-q4%1\cccG_EOIVTH`%C,*og*jn%F6I/\:mIpkcW7oeV_nl$q>G!&*(cCefb,&obe+)2/+5cCXg@^YW&T056_-OVsi\>Yqs)hB=M4h!2mc_jIrmbANS(AI+%QY,L!7j"A_LZNmZe_X&H97QA0s3"HP4W:_r9>92mn78F\<N@?oRHA"+s,Th5n4PFDIr36'hX,MVD=)Q+#CQj_83W#_/^IAF#H`D$%FEmbg.2<JlMo4#GeTp9%ijn(&"O!AYg0HZCV6`h-1O7g?%cc&bZ*R^t+mBj41mD@+;.(WPpPk*FbJ1MQf.9Q8K!S>*06S#<<K9GY%2S7"<6PGg0$Omtj?^+;JLhbOSXZb+Y>1so+nA`!ae"TqKrK-fm?n.<1L4;IR"_MLQ+KGcPi?@[/H.mLf0?kH\Hc?ia79pq+=)>CV%+:Xoq.+?u@T8L3a.'q-_\4hhiGSq:CrB@l\A2J,f`mMSs0Jar5bBu:J=O>,k4Ot@oV8[7d_\21l]f[2PQF<Cn5BE\)b(Wu2?)*-:%.$'0B+_2t_>ptHHCh#S$HnUK%E>'rZQ5\hTj,AAU7^b3m-q!-;.2t%/UiB!SU#T<MQQLmpBCdg[Z":kVN0;0u=#I%;$Qfu\$3.31%Eu)biYe)?&D]4]\b@m;!8t()J,tVl#Q0IFC?6rj)e<nPjq0_;&2PL9hFQA,V.AAZ"&P@:Z`.uT3U_^FKR#/$RLg[s[_Q]uRA8@Em%k<96"OCPXC!=iMiJ74:NZ4(OEaKh1&od16E9/E^O*d`f+EVtBPFo_n`3;ao]4_fZ95Wh,\,BDb!BK8aeBkgIj"?YicZP"'7bOLOI%Co9u1/-^f.#=AZSHT"]a-PEge2F<<LHEA2]*0.R3X3cD+R[R]bEEipAiDEYp,EFUOUTkk/*<^Aq9[ZL0;#9.h,`rU]0=F(6bhP!3%'<]s4[[\OJO>4WC/QX7C5Z:_(1kOtZA!-uCbe-Yqhe_;24bYW9)3aV!3HIB\"1$HK`[N7&A`6m7,!]QVed06j-9&5q7/e0jLSF7M%PWXf)099E%l"F>>CH""COUm:A:`gXdCD.aD0'^L_C.Vu)V%tBnE2#=L$EWC\jii9bV8Z]$3l*Um[+7\mCsWMj;DO(odr\]Z=ZBrU%>K_)\Q.+GA&oEoV#pRU+`mOq3ZuT,sr-VoAYmKJ]/.KMeU3mS.MSp*n"TkjfNm!g;+)0peTFKc<I<Z8Qc3p3WUM,U2[IZdg@tn'9%,*\<*ISjui;5',?9bR.QO&"mFSs+`h0Hr;B4/L^E##66M?M$SNUjOX`*+Wl;oNNrmOKbBCaci02i<.@bGqso!.)]W@Gb$Ro'\c-*%h_:>Dd./@]'"E3\a5t#h!^iC5(b*lP[Lj,gGon/A?gq4G2(WS`lOn:B6B]7kF-Zu`BFMa$XboSIQmC(8F3]Y/]bN-A74.._kt!QN%Mr[';;ea&\oop*Jjt^V)WA7=4>O3]OA;=mgb@MO?M)'m/Xgfhc*9P;69.G]";*Z(N!\f<#J`io8c1tDYjDcMo5:+.e30e-%,fPdT%#E3VnU(">flTj2ZbHEH'_n%*.U@9Mh@5ASU3<WY[b_I5"<uRmFMOpjG@e!H;bEVW]4t[P`iD$!4`6/7uEm'q[6=K"%i)ErG/mp/E%#)+BkB9[FD)I'Y9#XQs#g(`UpJm<qe<@YtG'#iGafE'[XYce7l+0oQ'@HN4uIE](`Lu<OtP;(U_RVF*1=[qM$9pl_(:"9Wj-B5!a%rpH`$.Y$JqB<MOBAm--IFrjEFTgR:RCTX.NA(5FQm;_hjosWs!'7H=IN\]J&*+r/;cDe^?24h<\;#_ISajn)gYS4WVn>VD>a/qXS%fN@G+Fies0%3kh#Wf6_LEHIquY?H)nR_`G@Z'SQ9F6=OLD)0Z4=;Yi?@M,JWcBclQ&'DA4@0uG3clHA/KQTj<F@VS@beSs:^ubSq%+bU&/_5hD1r6D12AWXl`)nCc0IKtp9Q:rh=o,7Qo#5(ZdYR>ip</E35mU9V0M$B;/n2secEAFhUH21fI\Dpr#]YL"-7ki0H_00j'%r?:`4FbDHNnK2l2KR#!c>4ca+q1NuJ0@T\i(a[9=/+T*M'<guK<@+2l-(EI3*SHS!EYCRs,PmOH[UuW90XL9kFC6aGPVj!ofFl:J%a&@qj[s@thVKDu'/,lGK&fK7<^u4J7TJ`CT)V\24U5X5jUO-(OYenW(IgBdV`:an,3[kM'd^6qR9ruG.nqU[^'cluI)luY4E=<>J%rXCh9pe:&/,W/f3p`Tqs)&:kP?<-2o>,^m]TdZ(CLh_9,)R@^_!AQmWqk-/!`KL=]8YV<OYkR/r)6H!^;l<?2l'QDN'VjC9M+2VB%5<8EWa.Lid,e`+,k/:7U8-VblnFXX%IkfrWS6s,=n&+Z@`%in(A`@3K@3LXOlFGO52\tJ3S5k1`'b:Z\NFg>#c,/]]I!`VkfX'EP%NiK8/ZbfOsgS\4Ce]IU41XcJ%3%]C[Ij@I^?F'dPr-t'1*q^&+n+EX84ehu*C^gp/4E6Oug\]G2kJ,EG+N^NfDeu)gEL1hXn#(:$%p.&,u9)ihClL4'+h:gcD**%K(P-4>aemPB_>O)e6oO>%)WMVHM80%:>NV^=X498Kb_K)Aci/'KHqB9hZddhVUg=u_l<<-bS"I/I%%^$MmAIo<0CL@85f[d<kTVl/1Udbd5P,SXErNUZT<I/'8=^MB/>q#1/tp#l:Ep;B2PD+sp,YhPp;caH<<6"fM.'V=rd(TdL8%.P-m%?YQp]hs'P;gA8$q\G?_c`BU-W3Pqa7^#?HX>(beiaog2EVSBNXp<j`Gi@4/UJ>gd+2+#48s7*_-e`lJJ;WA.$%W12pHh<i;iVX^r%[_D_/?":(q4)N-jol^."`B+l=>A3gK*WMa:I=12B06F?;]_6U_`'<uAs-!`ec>OLGFYs%U@kj:YI68MB&-'>5m%9&gGD7\S-:?o-%laS?(rmU+`k41`M.fUHdFL_4Ws2!.Yhb46lDJ/i2SJNYnL(^LTf]K.\I%f$fGI--_p@)mrkH3n@Mlc(8J,<t35<+dt\!k'SFuVb]%g_FP@J+K\Q4ILTBUA!>XZsI-?U#j%5=[bU3Ba`Y[PL4^_9Dc]$6\aViQ?KR[rrD<0Ci?(u4P4O1&Kppg(]PbVrnUL4Cl_a]U^d:U%H/sHq*`mR8rGWA8W\ik`T:WH73ld#8fBm"]H`YV6`@srGj1%s22b:\D52oaGUGc@f0*c?i$<4+J1#biai6nCON`os^JF=XoP12b7%U]+p8eEV2kc$c8(SYOK#J3pesmCn76nd:^)2jTIorPn0SE7>qB\UhnZ998\a&IL!FL7Q6B/k>aQ9k:]WDS*Ra$@H&qF'QA3S2XW(%d8n">fP/]fqtfF,Ttk8R'D?7QebcI+gaHccB,p<<,;nK#<q4#KK]s&bYr+Ra:9@B_)Re<XE+\-_*neF/j&'<)cp'_BM3bupR)--&%E51$UhM_do8.ST5P3hg4-]L94[9]m$+IM;*<1Cpdj3\H5o^%tkQ'&U``DMQ7B`!"B6"btu1MlZnZRE<Yg_6Y<mbG7iio8[;0VJo(%CJ/6SeXb!a[FOMb7_]ap(S9;D6#GqihVN6fYMFHV57/c_6BeJWJ;naH;/8S;d$X4:j-:efFcr[O>-@V/>@!>1[;E=f-HmEV<OXn,%gr"#ZX4;XS5!&*A:E^tV6W`KMrmrJ)]2SaBffuM7D(7Gbd9KZ0:BsORf8dK!Y\.n/"&+@HHBKbP`brW&La'F$?Fqqdj#D<jeX"tG%c4Rg=hJN:`:3Vag&+$5_KNaE;,Ok&<D3P-:d-e8eg[.&6!pV0M`@>17[t"jGFiii2CH=rdOnui##=i`-&'sYT<]]<;OhqHpYJdW*%iR<$rHcc(AhEG31pI7E6Os8p9m]O:ZBY6<7Ak@WBo*_,;7Wh>NBrs:O,<BJ'JV`G]ok==pIqt'8'DulUR#X*e6B+sY6`;U&6o1pG%ea8saC3\)cg7j3aQp,S+"$5qfYheKZX;C_L?oZ'qQ4k0;Q?9TD7YnX*dbfB+g[-plU9:#^SA<cCejTuhonbJ^X$X8H0@@/SkqO(K%LRiB"kGoXdNAK(D'<&;IC0akTI=3$AE`8)Vo5B=VRoM5G#tSbNmL1&:hMt4P1!*CYB$puO1+8m<SXB#0GIiV(KoNh)*_>>?2rS<%%M6pC@.qs1cc'%5(\m*VKr9a=_*8p$o0ILbkdg6G"G3$MB`EQXS\FF_WCH=!5g$r*ClZ?m<]h9m1Bl*b)=;c40j5fApA;cJEWZFkQ%H[BQ9V`1X$@+)c.,M&O5j!;#]SK+OhQocQ4j/i%bG38XR]t#r^XDQIJ?`B\UhMNguKsAp?pY-QAk=.ttmGC^[$u*'()kOI$e7M+k%>X];jM.(ad#BReEicR_[/LWdF[+QMmO%u><DJqA@e#aY4`&>NnXg"gId[,]0h,58]31&UZ<X5FFAs6PJYD%Yd1E11p<l(,QB=-pC%&0J%%$2u[1DReRJC"b1"hS`GkOF$<Q35_f*qYSZF9mN58g!g35ioq,S#5t=ar](FBB.TSmll9A'?B"P=RrV(ZTRAffD4ecI\5B<Y%$YK2PXj5t4gP6M51%f-rA$5@)]g[O1Pd?q#kGaGb04'+!DZ#fjZ68F^2!FCO!Y$H>^HoG#]2O#71_9qbRXa)FC%pe_ouZi@T=/U`%(>CBNC*NAiQ\M8QO;Y.W"9i]6W+`<Xb!S1al-U!LWnY/T'TR@^)cMcpBGd?k]/k_C#nujt#*gg/9@%<7$4P$gl!0IDh0;a'VC]jP%Z?)Im2tU@Cf]T7Lk=W^uAeT=SSbB:of5$q!3_WMq\'u@Ceqi+cK">U'CCRa6UVkY#9Ee.ec!X423__pSK1-80ghUOr'eKfII>]mZ%Ac;Tb\^qogc"ik+!G],;>VbB,Zhn->/%,p_\e.\bQ0-_9*M'B1BY-'b!#DO#*kWG);NM/j-DBuIcY,p@1d^'5IMjf<:Vq-/,nbq>%?J"Hh:D>^%LQ&Z_RLL_qbie4'n69b;#/`7*Z;aMRH7Fm4!f[T-E.PHMR_jAWlRH+XV`$bU%1\-c=^RhA1$]4SXj$VCXfJe"BSk6i%GW]fGoXEKaFp?KS_KRihmJ"mMDH=(R_(g[WUBRVnm87.R@VonDAhk395\pm)C:SO#<X!V<3*"3XG=FZ6CRq6]eED7R7OYj0)VN$e%l!J$K6sO]cLVKJ?hPi?u9>RZm/srK^]]+V?<EF.Y.C7FuXo43CJIWRs96EJHI'XKFk,"(!a,`$g6AG(A8jloC%pn&d1pc]>hT`[7%pU?cj2dX]d(C(H]p[@JA/jELNI!b/@Ei1cR]]S'5>'3p8/A?CSs-\.OBDqGHB8_E&D83NJ4NjnJ`a"LtiQ@4H^"^rB`OfL?DCmKr%4rQ$`T-j/rXtSX;^H;d]SrB+bO'\qA/su@PEp)<Xm?P5mRsQMH[D)6`^?8SKY2Aak+-'BNHtf%1ZaZ82qs-UQmV%+4^:S^([UQDQ%C]<PSI!=iOb&6i^CZ8aRI(nq(^A@JIBleRfmHG^p[_)-BET(<mbMo)Ogu6K"mH_f.;\+(q04!bc>5S<d`UV+=QZp0s?0o;?ZeO7W%/arRtEG[eOhcSQlf7,D*4Lk2^`h=glQbVs:mF+iiI]bfiH$m._S,Kk*ZnZp8-ZaOig,Zlh4o[5oZb<qe?VN-@Rr<KeQEI,EAt%%a%J"KkK^A2AX\UAkkrnAf%p[<!<[gqn+B4c:1I:'].8+S;skZn"6Vt9T'::#<G_9LZLbie#_oo0nT1&pLW]2/.L9@r"U[pKo;HJ:@h%BC7pp47<\Ehs5MO5MSu"#2>4!R=dS@1#hoLPMoa"2Li(#hke`GS^-eRMp=81G&M-hG.ZH#0+VUt+4dVK/jE[PqJPtLDMN<dO$C1U%p\f.4lcd6#SPOHmXfGfRf_`AJ[%R<ael<^3-hkp"l=$=Q2\2eAXJ4k3Sb4E1EqS,.Hu%]\g?"``"+8)H%psSrDK=ufZutK8iLacN%Y:\s6$h%,g9(V0!X5@Kmj?rL*;"oApF8u7)m:>=phE;nBh7\NS4$T<djc_5B9]Ng">5\dcC-F'nn>2X?4E^*M)RU$lm,dBP2r<hb%p@*WQ+5N"FV9P8I1Fp*/:OfOU=uWWBh:A&sq9/*mh^lHCDSBB/h<=cAr;#I"hPKO4o3q6[D!"6so5XG-4S-!qhClQE>P[gWgN)J4%S%lR^G^XLIH1t?5)gMCppTJf;jnH'?T8-4/?EE%1]!aB-o2PE1Cp`+aSc7hdma]O6\#l:.T_g?W/`,;'?!5m/1-.V0['?1(lpEag%pOgXtW"#Jk(X&RHf2k3)>i/2g00E?neikaaMujCE(Y2Um4)WlGC%h/%j(DBLg$6D.K+Q7PYWk84?)"`+pZ]fr_kh9I@`FdhRA7CO%f;<_`c7MHmRidjYCL7lg,5(>Ba05+.g=2+Wl/d?fqI"GXI;Z1*<$Hi'I;kR5eK&&]+q`Aa%9hK9l/fVWeY0airT<d9s-UG<5D,;`%\o2@o?[9.BH[@98F<pZJqs![JlV!_nG%QQJgs9&jlQ6T`c'DR7g-,AlGDU!6P:1]iSt3fidEAr^Qef8h/,!I.F8t4nfh9r?Fj[4t%GLoksXDb]'(N5`#bf,Y"hWBm%b^Vjgebh/U3G`kcDu31sqsU`9&5Qqr!KL3!pR`gK2eN#dV:W?V2lYPu)bi8t^+\8^H=cj5,=f*-%mgBq:IJa"@@,^a/VdD@2[Dfh+n%mqsYABX*G=ukWD\)1$DCiKXr7&u?FCuDWUQpF]^/FsDs!1c]*_[SseeT=H;\e0gnb'"bF\bPo%<1%eJD&ofTh>@#NPVcm",tsmKq)t0QHfN'%ZgT\o*tNRP@rG_^c1ngGBkcW)P@a].^@ZhniR.392>R6;\A7s#B)M2ogX=+3VCDPf%NJW].i,E\?IHQ?T<g>l35:epAZ/"sMC$TO+AFsRjH9-2Y9)n67USmY-P5Ot5_nDRhH@MPpXi2b@hJ7-BqF\/,905>.g05%-J'_!?%q+KtI]u((c*#\*VNS6O?9gASYOXAfW8A7tq%umULn5g*$`eUKd^?G+J?tVo@,?)J?GSHSK^*:b]&M^9Lk(^Zn0O>KD"hhscW0m/N%8(SQ!DeM7>bGPT1hG6To(9#WM#P???V<V+PkGQ$HL0\&/<S7H,c]:#WLJbc<PrhWGW?9XNU]&_q(d!K3/'6n.@C'XAgAKFuYYV[o%OET`hJhN'Cq!uNeS?eH=*!rf6IL7=b?YdCX/T<>?+N>:4naZ0rF]B`fSD5[p"26O)ZXg2N'4EsPCI[?@S'&6<=gN!RZ")gpVEXji%@Yjks.RYc0rH,gJ;2ckEI=ImRV*(mVWQO(+6toCX0o8ko+OLW$:dn:]e.4PUr;B^+qHSF,/UoEH.rhXMpp,sBiSO,I6:3pL>qYR_%;_l'Mm9YI<GX5GdXRtZ<]'=KTC%L`@hV-u6p*OMM]1H"1j@_Y!Q$_h4hk,>,ZZc/q*(dE6]lb\1dXLm.BeCn@Msmg_fj!llrO05I%IIQi_LpDn!@7MtH2eT.*a36V'B?1jh)`0\)Q+bl8#GV(.Hp%A<P]8Qr/%W=ep?#>g]RTkUj3#iK5F^1,28?Pc?M@K,/8fhUClnqV%>s+)3?^Y?WiQh%nqe]d8qc\LIYObhm5EQQSp1SUGp?$bOh+hQ4G%9=_g08:K>('B8<m[)&*9ZG'W##(eHVlNRW_*D^VQaq/mTP*A%e?]ej]Jn>W[QjfYp#dXFM_la.f'ULBA"6f>1kDOr-]O;tQmSj+'c8uiV2<<!Z[KS0PSQmBSJs]>1O+!>5kUoH:R\B)QMXVkotS\U%?pd!-;ia,G4Dh[!oRZ8/k,ZHs\!jM'Ii5LP*'JQaq[*.![7(r"n%5K=/!#2T<k3'X=^^93qj2Vir7gZ9k0f/H:C5j63X%OeM4A0W%aF;uimT)UR&"?k6pPH<X9@li8s5ZT&030,8>]1:$]ioqbA".qY4aM?pALl)>m[E>3@Fn:0;AO-WLO$D:d9W99hKqKImFMkT,`?Rn%kA$u6hJ1MO*LLo,roE+Ue`HbUQg`:S^O6Kfs(.4V4%H[84ErbOL<.PD;\7"j(^=?:#Ka[&jW=h?O7)?SFsA!UPF@KtRVN;3TBD)/%r7]aU\#um9p5XtZPO&$Q-CArQgAIkmDm)B>^3[?b17A,\pfo1mr8IM#X61F?@;CW_]_diV*qsS@rnr%eA[HnCf6oW+d2n6p=fHH.%gOJm_03p5-Ec#eMfRIE!4F?gQ5B&Q-E;)Gq]B*]b?[c5tqo)G(;:?LDU\OPPiT8c2I/:F=hgIOir*e(PSEh`2/[ftPEH($]UU==T%[gfUCG@]UdhW^/EHG-c\D>Nfe<gkWnCjk\&^3__Yj3IYJ7YcY(re'aR_OXI^0HSKA4;lrN/i\"e@kOtAQ^.gRecr`'od4S@#"q5V%@EtY*Zue@#9tcgKJ9o<Om-cQNL)gN&_X&Yu+'*kDO,\Ab/&*k+X32d!"8/P]_r[e%DK7,M/jC`;TDn>#[.NuX]HbIAn*0G7Q(>hj%G!Nd@.qGPBLfTf`>npd)gV8,c:)j;o4aVD!hJ%JSdFN_loQ%\!SU2C+TGp$p4"ag*00XlLI9HOBp%g&)r8-PST?XQ<KuD[un;b#]%]69`g,(C#hZa[M's05MS@@1PS@bY2Mp%f_D9)dYQUQ)kOQBltC?#?coIBiI)FHa=E34mY?gG@7?,r:h$,51a`'4!jfT3bf.Gjsk8%b2^CbVl"n>IW"E#Xd=B-Y;^+FLgI5Kr8O1Nn]mf-We`pN2o"qYe+tXE)m?dYET`%88X%IYDd;%!qf_YPLQu0!Y@]`*G'i>meFXG*%2[/TT-F%dnJ8c^IEd.93`r:XP)A8dJLT<5?ghp-)iN/'R28:cX]f$cD?XBWThRi,DlYC&$2=9P]D!b"W01V'f4^?>W$Mhgcg1NWn%GOKWk^3W6uh<h&HPn/pn9j1`&SXm<5rU-$OVpB!5H@*h"hnJtsXNB;lfBED2UYU40GIOo)]DjT4c=l77%D2>qiSj"O9sjd036V[[%\iM*>nn_YIR0W0Y_r^()D]aqsL>H5F/q5(Qq<)NSjMd`+m8/Rqk%K,!*F68%(EaC:@#jIBWH7gbIQgq;l)rc=$._KAHM-jOm`,##%Ep(S&98IFk/G8EqmSC\CS-tGH7=Y1_J$qE\0>4m%qK27Fo;J[7lc^-A('h2A0mN9KP5hiZHt>8:5/6s!4h<AVTD=PabtXAu?U$+7%pKu^M*NLDXTe>l=T?G@*U`MY$@*/@o/tIY<q8(MEk*"%tZeG1kAbX`:,dOW]SaE2QCWf@Xp=>NGpKg(qFt\<WPg:F&9l@7Ylc8#>%c,ZroKp>MH2T1HU?<Or4Y._<3*=]`f?h38Z<g2cPHrbnh0D@-2;Gm&NUF\Oo5!,:FmiO_;q==.;h%.IjV8Oc`LN(_W,4,)EA+AsS%k&Fu!qsMSrb1u<Rfu6&!IiMFPF8BOu?!6JFld\WoY!889FZTIgP('h+^Y,18Dh%^,[^p=Ug[XLHn]IW1_r8c*XgQ]5l"eo.&2&G,%ffXY%hk%cQ='%q?*INO;F>od85%h$^WjXq&ZF`+>@kZP!XAIj8iKs!DYHM5\\i@4rFgSI/+3[GEfUSc"hDFYDhQJO"5"J?;;>UO>%JVPIN<33KCmsfGR`#e9K4M60W9e&X#`!<pQp>`@op?pYaj.1BJ/jFtY]O,A+I"eP=4B!/KiKbk)2)UrX_;0=2'g;K"oHJ1MA7e%c%=Br@cFL=`!5n0Q\G31<e(_(D5FSF[[eKm<SoG&33I.AfCLaW%A/_QXBPHM!hpK"b?O1m_<2a(TUDD(aEB5;Sn+'pSmQZf8RIt`(F%Bm/2A;kuQFHZu(+Ua/MjDd:!fV:O""cK-n$0:_LYLkp;^[hL,!em8qdI?.F<57Ho$ihN9@U%.M6'KRUto^Kb-QS/hK]9p/'jPuHH%mZ>rodd6hLCMZW,7AduaK"lF:Ie!9[m-_``=D?:hna+YFeEh@>^5j0$-&u!Dp=AM0ZuE@O_<ZnPrijmh[;d^:'pgf*dd-o/B]\rG%T0#>;3]Ja(?'R)@PoHdY=54UtA1eDD<jUD=`g)OUO']#rTmV(YnAYnmgOH_2(Rgut4<om"3ld"M?TCKO\GL/dk/GR_g;'nuB=5AO%N6(MQ2>ZmtgnZT1\mBd]h;UbFD7Za"Nt8[=3o,@?IkErmc+gSMRCPQ[R$Z$Z\0[G_DsGmF#?WD#k;uc6/>tlS)QeGRc9($JY.NoT%n#\3R%u2B7IF#&j4dg`1*5=KRhJM/\ECako4^J$WrL\kH7=lmOfP]<Ojmc6WFgP3^$-[?Q^1oeT?*>@+h*#Wd``[6[f#iB:7r^9-%89=%,q\eQ9Ui11QXY&rQP&D=Ym[T?QNf@B%#M9('#^tPUUlR&h>M?U#8E[:&X&o6,,Nn@cnWe#cg$IK/."lIH]gs.9g.cXmZfBoV%q=6H8&!e:hmsj'%!Xn>:ikhbglcR\S$Wi5/ipgo^O0,g-X=iB.nqPXhs(WlQDZAK=0)tHlAFAm5dd+&a=(B+LpPZrRpK(Ce5"Q(J%Y;VFg1":/Xs72rBr-$l-FIcSfhcnd?m`NE6j3J`is6$LaZ@Zum>[(=b<bs>^;o+n(:JsA7<28I7NL>-OrlPSg%a[VX/GkEtrW6fo%8(YK#QHm`:4$22dGEUOZQd+r7]_V'qa7h_XQVk*]k"1d"?al'I^4/0"8$p60[Z+mG[l4a<7.mc/<-+8PfU\X_7gK'+C8n\M2_92X%D8`X"+j7YnN(%U9\"pZc4f/\dE1PY8X5icSJn+882W+;SEprRO`?4EQo##Z/QR-hNq`>Ef8'u9)>'PKqnVQgK2/b*`Y2&<dD_KoF%n?f`jh0t=QDKKPD9WNk6FP>#q_bgk]Q'A91p<nksO)SC9pAt/Qe>Dm'$42L]Vn9'Tr?#R`cEI5W^:'L)40)`Gn%U$#1](TIoC)+l%MbcR%_lU%i5'?5"l-\>dlF*1jc"GMS*T)5AC'L"!\2X7!ao,jf2[Q%YI9`?AOR4pM]6(K%qOOh!pQd^=L:>saVl^3ua>TV6j(]a?%J$0^NeifaoXZHd^<k`Z>>cf,P0b0]G,]aGk)^9^<]YCs4]CNJDr,,3h8'.gX=4a=@2D[C\QQL/?/*jD7_-Okp3j:j9lIP*t/NI>.%b9*E;4PF5!FmtK?bh8lq)``n$l9:OrX0(hTDD1Z(>^j6WIHjH,@edV,jRR1f:+qS)mH`TK0-7fMGM^*fU:%A[<(/'3;f;+Ng8!+E%2/epIn@@hbGB^3=\PQt%c+hN)5+BZNl=OoI%;cSV\*lPUU#+Qa\sC*6rH'XKHUftLc0Q&?noJ0)2YX[NR,e4Y?UWBi87ubO3'qlK%Yd)&&)*"n=fCT!AXid/]IC8D&b*o3Z+agaPc,LD0X!=-4pY]Rkg=3%C_i'Ms1JJ\25aWBhM&8OIoXAB7nY3Um'^-I]R[Y#3(qMos%p\NYAKDo;km/OHA4.2dLmsMrfrNj4snsdg65cWs3T+OX63m.>aCGb4N_<>h9_*R[_T\><77%_m\_$==>f#ct/2Ou!cojtnmg&=>p%h$ekRk!DR9fq.b.-6l6PWuMK[s*Gu]pXsgCiN&Y=_:&%M^XX7)[si7NT^X4p'X(k,`tES;,A1M#X8goX507Jb)@E#5d4pS%s6?eY%b3Lg9qeS<o06J8f06/akLljJ5*q.GVF`ohi0\H?@5*`Ws!Gk!6IXsM#Xh_g&2u"3[d)(<E]`[5ukFuNc=Z^*+a%<ItGWa9A/l:!W%f2-"kb_A/gZDS7@Fj^pZ%52$Q@WEUj=j6eF=E<=#'k)eo-$3\@XWo8sdV5>9@M&6AF3ls/.cTjASFX\i(3[:H)nj6OSWWm`H5*3$%PY]r<8-]j@8]S&4XTET&Tf&mm0W-g/Cu27XTK.LOMh2<!DrI0oRr\]j.uD5DS,7:k%Jj7<[,5b7l<f2;%nAHmr,'4)CCFF^JHT1?%Id;7th1FJaHu-0Epfj`eKM"OO%Jh?iV149UXZ#P7rStm0+_$'pW@^*GPE7Nnn3h)ja5*b69]'a7B8caP3]Oc76K;mk)]^O;d;!c-%h!K;".3c,B;A"L$*cLLW[Z>bcS<$a3-/Xuk&XFEcN;L6KCc]JREUNl\A'UXjP'E1)i9`hnk^rX<BX9R2Dse\hDY72(mTCu;2.YN*%.p]bB(YVhpHBhj-M1`_ohR0iLG1qGXkZ"RVmYm9^`]Bf@aa"RY;)Xt&o@NBCB1RljTT1]t2*EOf/p,kgF:Ri#GN[IA.!Qg?\Aq$Q%h(Qn@Ms7g:(30&jAQ+p"B;T!2^n9e&VL=fTT$rh,8"4'ucni3]+3"V1H4J(TlhS./e]u>@Yd;r`caEb$0m-r8eEZGZ"bUm*-f@eA%J32qiB]H,s]hXuJiKM]S^*4e\J>*Z.(REstXNJO3r/Cuk3ulKWF5%`54FO3_CqG0:,Z70/He^\ri$F&&?CKrCD7k;lEc8EN.`#.D%=&(Z$h\tO&:sR(Dg5]@M:h:h&LSG=3maMjaMa9;V6psI0Vki[cg=u&aS1):K7B7mt?KlI>76H^_X\%FGqrgK;ALh<Q`g+<4^>RK6%@)D84Z>q8!UXj\O#b?k:4JQA_VYi57+Atu-m`@gL+%`WM6#do@=C=KHDiCn4G:>XL*+$&DGlnR"-2]Hp"a#1YdM00-`7'_=hBacf%2k!RFps%h66:>PbNS4`R7,Oq#rFn;dnCse<J]FG@s6\8)V-D":m.?"(be!!gdRb)3%D&X'dLXWlZuO0k.#MjJ9+nm&'7#=Wk@96+%bQX(JY8D1b!mJ0m&1kY-6_7N@76QB-PLKUn8d%^EKc(dkF54nTRhEZa3CB8FLc%2iRGg$)n2[(GRc9C8HCea0BV[JQF0YI>LmcHG%.""g!(/LAGeQ-S5k@n7Vppl>AW891sb@>0r'CZ9JRc\i*=Wpq41f?\fQm?sEVo)Q'A1hmt7X(h!X)osLe_MK9DHs3t/6\s+VJ]mX%A^d#A_-$!+k@/K##iatZ4Bne_&7?Pt54Sp<iRlY)RK2_!+>I3u"=/,U[kl>".^6^Y_tOGrn3S`M3?IDg,UN%42&W!&c*^d:o9`t]%)sUmFG^9_tRtF=Br"*KLaWgQ^h(j?p?_dU?PW"DFg41Gnij&cnC#ZO-!M_gMga^8f>_);U"(F#*MiHjCCI16u%"j]_(kl[-Bk)"E%n_2t^bnuW&BhMSKYLh3:qBXNAaV0E)OV_8^&t^nsi]TiOB^OsP+EL+=-qp2mkSDM'fuO6!c"(J8Yr3J+Y2jS=Nq4U7_D>2B\0R5T%$%9`OL7'U4H)GmJ=!rh[fRR'd;$@4H@RN/l[%-95jlWq$eB#k1G`W[PT/,CC+[=hZ`!@(p_U)8*Op4E,3u@GWg5+?[!pE$mi`P!<%!g@]C5VC1s&naZ\i$0Qi`>n]D8HkM+]XA25P"1h#1<K:o#\%)^#]D7kO`XNhSW!)%O]I4Y,+Znt=^7+F;;,!1N?ETs7(e2h1<8#Z%SqFg7l_IUHe)>f`=@[#0Hmp3[O_69s@9nK4HpQ-/0l]GZ!">&IT"5%/!eNr&!MQXS;ZSE_p>N>O]B)o0o5pQ8[K<-i,t&3u"D7/Q%Gp]ZAbjbnuEIs<8?47R_^sp$A1XFJt(((<:"6.!1>%LC25j4`.f5:c5i/'`@gbNXPa%I(:nm'mZ7T`=k,%SPe_G"Wi,3!W0Q[%!g%&=YYq\MTXU&fTlc88-QC)nZ72[p]<Z=nVi@5qCHG2UN?gejuY<87j)4HG!NYOG"C7<ZpUm:oc.N[S#]q-=8mM>5t/WM\3T'MII37%!6E76!07cn[jUF^&<CH7j]d"rVo%J1-8P^P!^M"p);m4W4ocf4%W'4fE8<V\nGnUfiG">dl"(JPJ-6B49!8AYD3r:K/>"&>,oD<"%c0At/gQl%WQXY\.deQ:!;="sNptVp[b$:\>I)>Hkn6:h+MQn#>C[aG36VK&ZOd9djT8O[f!>>Y;2Ieiqb/En7$ut3Y!>VE"2+FOp%]1C5:M&VQ/Uok'@5/j3;n]b<HF9o0(6G=>/XHc^UH$Or$\IXIWK,#$Cj7-tH9e[q[?jJMk!$)H'TScIWX1.YECq&uK<61AN8oA3%%%GlD34qi3hO7j=Oai%6UQ&aIPnkfFu"DeU$i#,'NOslGgAY]^=p>^sRFc*iD"N$@tgaIkQK[Q)f@nSon!8.q"e7p5d0E\uUUJ8%Y%+aN.c5,K4]'JL3^gaYl/)-lY_@&3o=\a]$8fqp`4dd(`JGL?aK=>a2Ib%dsl0&3SG%!4WM#qoU@`+D&R$I'k+i^Y>W`6]r8PSuij%3!(]GK_-g&@7p_X;(<he>U;rsL;f8gk2l(V-+)ZjM#s,&W0mW\Odf\kcP^7qd=NLG??GEg("N]e++>$O8NLrkBp,Ho_C./.!B>o&%@hg#FPUiAdA0Bl5NZ4CVom`EN(s#flFfEkmjWI3`E;YfM:A1PQ$2fm27@]$BS:TLXbJAHO4<I#=Zk]Q!BLV(nAJl'-V_K]8+Go#%%d?nUli.nk%AJ8*R#kLb91GB+S"f*Mj.jLmQ$i3F5.=r;gLrg>9,>p`FV921>-Dp*.NQUb[0OQMeMub2T/1*n+A&ST@)'^?4qoih?%Djd1>`D^W=!hBU[i4\(V"DicMB_bO4K5)#*!gbT%<$-J<'5=14eUeaLo<p=>?Foe6VBta[3aJg;+W1tm2mNI$VG&.aFp8Os1Z`.$%_*"NfKc5L?V_)LYV"n0I4uRRd$-a:l/8Z3[5VCF<6:@W$hK2<!5YNf?*.'Dj!+U,2'i,*CD;m(HZJ^Ot]Z$nlFAQ8ACmEpp`E)XI%g(>%aR-BMSN:SS?=Z&+GS3d;ITBN(]?`Oa>"PjEH/f4[ZGk[bC5$(9iPqQZmIp"tU/:nBff4gC_.=B4ARR%L#RHmsPB4Z@nBAV];%FTR4F-,KI4WTRP1N0!e1@Zp]FNK?A6PF<1`4Le/Hd6Q>k+sXBf"9M5fMubV^=WO'7#XV_!8M`g<_l-#f*I/K>()W4aabaDNS;Ka0%RKMr.KC6`Ii)R_+=:MEjBI&sd\Vb?0MPIL#H=\i"1'hj>B-Ab1_0aJk7?\sjAK;u2CY"$sH($F?eWL8m2NYYRr<cXB_6&:9UI_a/%O4U9a,I/''P/pQG"<b6m'U2WgrOWIfFA:2Y*:ILXeiFAc6E8EN33X1,bA86FL%[)7o9'%+-n0ro0uDM,O@2olqbdlh,e:9SEjcFN%WX+,s0$aN\SOU5JW^AJ$LWUJDi`l]1>qTeu*1P8j8+O2%9`(Yq,Q]c2B\n8A]M/fjW&4]t<^]$cnd)O]?mK?CYS#HMC!5I\-kRpo%[[I$RBi]'R5o(ofG_&sT_uPWmX&t^6068?7,\='8j7%KLQ@PcnOU5-!bDZ[g1-gGR</\:%?Bf(niZUbsi]VW"Lqf`_Wr6&U_.I;:%/<NNc%!8.m4ug/2$V8R/CME#H`(&<WCj:PB4q\6Y"DFn#9(Gr0((iM?6-+`).oo/sd\Y:.iQr7hhFXQ^V!&5G=HJ1iM2tWHW>MA$%ON<;'bIBpN#N;(n'oM]c9Fl(Dp7n=N=%=%eGJa<7h]so@;lEh1X;UE$b:PNA..Y$7)1=,L-5M8-B&p?MAnqTE4+d_<NK^lG!HUOk%-eLh[3/TCLbq@7?R=elO,\+:fg^BNPqACG03%VC>n1HtNG-(7#hZh$('`poM3[_bb[LoBR/>t[`&^OA&#YbDaJ:k(U+d:GfF"*3:%Gs.9A2_qWSodS(XLK,M!F%X1KB&FHcOml$`+:7WeK#FW<CF!_T:(psX1q88?+BIktOu]0kek9O#^06m)\gtdWhj70baPOI$rOrTj%0D7>c6uoS'<XqE3""5$n)F`Rq!$lXne[&0[ER>2pFD=HNpJU,&Mk3bC;Lsq#-kKiM($,Wu+I9og%[;Yeg+bl]ab)R.=,I!2j_7^X%-EN--C>s7@KWUu]5tA:!a4'&;Cj^f9bEkg='OY2nlBm!2!QMdmneT+F&nd2fMADG\\?WmqZAo5/$JXK86t+#[/)aY5ldEbp\tDP+%9o''T`R;:V0Gc&u_"aZ]NSI,Ri+;TU-l'Y*!%#k8G`7I'=>70/&W!CGY^()_?]%"iDf?lP9pf;u;G6!:pVOq_@Ho42S0lCuMQmSk%fRf"^!!aPO<RE'/6;3NRRCPjY1=4#(pY:*m9hY\"b;o:[L#::56rNP(B`h;iB9cnG;KbrBqillJ1Gn(tGsY#jA`]Gq^+`Yp(jMoZ%AP&3VTmb#NU^kf@Bs?N(f86J$YS9-,Z*f)nD\7e\g'7o^8_03TWYc&!$Y%S:ZZ?!i(3L!*56@#0(3^D8jrn4E).IY7C(e-68/`'Z%93M9<AV]t,pRkE(oGD#JH)B.Q>XU9.P!#)^m&&n!J-[>+^(E?';Kg1qor/*"rtkR+,2u`p4n[$c#es"Ma*1ePVktG,7unBQ%SBcr%&essVZ+j9aDaZ'"pVTFO'kJbLTT-r:l!,dfQmPNl`,X/='LMcX7%C3@<^^m\*I78[PS'*58L*cD)oo,O1r_Y!SNAZC5]YREEFq6?%:d@X^BFVu,;a<+HgYi:rX.*5iCj]TQn^S"T7_H^EiM$)[,S"-G;(,nKN#-BIK\^Eo=_G[,:A/A<XV1H#DiAqSCdf#U-AhAH>[iJk%f*`CHOA[G"8jl"oO*0ai,.gDr@'(12Dko<dWJ.N7"qei6QuiqP2uuZ@WV9kJ!"uP?M!HFs*9d%#<&T:*d-*r>a[`W?5(^Waa0IZk%7*iV<_0;=-RSnH#C@&j5bmp4&&o3@>.FO''9fT?G47J0:/+[bWM1_Qp#0t&.,2@KhTaR$U63Y_Mj0ZHe!u5?D,WcC"%71ZiT7Jo<%$9qoqK&$ff#SL(1K=qLB7:aJ/$XX@)B#)=llO;J_*5ZYuJ:,$fEm;E^%#BJI#A50#gaeMnmDuG/kX",0H-@6fK@a=PK?l<Xl&o#i%kT"?$'A&r5%frF((\Z9V!G$;KTpNp5a?d?^J;AXK4q`,8_0(D7a.f'H,h3!T.o&VoE2#<m[meT36l7?ha,q0aM^$t`'(WTN\g(nC%BF^duAUZt93m-"Fc4]@H?Y[pn;r@kNYBj3-?FbVCR3X4)JgY*.`77mF]2\[(bSHr22M'=%<CCG#2p["mXpY(SLcBbfP-J?Xi#FRG%VN/ER3,tQ%D5Vd%6]-!.BGR)1`R=RY/e,IHYP$g0nBbOYK4Ib5FjJ'<5NK'u+m9.>c/X,NN'1kXOkU'OG%LP\+,6IFB(']_=*ZPi%7Y<1@NEYRI^g[]?&I)\J"QtRsVGHAkKG/msI]a>0OeI,4S[9$<8_]VDM*Qs9-3ZAFLl8np4iJ^gL!bu9"/I#T,*80#<Fr>57)Qp_%U*>ka"[M.QJQlI1cH$/9l1dSO*D6A<ftmj8;%?uM15tMfJg7(hM5HoL^^1&P=tdl"W]@;:daJA&RBmYA4DTJOXhoC5%)e*D*u'*>%#mW^LDJKdh>C]!=h!<l2EtEn+ij=@Efne?c[S"HR5pO0WJH,j"79^QX[<Z)8*<Bke;-pMU$:Ub"CD#T_1-)cG!ZDsd0`XY"'K01@%4r6M-1)@Ee$(eS1I%#T(_NJBYJP-8D>ElT0k1!+"&7`@t[FcE^Y'-(j=+![EW35uY6#i(LC4kV73?jB$>*6*G#EL%#9dVuW@)dKF%;UTiD+E_a7eZBIfGE&iUEfih!!QL"8PVuR0K(XGCCk;])T!e\ErK;Q0&ZJlYngs5A]TX476_VGt\qS*gRLqe&?_S\m<JWMhp*r<I%CrDDde*@7>TgB&i)Pt!i0V5(ONu3B&)!RW(?9X\;?<l,@ih-f?rIg)>_5JVMc:gBVAgh"2$R'*JLo`:H^g&FV"<i/#6]lU\LeG</%`5!*noFi&Gn?OM&\P!N5'-M]&)2V1g:(t+4\W=Y.4H"\B_Fug8$\be:&lG&:*$-j]dV._L3)1\5JuX&US&u^f#hFNNYd100RV-39%#"tdP'1a1Td*LjS2'l_=_eb/u8J37/$*J!@^J<2)W]pc(Z;kr=)Sd$VX^2`/gt6;L!iCPe'&)U#]atr9BqnkCM0&&3Mm:VD'e_GC%7K'O)Rm'lfCrT=G&t]BqRd>Vc2_'\EF:B9VT;i1'C/'fSR4@k8NNpr4"ECT)9+jsNO1E1?.7@i32V(o5_0=%a5&gK\\X^cXUcun*%1iTu&`A2Ir?KkS+TEnjr5Xa8@GAPrp^bG6,$HcJ*kDWGDCW-"5#OAJt@Y,d>o1-$'QES-_,hLZrB%q^l&Bg3sETgt^.c,6tUshk/%73$3B_h_Is"GfH6UljLh^n?@-MBU8UV>IS'0r2pFIK@HTI69PP#n`ooF)g6M6i^9UqH1k`eWpimS_(lt&mdre!+FCdZ$,,5jum^#%pYme]Q:]1NOm6gE.L9?*(-k^P-"`/2Q]3[.m3qZI=5T.38<t3OK#f+)V,rD,RgWf!+d&*>#Z;/\iZo+aP:Q6&\Q?^'0natN*0V)k%.R\mqZsS@2l,Mi;:@sNd4s@F6kK*6aa?c?>_23F>-HJYUZ',244"716[?W-Mpg3%Rp.DKL]L6h6*tUT#BF5EXc\chLN.2+7jM`]-%0&I=20KUY%08T"Z7CbP4CF)BYVI`^A=Y>R#=LOUli2is81aF5S`Lu8GX2p,tm)6PeJX.0P)N,4R,Cr'gY8[d[.q>=S@M]I117:Ol%bV6(-!Jq^I=pn119T88BPuIC;gSnGj4,2"GE.N^\E!Rgk(C.$fk5#76L!RQF8q\>`H+b^6eB@iI3&j&\L_`HB#L@ou,@SgK$DZ#n%NWOVUE@GF5&</<E_4:@u3-YM^n@;O(M%a<_=s#qoK\#.^^pMd-!/ai"L,2<qe$kjM/WE\OVo0K#Q*\=1LIs29<d_FmOc!8@n.@1B%#/4O<l=",SMAnp$9A(jDmZ$4h@MeI@;E=U')%C>f7U-$e.^h[#EN'.$JO)8rEE63h`"8gtY&Ue5#kp[HAZAh;*%:qe1PnLMAZY*7%#S&r7]nAkMT:(no`!BKRKA+PdP56+]9W1DHfLp3mO<R#h!gBj[/rp]<>Sdf,>XophJhJ3u:P"-[=R.N/$66^CV@n_o%8R!ZD'gbr%kUD9BE]asY>Oo"-a-6QmcEhF+d_s9SQBe[H>T#!nEbUtr*>ZU+i[@`t9,,<bVH7YU6kJLC83clQj\c>NPf^Iob[^l%P/Cn$K,#%I%l7J)AZ8UoG)V6@*\qPc&]jM-)JQeT,<k\fe^rR6*):odSkaa-J=eo@WNWBo*2p\lRLI2id?Q@uS9O<>g.Zbk(Ta#RE]ke\P_\ZNc%,Vhq26[0m@(WDLRKlkBcN1%)h.aF9=,E>a(=N)C2lfGR5[":u*Yo6f.!EKsM#t%+/)$L7u=Xjo!/+acuRTPbS4'AbYR-;2^[in2:%C9W8"=mk>AGnu0&\%38V3C<_t%?,'ac_84cp=&4[<h2WN81Z+c$QR&^,+2;XG7faij)d1VjA_&Z6892h[]'qP+c\mR1\2W=GTU'7%#'EpWWrGDGgKZ#9ZPp=9A"2#)Td3LjA$JK'N%f:s,YQ1C'Kc23Xl76uNE_K4Y,<NX,>H$4;]>(eK!u47k/qOM3>h5m\H7UTE#>9\%)N3KLY%e&,'FN/&aCVDC*FXIhGY4Zc+QB4oF&cLShIK%!Z,),3"U-B9AX^0=ED<FPeP;hcV6_.r"#F5nLJ,O?@i*WN(H\lnF"ug0%aq!0WK5=0dN("4NYJ>+nP9Eo%"sY^#'LZrUK4&_"m;&;MMUTH&pr-T*\eof1J?[LYdi:W<*c-`p;b/b8:,Jr;5,IVh_ZGP`-\c7T%3`L+NM@9ua#Xi3X*#CpOR-Va52f(<JY7sS/iLq;B)gH%H82hmCC*V;T@]ro_*h3ea+$g;:g!L0ES;DSjI%9'7FW_gdpd8#60`pn)%)'KRKWraR+g_6.16l&BQ6-KnNcU0`d.U&TCod`RHiEK95LaIl[)NOHk6G-FC,q(%u!.pY&J/GI'+R/51P"4Nh"H4oC,cfiG)8Zk#%;XIQs`@Ui1$&gEX@?uMJ"U>5W;hla4/d\3+:AeqVb;3c<:2'^\:a^Ya5.213d6SsX*`\<bHT4:=>Sori_Uk@8*HTAi/kp@C?sVNo%Z2rlC/FKc7@S*B$\'cp@i<R*6WYn*cfSKeUU6ZoVV_B7)e%+t]88b.F/%tS5N,Y4JeY<fYr1d+KJ,l=gPti<j_`&r$e'Eqm6JH*3%ZAp<(Wkjt+)m`e>LXtdk&9n@QfZXEZR%Ii`9XE>q/'=QZP)Dg6H]k?cR7<>*>[c,9Y:+!#_Yp=#6jl:?Ym-3<!D<uF`7@0(0<V"s%EWSoe\VuuYSrSp2cskQCJY]AP=YY?O%rnD\,1os<8*D*R'!Xpi]@`u?fZHU^<r=WSF0Uu<`0B:X4g(0C)B.tA/0X+t@21-"M`qW[%UM?iLJ:J;=-hf7EBsP;Y_^KQ23ao@Kn`1@[YDRN2.qYe1]MgclAn8.&P!H'A#Fm:kN_FC9Aoe*=:^M'i<!e\?J4NdS)-[C7(e*_p%dT4:c,7PTN$mVfOSK)-$A`o#ZE!??D]N6WohP&FDk:]JCrZ[t-^g#JA6_n@hd;]pLQc7t>i,;%Niu(282!p<M))\#'rBHuHfL_lE%Ee6W8GU>Tgpook(PTli[d0^F[ou`(8Z%nPg.lg-Jc#VScCU>D)!Rj/_fk;ii!dUT=C*f#cf>OFf/()]EEBo7@esi,d6UX/Kb4L%^%`8n1jd_&h.oMm%SaXQ$QQt,L'5g3OB1EW741gQ2!(o<j0;^6BELO"Mdk3A&OR*)ZJEIUH!l=o5mCNa*%V3g5,$m7OeA.um`[JSuX%FJ'U&R$utKE@qM_7/6ndE%4>3bX"rEbJcLi:i,gYSmCM=WL,CD1rjgj)(m(k7R*m\)PLf3\tC@8JoJ[6f7Oq<=fSK@R:;F*,a"o]%Rj$FK/Cq&Ii-HMF9j#hD>RuM7C'eJ:f)XN;VWoW)?9DZUnrR&U6r(aj7k;;'K('kM3B8L;J4M(W)9`+:j"lH:PVGDrW`=]!n^XQ3%S@M_o,'^;7;[<_A#U`st8O3PHM]RCZTZ@;-9g'F\?Y1`^bkr#6=o_qd/))Qt0jcIGUHfSTebnK4aCGYT+lQb[/*:eWX[*4Vf!J'U%OYq9:_FnMek":/Hq'9[-["JG^`'5I1.5>lOd]:>m&PHe%YXoI-n:)Un&<E5p<k-qF&lM=Q9RmDCk'UB4Zi[Rq?j89H',=(&gall7%,R.0S#Kd06A0;8>mo%FFo=Qq."V<#oE5Mg/(r)=t-`k7![bAm)Z3LYr8BfL9WsNO#&6!>'<L4&_FgRDH0*)#$bY%4[X7[Y9AXcIa%14,]bjfjTI8GQ,=p]09KR0G##Oua-%&PiRH5A&&'GIEf)a<OMOXR)V%/RKu9RQo?)K2N3ZJ_?3#X=8-0)6.H*PXZ2:fBOtV*''`)%%N1Rhn:nMF7Z*&8:,g+n"2ZejQ/Hi'_&q4kG#O-lV4sFk$dota`1Q3Dc4+4c'"p)Q^1LiO99C4\eMa[0LI!@'9T2%f]qo-r/g-lS%+mKQ5D@dGC.)4:_35G0,7B])fi[ofc/$#X71`782$5d5dN9AS7bRCQVZ#YSo7Nr-pACXhs(Q4>3Q-]c[;i287n>gh@SuR69%JWC1%YXE^bEG*.Eb-m[.P,JhFaf*Z`4So,t7W2$]MiP8OQkH<gi)%?0;D9kVU.>qk'>t%3/B'cn8`BGE0,#HaP2a!j^sCqUbIA9;,j[aL%.U@[?.SL;kRAtd.(aGs=jUBKM2+WPEBK+4bAPNTa#%O!\KL`:6Kr'qLcq>=uGO3tD`97p@r&31sOs4W!Lc$1>&rUCgP<oG`j@"f_%'A;[_*JbXM_/<FfU4KoBpH_#KAOU(^ENYEid1M_feK:]JQm>O#MVGFq?'#761l2qpM#iYon3oh3:uu(A!s]V]?"NkriGe4dTqMmJ%nb>D?AjjTZhaa-BdsGCZOUYbS,a8N\>(iSjeJ:$:^kAc4&0sZWi18ks's9M]/C(KI);3FcC;<\f[^?Jr.:?t&f3/o<;g&Eb34IS`%J1!5!U`\!.**(G3(a=6N0PH$l<JX$_<BuC#5Reg9>4r6Ri#.5b2njs1=kY^30MTI40H0(^q=A=B=5!P0DW//YM8IkPe?C/J@_2X@%2AZu@KBSR'Vfr8\V-s_WT+ieq$k^*!5i`%n;QO]RdE(V>5TZ+t#FC1G7#8RmH,J1s22T*[Q2th^5`Rc0Z'IX-N@%9Zb!V7gOG$P/%JB8]2k_/GUm:$:8=6G`7fq^;j?lAm^@"@N3JC;XM:iC9>8j"%VTMl0fcsV9`[j2JODR.J0`kdZ\S=a;.$?F4@Zres="6mdE`9_>3%%!\0Lf.;VN6Bn=L\_s;l8>=5;X?cncgraT/2a_C2afQQ@bE0(L/mj1ng6OBl@!]$5Xh\n0!iaBT(5.JZ6nA\kM(d^X^GWpG<=&K;%H$ud7j.q49O^8cBaH1!+*AA6q3*nSl(uVNX**YFR,`--pE5netA%rKu$>R!L,/-a(0gTr\6'A&-V_D@C6q0Y4E%I@Pg8p3g3o0o"%W6eL?W<*Y$jb.k05b]ZE<+<:,76in"<c+'nC'bE8V@4$bT<iBTOXS:Wd"GS.$0X.qaKCoV7"aQXWtY+mb&OLkL=U;g$&_DDD`87`%_,B)$8O<L&8ApSGMZ?)TK^NBrQs,%p=\?F1`^,FiOmB"]MN;2%\8>?,R*a0bgaUlgKR-A8F[:F<9t<rSP!%2g)F81-*q@rD+9D4J%\>'9S[MgS0>:%0hFYO"B7C"3gq`$RR/WL!t7rm"DM3;4sGptEI#j:P07fgUc7.,r*<$YNAl$>AHJfBQ=/<,A60uRjt[<4AIS.pHD%`K4MYPek1)UR1Fb1-WQ,j&ip=%O)?_*CHnHLN2[E.Kn4[_WMW!8B*2JjGFm8@CbB!P)K4aM0[)p^0a/;9r>%[Q*@S+VG"0.gm.d+%2-DV4<i9;gE%%Zm\BEiZMec2eHitu.6Z<+!AZRr!7iiW0JCf/KoidSn)1j$[4P(JpE35r&=t(S*/kHeDa,8+]WuD\#9p$#!eGj+B%-PA`O9-W@.%"Lo?;dis"#inaWPu!f)a6f@XR9&mn:ugn=\/fp8!(0p)+C&-%Y7SAZ^*tiE&E.fl+tHkXj_bnAf,0%:Nrr-#;8e?6%+*Kt,j$NTO-@lL6Nd6crF"Afa_J9-C\KTaV3o7eK]k8M]JMhTWr*kR7B^Cm,L,q04ARNJAf<Ces@ppB-&><'^&VPhV^coSR,7?qE%@k0EC#S>/e7PQ$J!C[V/m_W+8LYF\K?i_TYaS^">Ca?ZFX[-""6?$ROjZ#h+.KLHS,/",DamH*bP>J\X?!'3CB0!aD(7Ut=BP<P5%d8d'>Tm,V"b5a\[-&LP@QTF*EZ7cT:I1V!\KSUgIOcg_V]bY"]@3\@a(!iVq7;TEBZAX<1J8m'M'Q2plE=AAW.u@5%1hL*mEMdp;%0TfkqTkn\=MpVr$OkfLO)N"tZk'1I<9[nenBFOs)=mB2`b0CUq'['=C9u_(&E"B`js&*85>XFZ7:@^"E["0o9W*Z<P(a728C]W_A%$2HugQW@>sLKQsrFKTc&&7I6Rks\X)Q.Sk>584bg4.5#i9NB?rbc?i;<7P\BJ1PA-+g-N!$0E^bYD^b`.!=6>.g`)9>KIFrb9HB/%]8AK\.QqH0XUShdd<mbS?<r^OLlI"D>(G7\bJS:AO\h_<,jX3fj\m)IQ:nRDrZ$&Z$n0WkD*6EE0aR*$;DD!.[G?M?^9VR46+iKH%JOS6+^a'=[F$]l2M2$t.fbD>$8;X9E=uM(C6)2AT!YFOt'!u-+iQsP#NFFV]4@fpLU6.*EaDfZD5Z4k9Md-mI?kB6@2M+MVmZPd+%XdW.?W9c-&\m@X,aI?$_2Y^mb7^CX(Kb/2+8<Ij;=pH6PE`KcZC'n@E9Sp=+<E$+,_CIt+'^V$:``N'BO<trA&B^je.2F7Z$<FtO%K'b>eGSG:!E5\^^.Fmnl!&5[0"JK]?+;t&3b.9#e.BSc-<>H"["G7qhl_XY+C4+!'<5]oZo*VXM:AY??;[hh_)A.C$2[(nqik2'6%5U6Fhe4lo-MRk5o(tVJ:X?*2PMfB)uiCM?u_P+>S9"@l3i=s'7Z,),m%+g<aE)kksOOh:=MS^f3DP(b`TO6,D.%F1d'UP:HR-7Ba%M&k/N3!Gq4q<"P*S,sNhO@%b;!'K-ZKt8^8M'Tj%F]/:(DH\q%J5!-0ZttV.GGeJ0dBY3O8T7-IRf\Dco`qC7JP[*512F`u]ocQ8%KXrVJYf*?k7d?j)eg9UXk%I:N6miLf;ZIDZ79MRgE55^*;rC%F'++jXF]/9KJh>0C(_^oo6erGA,gJ8X,a@LkekH0=!c#SX1!i$@%HH47]aG,=][5+Q/9`[p&i1Ng^Xs0oJODu<2Mn1>AK5u9+\0EeqX*oiu#!$G#Ap]c-;[c:TYbso?V\iC0EHtf_Bp<u'!6)6aMK,V%%q1d$@Umk1F,<84uRtTut$D19IViYbhR5otG5t(k^jO)+!`WlmLXIK?Z+B7=/nqC)IV,IBAH5/m5'YlQ=;bO$U,5`aO:,,0[9ppoN%34p[QB+'KB!oi6.$u;_T;Zo^Xq0[_SS1bRkV\gLnN'c'T)FSA=e6m==JWVqX,=GJ!1(("ZSRRI).'9%LUcq-lmueJ<.2&K367Y3P%asm*k6gD%!$6Vp%YZa$jLQL8PI0XBBK2#R[BZdY3.];3XKk$C5;_"[dHFga_gZ-F*J>D0b.g<]2239"]:'!a46>>eYELC9];)ne^%kO[W5jtf7_$Ka1=EXK$UZ>n(1.A[_./#TU6b:?-.bU:_(l3M3h':Ms1Sg'h68oTR&.0)q5?7;>\N5K>5(PdDpH]]8/U2gSs+UKHY%asj3D&_>AZ21X7QWPI"*$NOOeL>jYp^m$KIMW-'IJN+?C61?J'/THE:H3aoO9FIq8N=crm@4\4BQE2Xe.KP4'/lsNk(l:kJgdJY1%$jRb@E[enk;+uf#.EeW>h/NpAV30/pb$l>YW]O;ZQrKBP:'h*QU/7<_ZaRB!W@c=<Tu+C`nkg5TeW&Y\.=_]E.*JLgQKPh_hH]PS%acZtl;ZKD<9_rK!'I3E/@eaa;PS;,;YFf94Ip"XF:^I&^5ab(NKbEW.d[NH22kd&K?o&798Yj5-j`H!s-"L$ZLm5"I;,<Je>[trZ%-1jR5WL%9M[RMiUj[Go2ctlU78/9n[Oac/aH*pX--i%nA\=<P\$aDBB\g88bal,l)-C*j2#ptot"r+V$)J'(S(?2td;8aY-Sjc:K%c#!'MRR<@ecY+@-<'&N1!$hr+?f5k)!]5/$"@^E!8>T%V?3&EOEe^MNUK+1l+%+6a((Q.H%s&&rWBntlCC85&#K?jc[2>YTju0X\%fa1YOoQ,PGb_^1P@>b4sK1h&3OCLi,l3=n2L9h"RAL,Ne#m]$`KIq0eLX8WbPV"NCbP61pUuX_Bd#bsBLdn5>8(&U,=Dlo%7qCC,%dl^6G1ip,GjmC$Sid56%,but>!9fcMeqJIm.-3pm:5*m5C(RP++PdAA;S<)bGpmA79:`g5CJogh\<s*t*oeFf8pDWp4/FkFQ<sqh%/"%B_-!@+SHgE9A9eol5@KR1`aXXJYYi/i;,i"OO$,gOH+p6i!C3;>s-CSn]Psg+W>FY3%bI\e1jB>M9J,o)42?R"`!(>W4TbO_Q%djkLEi*e1DRTp8U<2)#5c6HmK+aO3uX4"=pC<`k/.6LThP#-BCBsq]60pu&2/Mq+2`XEEJ%;&K*1M&odLkS5d<14$08`ZM-=B/sH%I%+5mkqZ$Djm>'Q(p#^URj63n,Mg:-<eKrSS&%sd2DY,B#[^Kj@*YakZ,5Sqi3H2m@a$^H)uUD/bYE*kBG>6uUf>N:!2:)0;(%LM%1=cGkO9K-69pB@K<Nb,o&5M1Q&r%"X.5-luR@#WM>$*]sV%+%c/L>N\;XKgT=.DVo?mOa[5Y=IUl?je3iR"G%+c2U'l<M^d$`-;!%A.'N#$M[r!L41[%R9q(fd%DSEkb6rF)g-P0hJ0BBJUUp2hB<CJO<i67CfYaSXr"Q`lf=d0TG1O*OZ:.HrX^PLC&no3E0XWVa^J"r%,7@p0H%Nk2Z.X]EW0.3I`6((aoFe]gaqN$,%LLK/a&L"S`rX9dnZK^-iZ0D'!2_A@`!jG`K9/?Df`\H"W%EfRAqpg.2''Gs".8-]%TQh,spUK'*WtJUe$P8.l#VHh`o9tdARiQ#K#iDXk+SLV&/dS7PY5ciX'd]sVF]dH)7'7_nhHH:%";2]G'=A8S;+F*h:U&4X!Q]?l%G(?@2i(92Y_aIuR18@k,Tl&^S/Mh-d+C,oi,ls,`/NME#7AhuP5eULr,:]$3"!f_>]**pj0eNh+!1'iY$o8M,%fdfY?+@^.]LN\B%CDP@%J8s'[6TF&&\3e3f>'$7pFekK@eHco>)8ac2&5`]SY!?s\ObRQc0JNhf\6!*K_&[b%Z.a0`3^l9CQ\,!@s)s\BhHM`,&?5#r%'jK$:%_gqs<@GHtCs=L\$Y:+YBeG9D`GA!8BVLo&L`NK]_QHjHZ?:tUk2\e_[6kl96o%A52Dh4rNAQ'JDkfH^]AncE!cqntbD!KI%_<!'Z.rnP$&.j\N6W=j+i5Ogs2<*+?NmQ^7F&2u>0O,Cu9H6&+J4N,<PY8<YH2nj\9Tq:=0Zt+%\q`OV5ih&\3,'*\KurFSJqW[I%WmK`b6H4;bXXRVN!G,qT,!6]K-qm((<C[V[QSV>DG'Z`;W-6b8i9iqM$m8a;:.*DZO<U$f#35HAGbe#OUUV$PFJLAa`jkM$$*t"X%Yjab$gHg7+'o4@/d]\1@A9VU,bq9$\OX`mF/#17EJhb+n/6AlA]W9tE0!Zck3+e9XU9-25n)Zg&\n7t7b;:KQS5^8%AVu=W;Br!K%\h)?be@/p1&#:=`GUs%1)bLKm;h,jE,hSDiCB6[Bc%</&7HL5mP+&$,'o*?K,KWXk@r`TA5RG/caanSl@n(J_+=#QsKC''=@6#5I%3oYH$JE3C*1ai*W7/"T*KP/]t[=/akD_+"$3=9b@r][B[J>`l2OoPom,Yk]R;TqcAC'nDTTj'1V(1naKj#)[qb8OZTX3o3Oo;qXW%ksAV\AYL*oXRu)3c>ojdPaC"sLC@Z;#T%]pc2g3$0At#cM[/UbkE8YM%(jb$`_NC-d/ae>9@G<S<AHtK27-D;j`44%@Y.fgY$kgL%]i'PubdDB]D'*b<=H7p^"F,td7kADkYZ5/^5c[3#=KR0G11iX,,84DfUYHY.&mn_sU[o8*Sdm+SF:&C3;@4G`iaE!Y]M($M;g,NP%S=Y$7:b]s7=HktdE'&S&/\f,aMuS=(&UHGDVWO?^O%DC7W=nJ9=^:j/m8d7TZM`iZ;JcR4ipuY0`q"h_Z3,#IMmZeO-e15^`F17X%?9&&0o!MN$PV-D:(8aSMA&S+9J;>3O-P!cr(2ca(p#2r&F@3I8/1L&EX\l^$%gDP.6n87Nh,*`bEp:^o%Y`0E5:Fr)PM:?*62+Q"%<GKSTUh*95+I_E,WMn`JSf37aoVJ1sO?6,#*?Z=;b/HXXg;?i]P?NbO:L/"1:r([p]EaVj$82VU@*8]djD'irg1<)%_$2=B^_#@/%[_1S_5]K-6:Cq63CG(Vn`6@_AD5sQOQ;[lF!Zl=l0d*`-[hg\$!E;Im>83b6@Yio)eH2=mBO\\Bcn>aMXjX4oL5>HTJ943h"FYn,%0QF(E"f=#1-'PR&:r($?$Vn7..<4"P+LDE'&-V!i/O.RY)8R<\"GjPo_/E84Q=8ba?aaPQ"!WV=lK'IX)C1=G`MtW3,Ko<Oeu;rN%h_RapIk,[0!0\m15mg_CDor@(_p*nCLiS"ljH7pY/=ZoL/J\S$U`<#C%Qt+E[V2SXGDWAB03B%R:8q00Q4oB!'aPViP>2HN&lQS@%jA$ko[kW>WeZ(SH?b2)Ma/pYf5k*CSXHH)t8BC?AI,;ho.>^*_9dVfGQCh>21(*",0h"p6HG'G;Mg+5)%(IQQLt"^E'QD0l^(qcD%c..3oU/e'spi*L`LSOr7q?/.O<K;G6V5F?V7utN`-ht"]R8jB>=\_-o0ugVoR>FQ?&MHq.1*d2[N(2g^j&`^K>b8f,BK>+'+^,Y>%+d,'hhI,TF*d'&f`fNTGl#=-k!+e!Y"AUYpC?6Yj>8Y415lg?bIp57f>TU(P^/Vr\O\7G2>"/fkV:(4^9F)*r(;D,RJP<stpoR^3%Ij,O$[9>CZ29lj1$^hg1)0<Z?J;CSoIBBl66\K_1C$@J\Vr=W_P%_QJa&=c>\34?7V$BO'?`lD+%(#dk"%T`)]MI$7aosnP:?'XN%JiV7T9BIMBCC>Ot5$dm*V/^Gs(DU^&-?cOm`!%CoYGmp82H>RQlmuKn@H"Ys>D6c#.3;c^D(a4--agUE#&)h_4RZZ;rq_^">*-k)%KA3uqCX`%9!0LsX!23EOrL5o)eQ-!LiF-[9Pn5lV&mc*<7pPC=&(Q5i32$>o`MoPN:)<<@E54dXq.*bN:p=VuW-0JjPg[:W<)_&!%.ae<:N"C>0JFaQF.)]:#R4k7KO?Cq:'ej&A(atUCH5$abm0,me,SMcR/"bkg=h\I_:1KSfl3V,?+F8g`PpLNhiM6p`c7\1[LHJN%%8T?]0jsKpnU0p@XTu=+q7tKYn`=A+h>R!Z4`c.FNNZ\_;oV4G2VGFW'`<Jg]%gbOkE5J"3]TG>7WWhbjdFoECP(=`*+\&\.qA$4S%JId:pp[t7"'+gtT[BSHEfO/P7]t!$tA?$u>]N<=>@KJt)<:#I]T5oYgG#HI\'mFnIDF6&:;Q9PhBVNg'EK26g?[S`\nV(FanVRmu%^'"_Q3VAArX[9!l5bOAB+q?/^nl2>W40S?!@'FbRiIZ-$`2M]_3d1!+Uf'AsrN`_(.c0j&LfMMR.Z'(a!`F\HYm1]n&<EI+MGs64%qab(miRd'Cbn>Ui@Nh<m$mNc5i.V@GMsB>[.]Gl'5%$i541SV:s52?AX>C=gd4`R*j:]g,+e*#Oa\ea`:saih2[MBA6!?j<inrMb%hFnTr::!O'R@Tb:H1Q4Qg=U=R+-rGRhAI+`/6^2VYi+*`S=bhh[JFus"ASdu>WgC^$#-^h;1lN*jj#-%q%>29PG+`ZL(gRRO9"p`%oqfgpA',h]*RkB-`;#;C[#@)lY_B*S`ZUWic-)i'cJ>I5)Ln.-)Si#7NiF:8G?Fd]Y%PhA6?=8d=``k=Mp^aG;!0A`_JAD&7&ZQK%)?hFG`l:Yb3Ub-c]sD;7=ih!C;N2]-Ek5e+#GdNn%"e-[[3@)PXB*MWAS)1j-eOQ:jYF35,].:/Sp7Qm7\#%OV1Ls1Ypqm3!g@;W%)c?7o.[ac+epqI*.b4Ts.apXjKKUr>2EhaM@==8/ZdKJ,[Lm-TI5i;>fOu,T[qX9b-'qc!KnhLL<`"#=.m9r#q2CFU!c(sH3Y%_+%[s$P+;"Y8Mg/#%cLB&UNLKdoK)SK.V11etFZF%=t#1ES83Q@FXb<M/$f>ni"AKWaY?cA#!"UPWqFoS3@M^KRP1,&7^9pY@.bP_/b%>@2$^eST\:m5F;0B,DGCX=3N6mI2h'miTH7D%HTsOS?BCrn&<JcdOQCFrV"4rA`kn\,A62V]gM7;692'Z=!Pr/2.~>%AI9_PrivateDataEnd